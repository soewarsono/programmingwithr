<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <author>AbdulMajedRaja RS</author>
    <title>How-To on Programming with R</title>
    <link>/categories/how-to/</link>
    <description>Recent content in How-To on Programming with R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; 2019. AbdulMajedRaja - All rights reserved.</copyright>
    <lastBuildDate>Wed, 07 Aug 2019 08:10:10 +0000</lastBuildDate>
    
        <atom:link href="/categories/how-to/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Extract Top Reddit Posts of #rstats in 3 lines of R Code </title>
      <author>AbdulMajedRaja RS</author>
      <link>/extract-top-reddit-posts-of-rstats-in-3-lines-of-r-code/</link>
      <pubDate>Wed, 07 Aug 2019 08:10:10 +0000</pubDate>
      
      <guid>/extract-top-reddit-posts-of-rstats-in-3-lines-of-r-code/</guid>
      <description>


&lt;p&gt;This post is kept (literally) minimal to demonstrate how simple is this hack using R (of course could be simple in other languages too). This is also to establish a point that R has got use-cases beyond statistics and data-mining.&lt;/p&gt;
&lt;div id=&#34;objective&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Objective&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rstats&lt;/code&gt; subreddit is one of the popular sources of R-related information / discussion on the internet. We’re trying to extract the top posts of &lt;code&gt;rstats&lt;/code&gt; subreddit.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;data-format&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data Format&lt;/h3&gt;
&lt;p&gt;Lucky for us, Reddit offers a json file for every subreddit (also post) and we’ll use that here.&lt;/p&gt;
&lt;pre class=&#34;html&#34;&gt;&lt;code&gt;subreddit url: &amp;quot;https://www.reddit.com/r/rstats/&amp;quot;
subreddit json: &amp;quot;https://www.reddit.com/r/rstats/.json&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;jsonlite-action&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;jsonlite @ Action&lt;/h3&gt;
&lt;p&gt;The package that will help us in this endeavor is &lt;code&gt;jsonlite&lt;/code&gt; (by &lt;strong&gt;Jeroen Ooms&lt;/strong&gt; and Team) for parsing &lt;code&gt;json&lt;/code&gt; files and feeds. It’s got a sweet function that &lt;code&gt;fromJSON()&lt;/code&gt; that parses a json file and stores the result in a &lt;code&gt;list&lt;/code&gt; object. Ultimately, we can find the required information - &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;url&lt;/code&gt; of the subreddit in there.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(jsonlite)

reddit &amp;lt;- fromJSON(&amp;quot;https://www.reddit.com/r/rstats/.json&amp;quot;)

(top10 &amp;lt;- reddit$data$children$data[1:10,c(&amp;quot;title&amp;quot;,&amp;quot;url&amp;quot;)])&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##                                                                                                                                                            title
## 1                                                                                         Beginners Cookbook for Interactive Visualization in R with highcharter
## 2                                                                                                                                           Chaos game animation
## 3                                                                  Knitting an R Notebook to pdf- how do you wrap r code so it doesn&amp;#39;t overflow across the page?
## 4  Taking a basic college stat class that does a lot of its work in R this fall... what would be a good way to learn/prepare myself going in with no experience?
## 5                                                                                                            Dealing with February heatmap, and 2 value heatmaps
## 6                                                                                                Logging into your Rstudio Environment from Any Browser: Amazing
## 7                                                                                                                    Creating a figure showing ratios on a line?
## 8                                                                                                                 Using expressions in cowplot plot_grid labels?
## 9                                                                                                              help needed with r -integration package with SPSS
## 10                                                                                                                                        Significance test in R
##                                                                                                         url
## 1  https://www.programmingwithr.com/beginners-cookbook-for-interactive-visualization-in-r-with-highcharter/
## 2                                     https://www.reddit.com/r/rstats/comments/cn4ym1/chaos_game_animation/
## 3          https://www.reddit.com/r/rstats/comments/cn6pok/knitting_an_r_notebook_to_pdf_how_do_you_wrap_r/
## 4        https://www.reddit.com/r/rstats/comments/cmuy42/taking_a_basic_college_stat_class_that_does_a_lot/
## 5       https://www.reddit.com/r/rstats/comments/cmylmk/dealing_with_february_heatmap_and_2_value_heatmaps/
## 6                                                                   https://jagg19.github.io/2019/08/aws-r/
## 7               https://www.reddit.com/r/rstats/comments/cmsqkr/creating_a_figure_showing_ratios_on_a_line/
## 8            https://www.reddit.com/r/rstats/comments/cmsvc0/using_expressions_in_cowplot_plot_grid_labels/
## 9         https://www.reddit.com/r/rstats/comments/cmtruo/help_needed_with_r_integration_package_with_spss/
## 10                                  https://www.reddit.com/r/rstats/comments/cmx3v0/significance_test_in_r/&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;lines&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;3-lines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Load the library&lt;/li&gt;
&lt;li&gt;Retrieve and Parse the json file&lt;/li&gt;
&lt;li&gt;Extract the relevant information for the list object&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;This post while is primarily intended to demonstrate the simplicity of R and &lt;code&gt;jsonlite&lt;/code&gt; for json parsing, it can also be used to automate such a script to email or send notification about top 10 rstats subreddit post at a scheduled interval.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/rstats/&#34;&gt;rstats reddit&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/jeroen/jsonlite&#34;&gt;jsonline - Github&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;em&gt;If you like &lt;a href=&#34;https://www.programmingwithr.com/&#34;&gt;our posts&lt;/a&gt;, Please share it with your Friends and Network. Use &lt;a href=&#34;https://www.programmingwithr.com/index.xml&#34;&gt;our RSS Feed&lt;/a&gt;, to subscribe for latest update from &lt;a href=&#34;https://www.programmingwithr.com/&#34;&gt;programmingwithr.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to make Square (Pie) Charts for Infographics in R</title>
      <author>AbdulMajedRaja RS</author>
      <link>/how-to-make-square-pie-charts-for-infographics-in-r/</link>
      <pubDate>Tue, 06 Aug 2019 10:10:10 +0000</pubDate>
      
      <guid>/how-to-make-square-pie-charts-for-infographics-in-r/</guid>
      <description>


&lt;p&gt;Are you looking for some unique way of visualizing your numbers instead of simply using bar charts - which sometimes could be boring the audience - if used, slide after slide? Here’s Square Pie / Waffle Chart for you.&lt;/p&gt;
&lt;p&gt;Waffle Chart or as it goes technically, Square Pie Chart is just is just a pie chart that use squares instead of circles to represent percentages. So, it’s good to keep in mind that this is applicable better for Percentages. Also, Square Pie Chart is a good chart to be added in an Infographic where such visualizations are common but in a corporate set up, I guess this wouldn’t find its day or probably, show up only rarely.&lt;/p&gt;
&lt;p&gt;We’re going to use &lt;a href=&#34;https://github.com/hrbrmstr/waffle&#34;&gt;Waffle&lt;/a&gt; package by the well-known &lt;a href=&#34;https://github.com/hrbrmstr&#34;&gt;boB Rudis&lt;/a&gt;.&lt;/p&gt;
&lt;div id=&#34;installation-loading&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Installation &amp;amp; Loading&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;waffle&amp;quot;, repos = &amp;quot;https://cinc.rud.is&amp;quot;)
# or
devtools::install_git(&amp;quot;https://git.rud.is/hrbrmstr/waffle.git&amp;quot;)
# or
devtools::install_github(&amp;quot;hrbrmstr/waffle&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;strong&gt;Make sure you install using any of the above methods and not from CRAN, as CRAN Package isn’t the latest one&lt;/strong&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(waffle)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Loading required package: ggplot2&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning: package &amp;#39;ggplot2&amp;#39; was built under R version 3.5.2&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;use-cse-stack-overflow-dev-survey-women-respondents&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Use-cse: Stack Overflow Dev Survey Women Respondents&lt;/h3&gt;
&lt;p&gt;My opinion, with visualizations, the trick is to use the right visualization for the right set of data rather than simply using any because of our fondness. Said that, to make Square Pie Charts let’s try to visualize the percentage of Women respondents on &lt;a href=&#34;https://www.kaggle.com/nulldata/hacker-women-in-tech-hackerrank-analysis&#34;&gt;Hackerrank 2018 Developer Survey&lt;/a&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# reference: https://www.kaggle.com/nulldata/hacker-women-in-tech-hackerrank-analysis

hr_wo &amp;lt;- data.frame(
  Gender = c(&amp;quot;Male&amp;quot;,&amp;quot;Female&amp;quot;),
  hr_percentage = c(83,17),
  stringsAsFactors = FALSE)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;waffle-in-action&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Waffle in Action&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(waffle)
library(ggplot2)

  ggplot(data = hr_wo, 
         aes(fill = Gender, values = hr_percentage)) +
  geom_waffle(n_rows = 10, size = 0.5, colour = &amp;quot;#ffffff&amp;quot;,      flip = TRUE) +
  scale_fill_manual(values = c(&amp;quot;#f59cbf&amp;quot;,&amp;quot;#00daff&amp;quot;)) +
  coord_equal() +
  theme_minimal() +
  theme_enhance_waffle() +
  labs(title = &amp;quot;% Male &amp;amp; Female - Survey Respondents &amp;quot;,
       subtitle = &amp;quot;Hackerrank Developer Survey 2018&amp;quot;,
       caption = &amp;quot;Plot made using `waffle` - R package&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-06-how-to-make-square-pie-charts-in-r_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;That’s a really beautiful plot - aesthetically and also it’s good enough (or IMO better than a typical Pie Chart) in repesenting a realistic picture of the percentages. This ends this quick tutorial to make visualizations with waffle / square pie charts when dealing with percentags.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/waffle&#34;&gt;waffle R package&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Interactive Visualization in R with apexcharter</title>
      <author>AbdulMajedRaja RS</author>
      <link>/interactive-visualization-in-r-with-apexcharter/</link>
      <pubDate>Sun, 04 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/interactive-visualization-in-r-with-apexcharter/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/apexcharts/apexcharts.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/apexcharter-binding/apexcharter.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;Interactive Visualizations are powerful these days because those are all made for web. Web - simply a combination of &lt;code&gt;html&lt;/code&gt;,&lt;code&gt;css&lt;/code&gt; and &lt;code&gt;javascript&lt;/code&gt; which build interactive visualizations. Thus, paving way for a lot of javascript charting libraries like &lt;code&gt;highcharts.js&lt;/code&gt;, &lt;code&gt;apexcharts.js&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;code&gt;htmlwidgets&lt;/code&gt; of R, many R developers have started porting those javascript charting libraries to R and &lt;a href=&#34;https://www.dreamrs.fr/&#34;&gt;dreamRs&lt;/a&gt; is one of such leading Developer groups working on the intersection R + Web. In this post, We’ll learn how to use the R package &lt;code&gt;apexcharter&lt;/code&gt; which is developed by &lt;strong&gt;dreamRs - Victor Perrier and Team&lt;/strong&gt; to make beautiful interactive visualizations that are based on &lt;code&gt;apexcharts.js&lt;/code&gt;&lt;/p&gt;
&lt;div id=&#34;apexcharter---intro-installation-loading&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;apexcharter - Intro, Installation &amp;amp; Loading&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://apexcharts.com/&#34;&gt;&lt;code&gt;apexchart.js&lt;/code&gt;&lt;/a&gt; is a modern JavaScript charting library to build interactive charts and visualizations with simple API. &lt;code&gt;apexcharter&lt;/code&gt; is built as a htmlwidget (R Package) for &lt;code&gt;apexchart.js&lt;/code&gt; and the API design is inspired by &lt;code&gt;highcharter&lt;/code&gt;. &lt;code&gt;apexcharter&lt;/code&gt; requires RStudio &amp;gt;= 1.2 to properly display charts.&lt;/p&gt;
&lt;p&gt;Install the stable version from CRAN with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;apexcharter&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Or install the development version from &lt;a href=&#34;https://github.com/dreamRs/apexcharter/&#34;&gt;GitHub&lt;/a&gt; with:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;devtools&amp;quot;)
devtools::install_github(&amp;quot;dreamRs/apexcharter&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once successfully installed, &lt;code&gt;apexcharter&lt;/code&gt; can be loaded using&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(apexcharter)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;simple-example&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Simple Example&lt;/h3&gt;
&lt;p&gt;The main function of &lt;code&gt;apexcharter&lt;/code&gt; is the &lt;code&gt;apex()&lt;/code&gt; function whose first argument is &lt;code&gt;data&lt;/code&gt;. Thus, enabling the support of pipe &lt;code&gt;%&amp;gt;%&lt;/code&gt; operator. The second argument is &lt;code&gt;mapping&lt;/code&gt; - aesthetics (x &amp;amp; y) and the third one is &lt;code&gt;type&lt;/code&gt; of the chart - which takes multiple values like &lt;code&gt;scatter&lt;/code&gt;, &lt;code&gt;bar&lt;/code&gt;, &lt;code&gt;line&lt;/code&gt; and much more.&lt;/p&gt;
&lt;p&gt;Let’s take R’s in-built &lt;code&gt;mtcars&lt;/code&gt; dataset and draw a simple bar chart.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(apexcharter)
library(tidyverse)

mtcars %&amp;gt;% 
  count(cyl) %&amp;gt;% 
  apex(type = &amp;quot;bar&amp;quot;,
       mapping = aes(x = &amp;quot;cyl&amp;quot;, y = n))&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:100%;height:350px;&#34; class=&#34;apexcharter html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;ax_opts&#34;:{&#34;chart&#34;:{&#34;type&#34;:&#34;bar&#34;},&#34;series&#34;:[{&#34;name&#34;:&#34;n&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:11},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:7},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:14}]}],&#34;dataLabels&#34;:{&#34;enabled&#34;:false},&#34;plotOptions&#34;:{&#34;bar&#34;:{&#34;horizontal&#34;:true}},&#34;grid&#34;:{&#34;yaxis&#34;:{&#34;lines&#34;:{&#34;show&#34;:false}},&#34;xaxis&#34;:{&#34;lines&#34;:{&#34;show&#34;:true}}}},&#34;auto_update&#34;:true},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;p&gt;Now, that’s a beautiful interctive chart. Let’s go ahead and see a few more examples of something bigger than a simple bar chart.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;building-interactive-heatmap-correlation-plot&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Building Interactive Heatmap / Correlation Plot&lt;/h3&gt;
&lt;p&gt;Let’s try to visualize a Heatmap (of Correlation Plot) of numeric columns of &lt;code&gt;mtcars&lt;/code&gt; dataset. To do that, we’ve to first select the numeric columns which we’ll do with &lt;code&gt;select_if(is.numeric)&lt;/code&gt; and then we’ve to build the correlation matrix which the base-R function &lt;code&gt;cor()&lt;/code&gt; does it smoothly.&lt;/p&gt;
&lt;p&gt;Now that we’ve got a &lt;code&gt;matrix&lt;/code&gt; let’s convert it to a &lt;code&gt;data.frame&lt;/code&gt; and for us to draw a heatmap - we need 3 things primarily:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;x-axis - categorical&lt;/li&gt;
&lt;li&gt;y-axis - categorical&lt;/li&gt;
&lt;li&gt;fill value - continuous&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, we’ll convert the rownames of the resultant dataframe to a column and then &lt;a href=&#34;https://www.programmingwithr.com/how-to-reshape-a-dataframe-from-wide-to-long-or-long-to-wide-format/&#34;&gt;convert the wide format data into long format&lt;/a&gt; using &lt;code&gt;pivot_longer()&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;At this point our data is in the desirable format for a heatmap. Simply for aesthetics improvement, let’s round off the correlation values.&lt;/p&gt;
&lt;p&gt;Finally, we’ll use our &lt;code&gt;apex()&lt;/code&gt; function with &lt;code&gt;type = &#39;heatmap&#39;&lt;/code&gt; that gives us a color-filled heatmap (that’s also interactive).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(apexcharter)
library(tidyverse)

mtcars %&amp;gt;% 
  select_if(is.numeric) %&amp;gt;% 
  cor() %&amp;gt;% 
  as.data.frame() %&amp;gt;% 
  rownames_to_column(&amp;quot;col&amp;quot;) %&amp;gt;% 
  pivot_longer(cols = -col, names_to = &amp;quot;type&amp;quot;) %&amp;gt;% 
  mutate(value = round(value,2)) %&amp;gt;% 
  apex(type = &amp;quot;heatmap&amp;quot;,
       mapping = aes(x = col, y = type, fill = value)) &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:100%;height:350px;&#34; class=&#34;apexcharter html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;ax_opts&#34;:{&#34;chart&#34;:{&#34;type&#34;:&#34;heatmap&#34;},&#34;series&#34;:[{&#34;name&#34;:&#34;mpg&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:-0.85},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:-0.85},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:-0.78},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:0.68},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:-0.87},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:0.42},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:0.66},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:0.6},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:0.48},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:-0.55}]},{&#34;name&#34;:&#34;cyl&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:-0.85},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:0.9},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:0.83},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:-0.7},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:0.78},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.59},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:-0.81},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:-0.52},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:-0.49},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:0.53}]},{&#34;name&#34;:&#34;disp&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:-0.85},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:0.9},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:0.79},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:0.89},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.43},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:-0.59},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:-0.56},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:0.39}]},{&#34;name&#34;:&#34;hp&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:-0.78},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:0.83},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:0.79},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:-0.45},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:0.66},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:-0.72},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:-0.24},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:-0.13},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:0.75}]},{&#34;name&#34;:&#34;drat&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:0.68},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:-0.7},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:-0.45},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:0.09},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:0.44},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:0.71},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:0.7},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:-0.09}]},{&#34;name&#34;:&#34;wt&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:-0.87},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:0.78},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:0.89},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:0.66},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.17},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:-0.55},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:-0.69},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:-0.58},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:0.43}]},{&#34;name&#34;:&#34;qsec&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:0.42},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:-0.59},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:-0.43},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:0.09},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:-0.17},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:0.74},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:-0.23},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:-0.21},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:-0.66}]},{&#34;name&#34;:&#34;vs&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:0.66},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:-0.81},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:-0.71},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:-0.72},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:0.44},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:-0.55},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:0.74},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:0.17},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:0.21},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:-0.57}]},{&#34;name&#34;:&#34;am&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:0.6},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:-0.52},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:-0.59},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:-0.24},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:0.71},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:-0.69},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.23},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:0.17},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:0.79},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:0.06}]},{&#34;name&#34;:&#34;gear&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:0.48},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:-0.49},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:-0.56},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:-0.13},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:0.7},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:-0.58},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.21},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:0.21},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:0.79},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:1},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:0.27}]},{&#34;name&#34;:&#34;carb&#34;,&#34;data&#34;:[{&#34;x&#34;:&#34;mpg&#34;,&#34;y&#34;:-0.55},{&#34;x&#34;:&#34;cyl&#34;,&#34;y&#34;:0.53},{&#34;x&#34;:&#34;disp&#34;,&#34;y&#34;:0.39},{&#34;x&#34;:&#34;hp&#34;,&#34;y&#34;:0.75},{&#34;x&#34;:&#34;drat&#34;,&#34;y&#34;:-0.09},{&#34;x&#34;:&#34;wt&#34;,&#34;y&#34;:0.43},{&#34;x&#34;:&#34;qsec&#34;,&#34;y&#34;:-0.66},{&#34;x&#34;:&#34;vs&#34;,&#34;y&#34;:-0.57},{&#34;x&#34;:&#34;am&#34;,&#34;y&#34;:0.06},{&#34;x&#34;:&#34;gear&#34;,&#34;y&#34;:0.27},{&#34;x&#34;:&#34;carb&#34;,&#34;y&#34;:1}]}]},&#34;auto_update&#34;:true},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;building-interactive-time-series-line-graph&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Building Interactive Time-Series (Line) Graph&lt;/h3&gt;
&lt;p&gt;If there’s a plot where Interactive Charts are incredibly valuable, I think it’s Time-Series Graph where labelling on traditional (static) chart would sometimes make the chart clunky and less readable.&lt;/p&gt;
&lt;p&gt;Let’s build an Interactive Time-series plot with the &lt;code&gt;apexcharter&lt;/code&gt; library. As you can see below, all it takes is a dataframe with a column denoting the &lt;code&gt;time&lt;/code&gt; field and another column with the actual &lt;code&gt;value&lt;/code&gt; for that time.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(apexcharter)

df &amp;lt;- data.frame(Y=as.matrix(EuStockMarkets), date=time(EuStockMarkets))

df %&amp;gt;% 
  apex(type = &amp;quot;line&amp;quot;,
       mapping = aes(x = date, y = Y.DAX)) &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:100%;height:350px;&#34; class=&#34;apexcharter html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;ax_opts&#34;:{&#34;chart&#34;:{&#34;type&#34;:&#34;line&#34;},&#34;series&#34;:[{&#34;name&#34;:&#34;Y.DAX&#34;,&#34;data&#34;:[{&#34;x&#34;:1991.49615384615,&#34;y&#34;:1628.75},{&#34;x&#34;:1991.5,&#34;y&#34;:1613.63},{&#34;x&#34;:1991.50384615385,&#34;y&#34;:1606.51},{&#34;x&#34;:1991.50769230769,&#34;y&#34;:1621.04},{&#34;x&#34;:1991.51153846154,&#34;y&#34;:1618.16},{&#34;x&#34;:1991.51538461538,&#34;y&#34;:1610.61},{&#34;x&#34;:1991.51923076923,&#34;y&#34;:1630.75},{&#34;x&#34;:1991.52307692308,&#34;y&#34;:1640.17},{&#34;x&#34;:1991.52692307692,&#34;y&#34;:1635.47},{&#34;x&#34;:1991.53076923077,&#34;y&#34;:1645.89},{&#34;x&#34;:1991.53461538462,&#34;y&#34;:1647.84},{&#34;x&#34;:1991.53846153846,&#34;y&#34;:1638.35},{&#34;x&#34;:1991.54230769231,&#34;y&#34;:1629.93},{&#34;x&#34;:1991.54615384615,&#34;y&#34;:1621.49},{&#34;x&#34;:1991.55,&#34;y&#34;:1624.74},{&#34;x&#34;:1991.55384615385,&#34;y&#34;:1627.63},{&#34;x&#34;:1991.55769230769,&#34;y&#34;:1631.99},{&#34;x&#34;:1991.56153846154,&#34;y&#34;:1621.18},{&#34;x&#34;:1991.56538461538,&#34;y&#34;:1613.42},{&#34;x&#34;:1991.56923076923,&#34;y&#34;:1604.95},{&#34;x&#34;:1991.57307692308,&#34;y&#34;:1605.75},{&#34;x&#34;:1991.57692307692,&#34;y&#34;:1616.67},{&#34;x&#34;:1991.58076923077,&#34;y&#34;:1619.29},{&#34;x&#34;:1991.58461538462,&#34;y&#34;:1620.49},{&#34;x&#34;:1991.58846153846,&#34;y&#34;:1619.67},{&#34;x&#34;:1991.59230769231,&#34;y&#34;:1623.07},{&#34;x&#34;:1991.59615384615,&#34;y&#34;:1613.98},{&#34;x&#34;:1991.6,&#34;y&#34;:1631.87},{&#34;x&#34;:1991.60384615385,&#34;y&#34;:1630.37},{&#34;x&#34;:1991.60769230769,&#34;y&#34;:1633.47},{&#34;x&#34;:1991.61153846154,&#34;y&#34;:1626.55},{&#34;x&#34;:1991.61538461538,&#34;y&#34;:1650.43},{&#34;x&#34;:1991.61923076923,&#34;y&#34;:1650.06},{&#34;x&#34;:1991.62307692308,&#34;y&#34;:1654.11},{&#34;x&#34;:1991.62692307692,&#34;y&#34;:1653.6},{&#34;x&#34;:1991.63076923077,&#34;y&#34;:1501.82},{&#34;x&#34;:1991.63461538462,&#34;y&#34;:1524.28},{&#34;x&#34;:1991.63846153846,&#34;y&#34;:1603.65},{&#34;x&#34;:1991.64230769231,&#34;y&#34;:1622.49},{&#34;x&#34;:1991.64615384615,&#34;y&#34;:1636.68},{&#34;x&#34;:1991.65,&#34;y&#34;:1652.1},{&#34;x&#34;:1991.65384615385,&#34;y&#34;:1645.81},{&#34;x&#34;:1991.65769230769,&#34;y&#34;:1650.36},{&#34;x&#34;:1991.66153846154,&#34;y&#34;:1651.55},{&#34;x&#34;:1991.66538461538,&#34;y&#34;:1649.88},{&#34;x&#34;:1991.66923076923,&#34;y&#34;:1653.52},{&#34;x&#34;:1991.67307692308,&#34;y&#34;:1657.51},{&#34;x&#34;:1991.67692307692,&#34;y&#34;:1649.55},{&#34;x&#34;:1991.68076923077,&#34;y&#34;:1649.09},{&#34;x&#34;:1991.68461538462,&#34;y&#34;:1646.41},{&#34;x&#34;:1991.68846153846,&#34;y&#34;:1638.65},{&#34;x&#34;:1991.69230769231,&#34;y&#34;:1625.8},{&#34;x&#34;:1991.69615384615,&#34;y&#34;:1628.64},{&#34;x&#34;:1991.7,&#34;y&#34;:1632.22},{&#34;x&#34;:1991.70384615385,&#34;y&#34;:1633.65},{&#34;x&#34;:1991.70769230769,&#34;y&#34;:1631.17},{&#34;x&#34;:1991.71153846154,&#34;y&#34;:1635.8},{&#34;x&#34;:1991.71538461538,&#34;y&#34;:1621.27},{&#34;x&#34;:1991.71923076923,&#34;y&#34;:1624.7},{&#34;x&#34;:1991.72307692308,&#34;y&#34;:1616.13},{&#34;x&#34;:1991.72692307692,&#34;y&#34;:1618.12},{&#34;x&#34;:1991.73076923077,&#34;y&#34;:1627.8},{&#34;x&#34;:1991.73461538462,&#34;y&#34;:1625.79},{&#34;x&#34;:1991.73846153846,&#34;y&#34;:1614.8},{&#34;x&#34;:1991.74230769231,&#34;y&#34;:1612.8},{&#34;x&#34;:1991.74615384615,&#34;y&#34;:1605.47},{&#34;x&#34;:1991.75,&#34;y&#34;:1609.32},{&#34;x&#34;:1991.75384615385,&#34;y&#34;:1607.48},{&#34;x&#34;:1991.75769230769,&#34;y&#34;:1607.48},{&#34;x&#34;:1991.76153846154,&#34;y&#34;:1604.89},{&#34;x&#34;:1991.76538461538,&#34;y&#34;:1589.12},{&#34;x&#34;:1991.76923076923,&#34;y&#34;:1582.27},{&#34;x&#34;:1991.77307692308,&#34;y&#34;:1567.99},{&#34;x&#34;:1991.77692307692,&#34;y&#34;:1568.16},{&#34;x&#34;:1991.78076923077,&#34;y&#34;:1569.71},{&#34;x&#34;:1991.78461538462,&#34;y&#34;:1571.74},{&#34;x&#34;:1991.78846153846,&#34;y&#34;:1585.41},{&#34;x&#34;:1991.79230769231,&#34;y&#34;:1570.01},{&#34;x&#34;:1991.79615384615,&#34;y&#34;:1561.89},{&#34;x&#34;:1991.8,&#34;y&#34;:1565.18},{&#34;x&#34;:1991.80384615385,&#34;y&#34;:1570.34},{&#34;x&#34;:1991.80769230769,&#34;y&#34;:1577},{&#34;x&#34;:1991.81153846154,&#34;y&#34;:1590.29},{&#34;x&#34;:1991.81538461538,&#34;y&#34;:1572.72},{&#34;x&#34;:1991.81923076923,&#34;y&#34;:1572.07},{&#34;x&#34;:1991.82307692308,&#34;y&#34;:1579.19},{&#34;x&#34;:1991.82692307692,&#34;y&#34;:1588.73},{&#34;x&#34;:1991.83076923077,&#34;y&#34;:1586.01},{&#34;x&#34;:1991.83461538462,&#34;y&#34;:1579.77},{&#34;x&#34;:1991.83846153846,&#34;y&#34;:1572.58},{&#34;x&#34;:1991.84230769231,&#34;y&#34;:1568.09},{&#34;x&#34;:1991.84615384615,&#34;y&#34;:1578.21},{&#34;x&#34;:1991.85,&#34;y&#34;:1573.94},{&#34;x&#34;:1991.85384615385,&#34;y&#34;:1582.06},{&#34;x&#34;:1991.85769230769,&#34;y&#34;:1610.18},{&#34;x&#34;:1991.86153846154,&#34;y&#34;:1605.16},{&#34;x&#34;:1991.86538461538,&#34;y&#34;:1623.84},{&#34;x&#34;:1991.86923076923,&#34;y&#34;:1615.26},{&#34;x&#34;:1991.87307692308,&#34;y&#34;:1627.08},{&#34;x&#34;:1991.87692307692,&#34;y&#34;:1626.97},{&#34;x&#34;:1991.88076923077,&#34;y&#34;:1605.7},{&#34;x&#34;:1991.88461538462,&#34;y&#34;:1589.7},{&#34;x&#34;:1991.88846153846,&#34;y&#34;:1589.7},{&#34;x&#34;:1991.89230769231,&#34;y&#34;:1603.26},{&#34;x&#34;:1991.89615384615,&#34;y&#34;:1599.75},{&#34;x&#34;:1991.9,&#34;y&#34;:1590.86},{&#34;x&#34;:1991.90384615385,&#34;y&#34;:1603.5},{&#34;x&#34;:1991.90769230769,&#34;y&#34;:1589.86},{&#34;x&#34;:1991.91153846154,&#34;y&#34;:1587.92},{&#34;x&#34;:1991.91538461538,&#34;y&#34;:1571.06},{&#34;x&#34;:1991.91923076923,&#34;y&#34;:1549.81},{&#34;x&#34;:1991.92307692308,&#34;y&#34;:1549.36},{&#34;x&#34;:1991.92692307692,&#34;y&#34;:1554.65},{&#34;x&#34;:1991.93076923077,&#34;y&#34;:1557.52},{&#34;x&#34;:1991.93461538462,&#34;y&#34;:1555.31},{&#34;x&#34;:1991.93846153846,&#34;y&#34;:1559.76},{&#34;x&#34;:1991.94230769231,&#34;y&#34;:1548.44},{&#34;x&#34;:1991.94615384615,&#34;y&#34;:1543.99},{&#34;x&#34;:1991.95,&#34;y&#34;:1550.21},{&#34;x&#34;:1991.95384615385,&#34;y&#34;:1557.03},{&#34;x&#34;:1991.95769230769,&#34;y&#34;:1551.78},{&#34;x&#34;:1991.96153846154,&#34;y&#34;:1562.89},{&#34;x&#34;:1991.96538461538,&#34;y&#34;:1570.28},{&#34;x&#34;:1991.96923076923,&#34;y&#34;:1559.26},{&#34;x&#34;:1991.97307692308,&#34;y&#34;:1545.87},{&#34;x&#34;:1991.97692307692,&#34;y&#34;:1542.77},{&#34;x&#34;:1991.98076923077,&#34;y&#34;:1542.77},{&#34;x&#34;:1991.98461538462,&#34;y&#34;:1542.77},{&#34;x&#34;:1991.98846153846,&#34;y&#34;:1542.77},{&#34;x&#34;:1991.99230769231,&#34;y&#34;:1564.27},{&#34;x&#34;:1991.99615384615,&#34;y&#34;:1577.26},{&#34;x&#34;:1992,&#34;y&#34;:1577.26},{&#34;x&#34;:1992.00384615385,&#34;y&#34;:1577.26},{&#34;x&#34;:1992.00769230769,&#34;y&#34;:1598.19},{&#34;x&#34;:1992.01153846154,&#34;y&#34;:1604.05},{&#34;x&#34;:1992.01538461538,&#34;y&#34;:1604.69},{&#34;x&#34;:1992.01923076923,&#34;y&#34;:1593.65},{&#34;x&#34;:1992.02307692308,&#34;y&#34;:1581.68},{&#34;x&#34;:1992.02692307692,&#34;y&#34;:1599.14},{&#34;x&#34;:1992.03076923077,&#34;y&#34;:1613.82},{&#34;x&#34;:1992.03461538462,&#34;y&#34;:1620.45},{&#34;x&#34;:1992.03846153846,&#34;y&#34;:1629.51},{&#34;x&#34;:1992.04230769231,&#34;y&#34;:1663.7},{&#34;x&#34;:1992.04615384615,&#34;y&#34;:1664.09},{&#34;x&#34;:1992.05,&#34;y&#34;:1669.29},{&#34;x&#34;:1992.05384615385,&#34;y&#34;:1685.14},{&#34;x&#34;:1992.05769230769,&#34;y&#34;:1687.07},{&#34;x&#34;:1992.06153846154,&#34;y&#34;:1680.13},{&#34;x&#34;:1992.06538461538,&#34;y&#34;:1671.84},{&#34;x&#34;:1992.06923076923,&#34;y&#34;:1669.52},{&#34;x&#34;:1992.07307692308,&#34;y&#34;:1686.71},{&#34;x&#34;:1992.07692307692,&#34;y&#34;:1685.51},{&#34;x&#34;:1992.08076923077,&#34;y&#34;:1671.01},{&#34;x&#34;:1992.08461538462,&#34;y&#34;:1683.06},{&#34;x&#34;:1992.08846153846,&#34;y&#34;:1685.7},{&#34;x&#34;:1992.09230769231,&#34;y&#34;:1685.66},{&#34;x&#34;:1992.09615384615,&#34;y&#34;:1678.77},{&#34;x&#34;:1992.1,&#34;y&#34;:1685.85},{&#34;x&#34;:1992.10384615385,&#34;y&#34;:1683.71},{&#34;x&#34;:1992.10769230769,&#34;y&#34;:1686.59},{&#34;x&#34;:1992.11153846154,&#34;y&#34;:1683.73},{&#34;x&#34;:1992.11538461538,&#34;y&#34;:1679.14},{&#34;x&#34;:1992.11923076923,&#34;y&#34;:1685.03},{&#34;x&#34;:1992.12307692308,&#34;y&#34;:1680.81},{&#34;x&#34;:1992.12692307692,&#34;y&#34;:1676.17},{&#34;x&#34;:1992.13076923077,&#34;y&#34;:1688.46},{&#34;x&#34;:1992.13461538462,&#34;y&#34;:1696.55},{&#34;x&#34;:1992.13846153846,&#34;y&#34;:1690.24},{&#34;x&#34;:1992.14230769231,&#34;y&#34;:1711.35},{&#34;x&#34;:1992.14615384615,&#34;y&#34;:1711.29},{&#34;x&#34;:1992.15,&#34;y&#34;:1729.86},{&#34;x&#34;:1992.15384615385,&#34;y&#34;:1716.63},{&#34;x&#34;:1992.15769230769,&#34;y&#34;:1743.36},{&#34;x&#34;:1992.16153846154,&#34;y&#34;:1745.17},{&#34;x&#34;:1992.16538461538,&#34;y&#34;:1746.76},{&#34;x&#34;:1992.16923076923,&#34;y&#34;:1749.29},{&#34;x&#34;:1992.17307692308,&#34;y&#34;:1763.86},{&#34;x&#34;:1992.17692307692,&#34;y&#34;:1762.27},{&#34;x&#34;:1992.18076923077,&#34;y&#34;:1762.29},{&#34;x&#34;:1992.18461538462,&#34;y&#34;:1746.77},{&#34;x&#34;:1992.18846153846,&#34;y&#34;:1753.5},{&#34;x&#34;:1992.19230769231,&#34;y&#34;:1753.21},{&#34;x&#34;:1992.19615384615,&#34;y&#34;:1739.88},{&#34;x&#34;:1992.2,&#34;y&#34;:1723.92},{&#34;x&#34;:1992.20384615385,&#34;y&#34;:1734.42},{&#34;x&#34;:1992.20769230769,&#34;y&#34;:1723.13},{&#34;x&#34;:1992.21153846154,&#34;y&#34;:1732.92},{&#34;x&#34;:1992.21538461538,&#34;y&#34;:1729.89},{&#34;x&#34;:1992.21923076923,&#34;y&#34;:1725.74},{&#34;x&#34;:1992.22307692308,&#34;y&#34;:1730.9},{&#34;x&#34;:1992.22692307692,&#34;y&#34;:1714.17},{&#34;x&#34;:1992.23076923077,&#34;y&#34;:1716.2},{&#34;x&#34;:1992.23461538462,&#34;y&#34;:1719.06},{&#34;x&#34;:1992.23846153846,&#34;y&#34;:1718.21},{&#34;x&#34;:1992.24230769231,&#34;y&#34;:1698.84},{&#34;x&#34;:1992.24615384615,&#34;y&#34;:1714.76},{&#34;x&#34;:1992.25,&#34;y&#34;:1718.35},{&#34;x&#34;:1992.25384615385,&#34;y&#34;:1706.69},{&#34;x&#34;:1992.25769230769,&#34;y&#34;:1723.37},{&#34;x&#34;:1992.26153846154,&#34;y&#34;:1716.18},{&#34;x&#34;:1992.26538461538,&#34;y&#34;:1738.78},{&#34;x&#34;:1992.26923076923,&#34;y&#34;:1737.41},{&#34;x&#34;:1992.27307692308,&#34;y&#34;:1714.77},{&#34;x&#34;:1992.27692307692,&#34;y&#34;:1724.24},{&#34;x&#34;:1992.28076923077,&#34;y&#34;:1733.77},{&#34;x&#34;:1992.28461538462,&#34;y&#34;:1729.96},{&#34;x&#34;:1992.28846153846,&#34;y&#34;:1734.46},{&#34;x&#34;:1992.29230769231,&#34;y&#34;:1744.35},{&#34;x&#34;:1992.29615384615,&#34;y&#34;:1746.88},{&#34;x&#34;:1992.3,&#34;y&#34;:1746.88},{&#34;x&#34;:1992.30384615385,&#34;y&#34;:1746.88},{&#34;x&#34;:1992.30769230769,&#34;y&#34;:1747.47},{&#34;x&#34;:1992.31153846154,&#34;y&#34;:1753.1},{&#34;x&#34;:1992.31538461538,&#34;y&#34;:1745.17},{&#34;x&#34;:1992.31923076923,&#34;y&#34;:1745.72},{&#34;x&#34;:1992.32307692308,&#34;y&#34;:1742.92},{&#34;x&#34;:1992.32692307692,&#34;y&#34;:1731.68},{&#34;x&#34;:1992.33076923077,&#34;y&#34;:1731.18},{&#34;x&#34;:1992.33461538462,&#34;y&#34;:1728.09},{&#34;x&#34;:1992.33846153846,&#34;y&#34;:1728.09},{&#34;x&#34;:1992.34230769231,&#34;y&#34;:1731.29},{&#34;x&#34;:1992.34615384615,&#34;y&#34;:1733.82},{&#34;x&#34;:1992.35,&#34;y&#34;:1745.78},{&#34;x&#34;:1992.35384615385,&#34;y&#34;:1752.57},{&#34;x&#34;:1992.35769230769,&#34;y&#34;:1748.13},{&#34;x&#34;:1992.36153846154,&#34;y&#34;:1750.7},{&#34;x&#34;:1992.36538461538,&#34;y&#34;:1747.91},{&#34;x&#34;:1992.36923076923,&#34;y&#34;:1745.79},{&#34;x&#34;:1992.37307692308,&#34;y&#34;:1735.34},{&#34;x&#34;:1992.37692307692,&#34;y&#34;:1719.92},{&#34;x&#34;:1992.38076923077,&#34;y&#34;:1763.59},{&#34;x&#34;:1992.38461538462,&#34;y&#34;:1766.76},{&#34;x&#34;:1992.38846153846,&#34;y&#34;:1785.4},{&#34;x&#34;:1992.39230769231,&#34;y&#34;:1783.56},{&#34;x&#34;:1992.39615384615,&#34;y&#34;:1804.42},{&#34;x&#34;:1992.4,&#34;y&#34;:1812.33},{&#34;x&#34;:1992.40384615385,&#34;y&#34;:1799.51},{&#34;x&#34;:1992.40769230769,&#34;y&#34;:1792.8},{&#34;x&#34;:1992.41153846154,&#34;y&#34;:1792.8},{&#34;x&#34;:1992.41538461538,&#34;y&#34;:1806.36},{&#34;x&#34;:1992.41923076923,&#34;y&#34;:1798.23},{&#34;x&#34;:1992.42307692308,&#34;y&#34;:1800.62},{&#34;x&#34;:1992.42692307692,&#34;y&#34;:1786.19},{&#34;x&#34;:1992.43076923077,&#34;y&#34;:1791.35},{&#34;x&#34;:1992.43461538462,&#34;y&#34;:1789.05},{&#34;x&#34;:1992.43846153846,&#34;y&#34;:1789.05},{&#34;x&#34;:1992.44230769231,&#34;y&#34;:1784.71},{&#34;x&#34;:1992.44615384615,&#34;y&#34;:1789.45},{&#34;x&#34;:1992.45,&#34;y&#34;:1779.74},{&#34;x&#34;:1992.45384615385,&#34;y&#34;:1786.97},{&#34;x&#34;:1992.45769230769,&#34;y&#34;:1773.25},{&#34;x&#34;:1992.46153846154,&#34;y&#34;:1781.62},{&#34;x&#34;:1992.46538461538,&#34;y&#34;:1773.75},{&#34;x&#34;:1992.46923076923,&#34;y&#34;:1773.75},{&#34;x&#34;:1992.47307692308,&#34;y&#34;:1776.34},{&#34;x&#34;:1992.47692307692,&#34;y&#34;:1770.72},{&#34;x&#34;:1992.48076923077,&#34;y&#34;:1772.39},{&#34;x&#34;:1992.48461538462,&#34;y&#34;:1762.55},{&#34;x&#34;:1992.48846153846,&#34;y&#34;:1764.35},{&#34;x&#34;:1992.49230769231,&#34;y&#34;:1752.83},{&#34;x&#34;:1992.49615384615,&#34;y&#34;:1755.98},{&#34;x&#34;:1992.5,&#34;y&#34;:1754.95},{&#34;x&#34;:1992.50384615385,&#34;y&#34;:1759.9},{&#34;x&#34;:1992.50769230769,&#34;y&#34;:1759.84},{&#34;x&#34;:1992.51153846154,&#34;y&#34;:1776.5},{&#34;x&#34;:1992.51538461538,&#34;y&#34;:1769.98},{&#34;x&#34;:1992.51923076923,&#34;y&#34;:1766.98},{&#34;x&#34;:1992.52307692308,&#34;y&#34;:1752.29},{&#34;x&#34;:1992.52692307692,&#34;y&#34;:1760.17},{&#34;x&#34;:1992.53076923077,&#34;y&#34;:1750.32},{&#34;x&#34;:1992.53461538462,&#34;y&#34;:1731.44},{&#34;x&#34;:1992.53846153846,&#34;y&#34;:1735.51},{&#34;x&#34;:1992.54230769231,&#34;y&#34;:1733.84},{&#34;x&#34;:1992.54615384615,&#34;y&#34;:1730.78},{&#34;x&#34;:1992.55,&#34;y&#34;:1699.46},{&#34;x&#34;:1992.55384615385,&#34;y&#34;:1652.71},{&#34;x&#34;:1992.55769230769,&#34;y&#34;:1654.09},{&#34;x&#34;:1992.56153846154,&#34;y&#34;:1636.81},{&#34;x&#34;:1992.56538461538,&#34;y&#34;:1622.81},{&#34;x&#34;:1992.56923076923,&#34;y&#34;:1613.36},{&#34;x&#34;:1992.57307692308,&#34;y&#34;:1617.78},{&#34;x&#34;:1992.57692307692,&#34;y&#34;:1617.18},{&#34;x&#34;:1992.58076923077,&#34;y&#34;:1637.62},{&#34;x&#34;:1992.58461538462,&#34;y&#34;:1622.2},{&#34;x&#34;:1992.58846153846,&#34;y&#34;:1608.49},{&#34;x&#34;:1992.59230769231,&#34;y&#34;:1605.11},{&#34;x&#34;:1992.59615384615,&#34;y&#34;:1609.61},{&#34;x&#34;:1992.6,&#34;y&#34;:1624.94},{&#34;x&#34;:1992.60384615385,&#34;y&#34;:1618.07},{&#34;x&#34;:1992.60769230769,&#34;y&#34;:1611.96},{&#34;x&#34;:1992.61153846154,&#34;y&#34;:1578.95},{&#34;x&#34;:1992.61538461538,&#34;y&#34;:1561.39},{&#34;x&#34;:1992.61923076923,&#34;y&#34;:1547.87},{&#34;x&#34;:1992.62307692308,&#34;y&#34;:1548.63},{&#34;x&#34;:1992.62692307692,&#34;y&#34;:1560.16},{&#34;x&#34;:1992.63076923077,&#34;y&#34;:1554.76},{&#34;x&#34;:1992.63461538462,&#34;y&#34;:1531.87},{&#34;x&#34;:1992.63846153846,&#34;y&#34;:1526.14},{&#34;x&#34;:1992.64230769231,&#34;y&#34;:1509.03},{&#34;x&#34;:1992.64615384615,&#34;y&#34;:1530.03},{&#34;x&#34;:1992.65,&#34;y&#34;:1484.97},{&#34;x&#34;:1992.65384615385,&#34;y&#34;:1464.03},{&#34;x&#34;:1992.65769230769,&#34;y&#34;:1475.11},{&#34;x&#34;:1992.66153846154,&#34;y&#34;:1516.12},{&#34;x&#34;:1992.66538461538,&#34;y&#34;:1519.69},{&#34;x&#34;:1992.66923076923,&#34;y&#34;:1529.97},{&#34;x&#34;:1992.67307692308,&#34;y&#34;:1516.44},{&#34;x&#34;:1992.67692307692,&#34;y&#34;:1515.53},{&#34;x&#34;:1992.68076923077,&#34;y&#34;:1543.89},{&#34;x&#34;:1992.68461538462,&#34;y&#34;:1534.72},{&#34;x&#34;:1992.68846153846,&#34;y&#34;:1538.66},{&#34;x&#34;:1992.69230769231,&#34;y&#34;:1536.71},{&#34;x&#34;:1992.69615384615,&#34;y&#34;:1523.83},{&#34;x&#34;:1992.7,&#34;y&#34;:1527.1},{&#34;x&#34;:1992.70384615385,&#34;y&#34;:1530.2},{&#34;x&#34;:1992.70769230769,&#34;y&#34;:1601.5},{&#34;x&#34;:1992.71153846154,&#34;y&#34;:1580.29},{&#34;x&#34;:1992.71538461538,&#34;y&#34;:1595.09},{&#34;x&#34;:1992.71923076923,&#34;y&#34;:1579.47},{&#34;x&#34;:1992.72307692308,&#34;y&#34;:1600.59},{&#34;x&#34;:1992.72692307692,&#34;y&#34;:1566},{&#34;x&#34;:1992.73076923077,&#34;y&#34;:1557.01},{&#34;x&#34;:1992.73461538462,&#34;y&#34;:1542.74},{&#34;x&#34;:1992.73846153846,&#34;y&#34;:1536.3},{&#34;x&#34;:1992.74230769231,&#34;y&#34;:1510.66},{&#34;x&#34;:1992.74615384615,&#34;y&#34;:1481.03},{&#34;x&#34;:1992.75,&#34;y&#34;:1483.83},{&#34;x&#34;:1992.75384615385,&#34;y&#34;:1470.09},{&#34;x&#34;:1992.75769230769,&#34;y&#34;:1484.78},{&#34;x&#34;:1992.76153846154,&#34;y&#34;:1475.41},{&#34;x&#34;:1992.76538461538,&#34;y&#34;:1402.34},{&#34;x&#34;:1992.76923076923,&#34;y&#34;:1421.49},{&#34;x&#34;:1992.77307692308,&#34;y&#34;:1434.61},{&#34;x&#34;:1992.77692307692,&#34;y&#34;:1446.32},{&#34;x&#34;:1992.78076923077,&#34;y&#34;:1437.65},{&#34;x&#34;:1992.78461538462,&#34;y&#34;:1441.57},{&#34;x&#34;:1992.78846153846,&#34;y&#34;:1471.64},{&#34;x&#34;:1992.79230769231,&#34;y&#34;:1453.95},{&#34;x&#34;:1992.79615384615,&#34;y&#34;:1453.79},{&#34;x&#34;:1992.8,&#34;y&#34;:1458.02},{&#34;x&#34;:1992.80384615385,&#34;y&#34;:1479.59},{&#34;x&#34;:1992.80769230769,&#34;y&#34;:1504.89},{&#34;x&#34;:1992.81153846154,&#34;y&#34;:1496.54},{&#34;x&#34;:1992.81538461538,&#34;y&#34;:1511},{&#34;x&#34;:1992.81923076923,&#34;y&#34;:1528.86},{&#34;x&#34;:1992.82307692308,&#34;y&#34;:1534.02},{&#34;x&#34;:1992.82692307692,&#34;y&#34;:1536.6},{&#34;x&#34;:1992.83076923077,&#34;y&#34;:1508.19},{&#34;x&#34;:1992.83461538462,&#34;y&#34;:1493.54},{&#34;x&#34;:1992.83846153846,&#34;y&#34;:1489.68},{&#34;x&#34;:1992.84230769231,&#34;y&#34;:1482.44},{&#34;x&#34;:1992.84615384615,&#34;y&#34;:1483.34},{&#34;x&#34;:1992.85,&#34;y&#34;:1470.57},{&#34;x&#34;:1992.85384615385,&#34;y&#34;:1484.84},{&#34;x&#34;:1992.85769230769,&#34;y&#34;:1487.71},{&#34;x&#34;:1992.86153846154,&#34;y&#34;:1508.63},{&#34;x&#34;:1992.86538461538,&#34;y&#34;:1515.27},{&#34;x&#34;:1992.86923076923,&#34;y&#34;:1509.84},{&#34;x&#34;:1992.87307692308,&#34;y&#34;:1542.28},{&#34;x&#34;:1992.87692307692,&#34;y&#34;:1541.79},{&#34;x&#34;:1992.88076923077,&#34;y&#34;:1542.48},{&#34;x&#34;:1992.88461538462,&#34;y&#34;:1550.27},{&#34;x&#34;:1992.88846153846,&#34;y&#34;:1550.27},{&#34;x&#34;:1992.89230769231,&#34;y&#34;:1543.37},{&#34;x&#34;:1992.89615384615,&#34;y&#34;:1547.84},{&#34;x&#34;:1992.9,&#34;y&#34;:1523.62},{&#34;x&#34;:1992.90384615385,&#34;y&#34;:1526.68},{&#34;x&#34;:1992.90769230769,&#34;y&#34;:1513.42},{&#34;x&#34;:1992.91153846154,&#34;y&#34;:1523.02},{&#34;x&#34;:1992.91538461538,&#34;y&#34;:1529.69},{&#34;x&#34;:1992.91923076923,&#34;y&#34;:1545.12},{&#34;x&#34;:1992.92307692308,&#34;y&#34;:1546.82},{&#34;x&#34;:1992.92692307692,&#34;y&#34;:1528.12},{&#34;x&#34;:1992.93076923077,&#34;y&#34;:1530.65},{&#34;x&#34;:1992.93461538462,&#34;y&#34;:1526.25},{&#34;x&#34;:1992.93846153846,&#34;y&#34;:1519.48},{&#34;x&#34;:1992.94230769231,&#34;y&#34;:1506.65},{&#34;x&#34;:1992.94615384615,&#34;y&#34;:1504.3},{&#34;x&#34;:1992.95,&#34;y&#34;:1480.65},{&#34;x&#34;:1992.95384615385,&#34;y&#34;:1476.7},{&#34;x&#34;:1992.95769230769,&#34;y&#34;:1478.07},{&#34;x&#34;:1992.96153846154,&#34;y&#34;:1479.62},{&#34;x&#34;:1992.96538461538,&#34;y&#34;:1477.55},{&#34;x&#34;:1992.96923076923,&#34;y&#34;:1472.59},{&#34;x&#34;:1992.97307692308,&#34;y&#34;:1495.6},{&#34;x&#34;:1992.97692307692,&#34;y&#34;:1517.45},{&#34;x&#34;:1992.98076923077,&#34;y&#34;:1520.93},{&#34;x&#34;:1992.98461538462,&#34;y&#34;:1527.06},{&#34;x&#34;:1992.98846153846,&#34;y&#34;:1527.06},{&#34;x&#34;:1992.99230769231,&#34;y&#34;:1527.06},{&#34;x&#34;:1992.99615384615,&#34;y&#34;:1547.51},{&#34;x&#34;:1993,&#34;y&#34;:1545.82},{&#34;x&#34;:1993.00384615385,&#34;y&#34;:1538.43},{&#34;x&#34;:1993.00769230769,&#34;y&#34;:1538.43},{&#34;x&#34;:1993.01153846154,&#34;y&#34;:1538.43},{&#34;x&#34;:1993.01538461538,&#34;y&#34;:1538.04},{&#34;x&#34;:1993.01923076923,&#34;y&#34;:1554.03},{&#34;x&#34;:1993.02307692308,&#34;y&#34;:1551.17},{&#34;x&#34;:1993.02692307692,&#34;y&#34;:1538.37},{&#34;x&#34;:1993.03076923077,&#34;y&#34;:1529.1},{&#34;x&#34;:1993.03461538462,&#34;y&#34;:1522.26},{&#34;x&#34;:1993.03846153846,&#34;y&#34;:1533.79},{&#34;x&#34;:1993.04230769231,&#34;y&#34;:1510.18},{&#34;x&#34;:1993.04615384615,&#34;y&#34;:1526.91},{&#34;x&#34;:1993.05,&#34;y&#34;:1555.52},{&#34;x&#34;:1993.05384615385,&#34;y&#34;:1581.49},{&#34;x&#34;:1993.05769230769,&#34;y&#34;:1572.61},{&#34;x&#34;:1993.06153846154,&#34;y&#34;:1572.69},{&#34;x&#34;:1993.06538461538,&#34;y&#34;:1580.64},{&#34;x&#34;:1993.06923076923,&#34;y&#34;:1593.35},{&#34;x&#34;:1993.07307692308,&#34;y&#34;:1571.28},{&#34;x&#34;:1993.07692307692,&#34;y&#34;:1575.59},{&#34;x&#34;:1993.08076923077,&#34;y&#34;:1561.78},{&#34;x&#34;:1993.08461538462,&#34;y&#34;:1572.68},{&#34;x&#34;:1993.08846153846,&#34;y&#34;:1574.04},{&#34;x&#34;:1993.09230769231,&#34;y&#34;:1590.33},{&#34;x&#34;:1993.09615384615,&#34;y&#34;:1584.14},{&#34;x&#34;:1993.1,&#34;y&#34;:1605.91},{&#34;x&#34;:1993.10384615385,&#34;y&#34;:1615.98},{&#34;x&#34;:1993.10769230769,&#34;y&#34;:1643.83},{&#34;x&#34;:1993.11153846154,&#34;y&#34;:1646.85},{&#34;x&#34;:1993.11538461538,&#34;y&#34;:1639.12},{&#34;x&#34;:1993.11923076923,&#34;y&#34;:1642.8},{&#34;x&#34;:1993.12307692308,&#34;y&#34;:1659.07},{&#34;x&#34;:1993.12692307692,&#34;y&#34;:1649.64},{&#34;x&#34;:1993.13076923077,&#34;y&#34;:1674.93},{&#34;x&#34;:1993.13461538462,&#34;y&#34;:1651.6},{&#34;x&#34;:1993.13846153846,&#34;y&#34;:1656.35},{&#34;x&#34;:1993.14230769231,&#34;y&#34;:1670.9},{&#34;x&#34;:1993.14615384615,&#34;y&#34;:1683.3},{&#34;x&#34;:1993.15,&#34;y&#34;:1679.41},{&#34;x&#34;:1993.15384615385,&#34;y&#34;:1658.09},{&#34;x&#34;:1993.15769230769,&#34;y&#34;:1652.92},{&#34;x&#34;:1993.16153846154,&#34;y&#34;:1661.96},{&#34;x&#34;:1993.16538461538,&#34;y&#34;:1680.02},{&#34;x&#34;:1993.16923076923,&#34;y&#34;:1691.37},{&#34;x&#34;:1993.17307692308,&#34;y&#34;:1701.46},{&#34;x&#34;:1993.17692307692,&#34;y&#34;:1690.48},{&#34;x&#34;:1993.18076923077,&#34;y&#34;:1685.46},{&#34;x&#34;:1993.18461538462,&#34;y&#34;:1686.15},{&#34;x&#34;:1993.18846153846,&#34;y&#34;:1702.27},{&#34;x&#34;:1993.19230769231,&#34;y&#34;:1711.91},{&#34;x&#34;:1993.19615384615,&#34;y&#34;:1714.48},{&#34;x&#34;:1993.2,&#34;y&#34;:1708.65},{&#34;x&#34;:1993.20384615385,&#34;y&#34;:1688.74},{&#34;x&#34;:1993.20769230769,&#34;y&#34;:1705.05},{&#34;x&#34;:1993.21153846154,&#34;y&#34;:1700.28},{&#34;x&#34;:1993.21538461538,&#34;y&#34;:1689.71},{&#34;x&#34;:1993.21923076923,&#34;y&#34;:1696.38},{&#34;x&#34;:1993.22307692308,&#34;y&#34;:1686.57},{&#34;x&#34;:1993.22692307692,&#34;y&#34;:1656.59},{&#34;x&#34;:1993.23076923077,&#34;y&#34;:1653.2},{&#34;x&#34;:1993.23461538462,&#34;y&#34;:1666.72},{&#34;x&#34;:1993.23846153846,&#34;y&#34;:1663.27},{&#34;x&#34;:1993.24230769231,&#34;y&#34;:1667.26},{&#34;x&#34;:1993.24615384615,&#34;y&#34;:1675.18},{&#34;x&#34;:1993.25,&#34;y&#34;:1686.64},{&#34;x&#34;:1993.25384615385,&#34;y&#34;:1676.84},{&#34;x&#34;:1993.25769230769,&#34;y&#34;:1670.04},{&#34;x&#34;:1993.26153846154,&#34;y&#34;:1657.06},{&#34;x&#34;:1993.26538461538,&#34;y&#34;:1658.36},{&#34;x&#34;:1993.26923076923,&#34;y&#34;:1667.64},{&#34;x&#34;:1993.27307692308,&#34;y&#34;:1654.6},{&#34;x&#34;:1993.27692307692,&#34;y&#34;:1658.13},{&#34;x&#34;:1993.28076923077,&#34;y&#34;:1658.13},{&#34;x&#34;:1993.28461538462,&#34;y&#34;:1658.13},{&#34;x&#34;:1993.28846153846,&#34;y&#34;:1671.54},{&#34;x&#34;:1993.29230769231,&#34;y&#34;:1674.95},{&#34;x&#34;:1993.29615384615,&#34;y&#34;:1674.67},{&#34;x&#34;:1993.3,&#34;y&#34;:1678.65},{&#34;x&#34;:1993.30384615385,&#34;y&#34;:1687.14},{&#34;x&#34;:1993.30769230769,&#34;y&#34;:1680.06},{&#34;x&#34;:1993.31153846154,&#34;y&#34;:1666.49},{&#34;x&#34;:1993.31538461538,&#34;y&#34;:1680.01},{&#34;x&#34;:1993.31923076923,&#34;y&#34;:1656.03},{&#34;x&#34;:1993.32307692308,&#34;y&#34;:1643.53},{&#34;x&#34;:1993.32692307692,&#34;y&#34;:1636.59},{&#34;x&#34;:1993.33076923077,&#34;y&#34;:1630.88},{&#34;x&#34;:1993.33461538462,&#34;y&#34;:1618.6},{&#34;x&#34;:1993.33846153846,&#34;y&#34;:1626.83},{&#34;x&#34;:1993.34230769231,&#34;y&#34;:1632},{&#34;x&#34;:1993.34615384615,&#34;y&#34;:1619.92},{&#34;x&#34;:1993.35,&#34;y&#34;:1628.88},{&#34;x&#34;:1993.35384615385,&#34;y&#34;:1617.74},{&#34;x&#34;:1993.35769230769,&#34;y&#34;:1607.7},{&#34;x&#34;:1993.36153846154,&#34;y&#34;:1616.45},{&#34;x&#34;:1993.36538461538,&#34;y&#34;:1613.46},{&#34;x&#34;:1993.36923076923,&#34;y&#34;:1632.99},{&#34;x&#34;:1993.37307692308,&#34;y&#34;:1636.02},{&#34;x&#34;:1993.37692307692,&#34;y&#34;:1632.35},{&#34;x&#34;:1993.38076923077,&#34;y&#34;:1630.37},{&#34;x&#34;:1993.38461538462,&#34;y&#34;:1619.26},{&#34;x&#34;:1993.38846153846,&#34;y&#34;:1606.64},{&#34;x&#34;:1993.39230769231,&#34;y&#34;:1606.64},{&#34;x&#34;:1993.39615384615,&#34;y&#34;:1613.98},{&#34;x&#34;:1993.4,&#34;y&#34;:1608.58},{&#34;x&#34;:1993.40384615385,&#34;y&#34;:1623.05},{&#34;x&#34;:1993.40769230769,&#34;y&#34;:1617.18},{&#34;x&#34;:1993.41153846154,&#34;y&#34;:1633.18},{&#34;x&#34;:1993.41538461538,&#34;y&#34;:1627.21},{&#34;x&#34;:1993.41923076923,&#34;y&#34;:1627.21},{&#34;x&#34;:1993.42307692308,&#34;y&#34;:1625.59},{&#34;x&#34;:1993.42692307692,&#34;y&#34;:1628.53},{&#34;x&#34;:1993.43076923077,&#34;y&#34;:1630.56},{&#34;x&#34;:1993.43461538462,&#34;y&#34;:1638.47},{&#34;x&#34;:1993.43846153846,&#34;y&#34;:1660.88},{&#34;x&#34;:1993.44230769231,&#34;y&#34;:1662.28},{&#34;x&#34;:1993.44615384615,&#34;y&#34;:1679.69},{&#34;x&#34;:1993.45,&#34;y&#34;:1679.69},{&#34;x&#34;:1993.45384615385,&#34;y&#34;:1685.85},{&#34;x&#34;:1993.45769230769,&#34;y&#34;:1686.44},{&#34;x&#34;:1993.46153846154,&#34;y&#34;:1684.57},{&#34;x&#34;:1993.46538461538,&#34;y&#34;:1689.93},{&#34;x&#34;:1993.46923076923,&#34;y&#34;:1681.47},{&#34;x&#34;:1993.47307692308,&#34;y&#34;:1687.14},{&#34;x&#34;:1993.47692307692,&#34;y&#34;:1697.26},{&#34;x&#34;:1993.48076923077,&#34;y&#34;:1698.33},{&#34;x&#34;:1993.48461538462,&#34;y&#34;:1690.96},{&#34;x&#34;:1993.48846153846,&#34;y&#34;:1692.16},{&#34;x&#34;:1993.49230769231,&#34;y&#34;:1699.52},{&#34;x&#34;:1993.49615384615,&#34;y&#34;:1712.33},{&#34;x&#34;:1993.5,&#34;y&#34;:1703.05},{&#34;x&#34;:1993.50384615385,&#34;y&#34;:1700.93},{&#34;x&#34;:1993.50769230769,&#34;y&#34;:1698.36},{&#34;x&#34;:1993.51153846154,&#34;y&#34;:1697.39},{&#34;x&#34;:1993.51538461538,&#34;y&#34;:1694.83},{&#34;x&#34;:1993.51923076923,&#34;y&#34;:1705.66},{&#34;x&#34;:1993.52307692308,&#34;y&#34;:1739.48},{&#34;x&#34;:1993.52692307692,&#34;y&#34;:1798.63},{&#34;x&#34;:1993.53076923077,&#34;y&#34;:1798.36},{&#34;x&#34;:1993.53461538462,&#34;y&#34;:1808.74},{&#34;x&#34;:1993.53846153846,&#34;y&#34;:1806.52},{&#34;x&#34;:1993.54230769231,&#34;y&#34;:1815.63},{&#34;x&#34;:1993.54615384615,&#34;y&#34;:1807.12},{&#34;x&#34;:1993.55,&#34;y&#34;:1829.36},{&#34;x&#34;:1993.55384615385,&#34;y&#34;:1835.09},{&#34;x&#34;:1993.55769230769,&#34;y&#34;:1826.45},{&#34;x&#34;:1993.56153846154,&#34;y&#34;:1821.28},{&#34;x&#34;:1993.56538461538,&#34;y&#34;:1828.53},{&#34;x&#34;:1993.56923076923,&#34;y&#34;:1830.61},{&#34;x&#34;:1993.57307692308,&#34;y&#34;:1859.49},{&#34;x&#34;:1993.57692307692,&#34;y&#34;:1846.02},{&#34;x&#34;:1993.58076923077,&#34;y&#34;:1832.2},{&#34;x&#34;:1993.58461538462,&#34;y&#34;:1823.4},{&#34;x&#34;:1993.58846153846,&#34;y&#34;:1823.07},{&#34;x&#34;:1993.59230769231,&#34;y&#34;:1818.1},{&#34;x&#34;:1993.59615384615,&#34;y&#34;:1857.36},{&#34;x&#34;:1993.6,&#34;y&#34;:1861.22},{&#34;x&#34;:1993.60384615385,&#34;y&#34;:1870.8},{&#34;x&#34;:1993.60769230769,&#34;y&#34;:1878.94},{&#34;x&#34;:1993.61153846154,&#34;y&#34;:1870.24},{&#34;x&#34;:1993.61538461538,&#34;y&#34;:1864.51},{&#34;x&#34;:1993.61923076923,&#34;y&#34;:1894.56},{&#34;x&#34;:1993.62307692308,&#34;y&#34;:1908.69},{&#34;x&#34;:1993.62692307692,&#34;y&#34;:1917.69},{&#34;x&#34;:1993.63076923077,&#34;y&#34;:1903.44},{&#34;x&#34;:1993.63461538462,&#34;y&#34;:1918.75},{&#34;x&#34;:1993.63846153846,&#34;y&#34;:1930.29},{&#34;x&#34;:1993.64230769231,&#34;y&#34;:1937.77},{&#34;x&#34;:1993.64615384615,&#34;y&#34;:1909.53},{&#34;x&#34;:1993.65,&#34;y&#34;:1893.48},{&#34;x&#34;:1993.65384615385,&#34;y&#34;:1907.65},{&#34;x&#34;:1993.65769230769,&#34;y&#34;:1915.59},{&#34;x&#34;:1993.66153846154,&#34;y&#34;:1890.58},{&#34;x&#34;:1993.66538461538,&#34;y&#34;:1909.54},{&#34;x&#34;:1993.66923076923,&#34;y&#34;:1929.56},{&#34;x&#34;:1993.67307692308,&#34;y&#34;:1931.88},{&#34;x&#34;:1993.67692307692,&#34;y&#34;:1923.67},{&#34;x&#34;:1993.68076923077,&#34;y&#34;:1928.63},{&#34;x&#34;:1993.68461538462,&#34;y&#34;:1920.43},{&#34;x&#34;:1993.68846153846,&#34;y&#34;:1911.15},{&#34;x&#34;:1993.69230769231,&#34;y&#34;:1878.77},{&#34;x&#34;:1993.69615384615,&#34;y&#34;:1870.32},{&#34;x&#34;:1993.7,&#34;y&#34;:1870.46},{&#34;x&#34;:1993.70384615385,&#34;y&#34;:1868.28},{&#34;x&#34;:1993.70769230769,&#34;y&#34;:1874.38},{&#34;x&#34;:1993.71153846154,&#34;y&#34;:1869.25},{&#34;x&#34;:1993.71538461538,&#34;y&#34;:1852.81},{&#34;x&#34;:1993.71923076923,&#34;y&#34;:1862.62},{&#34;x&#34;:1993.72307692308,&#34;y&#34;:1884.67},{&#34;x&#34;:1993.72692307692,&#34;y&#34;:1922.69},{&#34;x&#34;:1993.73076923077,&#34;y&#34;:1922.05},{&#34;x&#34;:1993.73461538462,&#34;y&#34;:1899.54},{&#34;x&#34;:1993.73846153846,&#34;y&#34;:1902.14},{&#34;x&#34;:1993.74230769231,&#34;y&#34;:1890.18},{&#34;x&#34;:1993.74615384615,&#34;y&#34;:1914.4},{&#34;x&#34;:1993.75,&#34;y&#34;:1915.61},{&#34;x&#34;:1993.75384615385,&#34;y&#34;:1908.97},{&#34;x&#34;:1993.75769230769,&#34;y&#34;:1910.23},{&#34;x&#34;:1993.76153846154,&#34;y&#34;:1920.46},{&#34;x&#34;:1993.76538461538,&#34;y&#34;:1934.99},{&#34;x&#34;:1993.76923076923,&#34;y&#34;:1973.45},{&#34;x&#34;:1993.77307692308,&#34;y&#34;:1994.09},{&#34;x&#34;:1993.77692307692,&#34;y&#34;:1991.95},{&#34;x&#34;:1993.78076923077,&#34;y&#34;:2015.71},{&#34;x&#34;:1993.78461538462,&#34;y&#34;:2009.28},{&#34;x&#34;:1993.78846153846,&#34;y&#34;:2004.11},{&#34;x&#34;:1993.79230769231,&#34;y&#34;:1999.6},{&#34;x&#34;:1993.79615384615,&#34;y&#34;:1995.35},{&#34;x&#34;:1993.8,&#34;y&#34;:2023.26},{&#34;x&#34;:1993.80384615385,&#34;y&#34;:2032.25},{&#34;x&#34;:1993.80769230769,&#34;y&#34;:2036.93},{&#34;x&#34;:1993.81153846154,&#34;y&#34;:2029.87},{&#34;x&#34;:1993.81538461538,&#34;y&#34;:2048.05},{&#34;x&#34;:1993.81923076923,&#34;y&#34;:2083.62},{&#34;x&#34;:1993.82307692308,&#34;y&#34;:2061.18},{&#34;x&#34;:1993.82692307692,&#34;y&#34;:2048.75},{&#34;x&#34;:1993.83076923077,&#34;y&#34;:2040.97},{&#34;x&#34;:1993.83461538462,&#34;y&#34;:2053.66},{&#34;x&#34;:1993.83846153846,&#34;y&#34;:2064.98},{&#34;x&#34;:1993.84230769231,&#34;y&#34;:2068.51},{&#34;x&#34;:1993.84615384615,&#34;y&#34;:2086.4},{&#34;x&#34;:1993.85,&#34;y&#34;:2086.22},{&#34;x&#34;:1993.85384615385,&#34;y&#34;:2057.1},{&#34;x&#34;:1993.85769230769,&#34;y&#34;:2013.65},{&#34;x&#34;:1993.86153846154,&#34;y&#34;:2007.5},{&#34;x&#34;:1993.86538461538,&#34;y&#34;:2040.74},{&#34;x&#34;:1993.86923076923,&#34;y&#34;:2020.11},{&#34;x&#34;:1993.87307692308,&#34;y&#34;:2021.81},{&#34;x&#34;:1993.87692307692,&#34;y&#34;:2023.06},{&#34;x&#34;:1993.88076923077,&#34;y&#34;:2047.2},{&#34;x&#34;:1993.88461538462,&#34;y&#34;:2070.17},{&#34;x&#34;:1993.88846153846,&#34;y&#34;:2070.17},{&#34;x&#34;:1993.89230769231,&#34;y&#34;:2075.99},{&#34;x&#34;:1993.89615384615,&#34;y&#34;:2072.13},{&#34;x&#34;:1993.9,&#34;y&#34;:2020.36},{&#34;x&#34;:1993.90384615385,&#34;y&#34;:2027.99},{&#34;x&#34;:1993.90769230769,&#34;y&#34;:2036.45},{&#34;x&#34;:1993.91153846154,&#34;y&#34;:2057.8},{&#34;x&#34;:1993.91538461538,&#34;y&#34;:2045.25},{&#34;x&#34;:1993.91923076923,&#34;y&#34;:2052.09},{&#34;x&#34;:1993.92307692308,&#34;y&#34;:2052.92},{&#34;x&#34;:1993.92692307692,&#34;y&#34;:2089.77},{&#34;x&#34;:1993.93076923077,&#34;y&#34;:2099.76},{&#34;x&#34;:1993.93461538462,&#34;y&#34;:2128.3},{&#34;x&#34;:1993.93846153846,&#34;y&#34;:2118.01},{&#34;x&#34;:1993.94230769231,&#34;y&#34;:2127.39},{&#34;x&#34;:1993.94615384615,&#34;y&#34;:2165.95},{&#34;x&#34;:1993.95,&#34;y&#34;:2166.58},{&#34;x&#34;:1993.95384615385,&#34;y&#34;:2165.5},{&#34;x&#34;:1993.95769230769,&#34;y&#34;:2163.83},{&#34;x&#34;:1993.96153846154,&#34;y&#34;:2128.07},{&#34;x&#34;:1993.96538461538,&#34;y&#34;:2129.52},{&#34;x&#34;:1993.96923076923,&#34;y&#34;:2144.03},{&#34;x&#34;:1993.97307692308,&#34;y&#34;:2154.76},{&#34;x&#34;:1993.97692307692,&#34;y&#34;:2188.18},{&#34;x&#34;:1993.98076923077,&#34;y&#34;:2183.78},{&#34;x&#34;:1993.98461538462,&#34;y&#34;:2209.17},{&#34;x&#34;:1993.98846153846,&#34;y&#34;:2227.63},{&#34;x&#34;:1993.99230769231,&#34;y&#34;:2227.63},{&#34;x&#34;:1993.99615384615,&#34;y&#34;:2266.7},{&#34;x&#34;:1994,&#34;y&#34;:2236.91},{&#34;x&#34;:1994.00384615385,&#34;y&#34;:2229.62},{&#34;x&#34;:1994.00769230769,&#34;y&#34;:2255.29},{&#34;x&#34;:1994.01153846154,&#34;y&#34;:2255.29},{&#34;x&#34;:1994.01538461538,&#34;y&#34;:2274.62},{&#34;x&#34;:1994.01923076923,&#34;y&#34;:2249.85},{&#34;x&#34;:1994.02307692308,&#34;y&#34;:2233.61},{&#34;x&#34;:1994.02692307692,&#34;y&#34;:2220.63},{&#34;x&#34;:1994.03076923077,&#34;y&#34;:2224.95},{&#34;x&#34;:1994.03461538462,&#34;y&#34;:2225},{&#34;x&#34;:1994.03846153846,&#34;y&#34;:2228.1},{&#34;x&#34;:1994.04230769231,&#34;y&#34;:2182.06},{&#34;x&#34;:1994.04615384615,&#34;y&#34;:2142.37},{&#34;x&#34;:1994.05,&#34;y&#34;:2151.05},{&#34;x&#34;:1994.05384615385,&#34;y&#34;:2115.56},{&#34;x&#34;:1994.05769230769,&#34;y&#34;:2130.35},{&#34;x&#34;:1994.06153846154,&#34;y&#34;:2132.52},{&#34;x&#34;:1994.06538461538,&#34;y&#34;:2098.36},{&#34;x&#34;:1994.06923076923,&#34;y&#34;:2073.94},{&#34;x&#34;:1994.07307692308,&#34;y&#34;:2107.29},{&#34;x&#34;:1994.07692307692,&#34;y&#34;:2090.78},{&#34;x&#34;:1994.08076923077,&#34;y&#34;:2128.66},{&#34;x&#34;:1994.08461538462,&#34;y&#34;:2123.31},{&#34;x&#34;:1994.08846153846,&#34;y&#34;:2156.61},{&#34;x&#34;:1994.09230769231,&#34;y&#34;:2192.6},{&#34;x&#34;:1994.09615384615,&#34;y&#34;:2181.88},{&#34;x&#34;:1994.1,&#34;y&#34;:2184.05},{&#34;x&#34;:1994.10384615385,&#34;y&#34;:2137.08},{&#34;x&#34;:1994.10769230769,&#34;y&#34;:2143.9},{&#34;x&#34;:1994.11153846154,&#34;y&#34;:2095.11},{&#34;x&#34;:1994.11538461538,&#34;y&#34;:2099.57},{&#34;x&#34;:1994.11923076923,&#34;y&#34;:2116.43},{&#34;x&#34;:1994.12307692308,&#34;y&#34;:2119.69},{&#34;x&#34;:1994.12692307692,&#34;y&#34;:2108.77},{&#34;x&#34;:1994.13076923077,&#34;y&#34;:2101.93},{&#34;x&#34;:1994.13461538462,&#34;y&#34;:2130.71},{&#34;x&#34;:1994.13846153846,&#34;y&#34;:2135.25},{&#34;x&#34;:1994.14230769231,&#34;y&#34;:2162.29},{&#34;x&#34;:1994.14615384615,&#34;y&#34;:2133.85},{&#34;x&#34;:1994.15,&#34;y&#34;:2108.06},{&#34;x&#34;:1994.15384615385,&#34;y&#34;:2113.64},{&#34;x&#34;:1994.15769230769,&#34;y&#34;:2140.25},{&#34;x&#34;:1994.16153846154,&#34;y&#34;:2082.9},{&#34;x&#34;:1994.16538461538,&#34;y&#34;:2075.33},{&#34;x&#34;:1994.16923076923,&#34;y&#34;:2103.24},{&#34;x&#34;:1994.17307692308,&#34;y&#34;:2057.2},{&#34;x&#34;:1994.17692307692,&#34;y&#34;:2018.69},{&#34;x&#34;:1994.18076923077,&#34;y&#34;:2044.45},{&#34;x&#34;:1994.18461538462,&#34;y&#34;:2076.76},{&#34;x&#34;:1994.18846153846,&#34;y&#34;:2132.12},{&#34;x&#34;:1994.19230769231,&#34;y&#34;:2125.47},{&#34;x&#34;:1994.19615384615,&#34;y&#34;:2118.01},{&#34;x&#34;:1994.2,&#34;y&#34;:2124.51},{&#34;x&#34;:1994.20384615385,&#34;y&#34;:2101.89},{&#34;x&#34;:1994.20769230769,&#34;y&#34;:2169.4},{&#34;x&#34;:1994.21153846154,&#34;y&#34;:2178.91},{&#34;x&#34;:1994.21538461538,&#34;y&#34;:2168.11},{&#34;x&#34;:1994.21923076923,&#34;y&#34;:2160.45},{&#34;x&#34;:1994.22307692308,&#34;y&#34;:2140.39},{&#34;x&#34;:1994.22692307692,&#34;y&#34;:2130.55},{&#34;x&#34;:1994.23076923077,&#34;y&#34;:2141.7},{&#34;x&#34;:1994.23461538462,&#34;y&#34;:2162.96},{&#34;x&#34;:1994.23846153846,&#34;y&#34;:2144.36},{&#34;x&#34;:1994.24230769231,&#34;y&#34;:2144},{&#34;x&#34;:1994.24615384615,&#34;y&#34;:2167.72},{&#34;x&#34;:1994.25,&#34;y&#34;:2162.82},{&#34;x&#34;:1994.25384615385,&#34;y&#34;:2151.84},{&#34;x&#34;:1994.25769230769,&#34;y&#34;:2142.88},{&#34;x&#34;:1994.26153846154,&#34;y&#34;:2142.88},{&#34;x&#34;:1994.26538461538,&#34;y&#34;:2142.88},{&#34;x&#34;:1994.26923076923,&#34;y&#34;:2177.09},{&#34;x&#34;:1994.27307692308,&#34;y&#34;:2184.89},{&#34;x&#34;:1994.27692307692,&#34;y&#34;:2202.57},{&#34;x&#34;:1994.28076923077,&#34;y&#34;:2203.18},{&#34;x&#34;:1994.28461538462,&#34;y&#34;:2224.85},{&#34;x&#34;:1994.28846153846,&#34;y&#34;:2211.19},{&#34;x&#34;:1994.29230769231,&#34;y&#34;:2215.19},{&#34;x&#34;:1994.29615384615,&#34;y&#34;:2198.24},{&#34;x&#34;:1994.3,&#34;y&#34;:2211.92},{&#34;x&#34;:1994.30384615385,&#34;y&#34;:2218.37},{&#34;x&#34;:1994.30769230769,&#34;y&#34;:2193.89},{&#34;x&#34;:1994.31153846154,&#34;y&#34;:2194.09},{&#34;x&#34;:1994.31538461538,&#34;y&#34;:2194.41},{&#34;x&#34;:1994.31923076923,&#34;y&#34;:2218.13},{&#34;x&#34;:1994.32307692308,&#34;y&#34;:2208.68},{&#34;x&#34;:1994.32692307692,&#34;y&#34;:2241.36},{&#34;x&#34;:1994.33076923077,&#34;y&#34;:2256.98},{&#34;x&#34;:1994.33461538462,&#34;y&#34;:2237.82},{&#34;x&#34;:1994.33846153846,&#34;y&#34;:2252.51},{&#34;x&#34;:1994.34230769231,&#34;y&#34;:2266.72},{&#34;x&#34;:1994.34615384615,&#34;y&#34;:2261.71},{&#34;x&#34;:1994.35,&#34;y&#34;:2241.85},{&#34;x&#34;:1994.35384615385,&#34;y&#34;:2249.78},{&#34;x&#34;:1994.35769230769,&#34;y&#34;:2233.55},{&#34;x&#34;:1994.36153846154,&#34;y&#34;:2218.77},{&#34;x&#34;:1994.36538461538,&#34;y&#34;:2241.34},{&#34;x&#34;:1994.36923076923,&#34;y&#34;:2248.02},{&#34;x&#34;:1994.37307692308,&#34;y&#34;:2248.02},{&#34;x&#34;:1994.37692307692,&#34;y&#34;:2257.33},{&#34;x&#34;:1994.38076923077,&#34;y&#34;:2272.96},{&#34;x&#34;:1994.38461538462,&#34;y&#34;:2268.11},{&#34;x&#34;:1994.38846153846,&#34;y&#34;:2254.21},{&#34;x&#34;:1994.39230769231,&#34;y&#34;:2245.79},{&#34;x&#34;:1994.39615384615,&#34;y&#34;:2238.97},{&#34;x&#34;:1994.4,&#34;y&#34;:2238.97},{&#34;x&#34;:1994.40384615385,&#34;y&#34;:2188.01},{&#34;x&#34;:1994.40769230769,&#34;y&#34;:2137.56},{&#34;x&#34;:1994.41153846154,&#34;y&#34;:2146},{&#34;x&#34;:1994.41538461538,&#34;y&#34;:2112.8},{&#34;x&#34;:1994.41923076923,&#34;y&#34;:2129.76},{&#34;x&#34;:1994.42307692308,&#34;y&#34;:2137.34},{&#34;x&#34;:1994.42692307692,&#34;y&#34;:2113.62},{&#34;x&#34;:1994.43076923077,&#34;y&#34;:2120.23},{&#34;x&#34;:1994.43461538462,&#34;y&#34;:2158.88},{&#34;x&#34;:1994.43846153846,&#34;y&#34;:2163.59},{&#34;x&#34;:1994.44230769231,&#34;y&#34;:2131.8},{&#34;x&#34;:1994.44615384615,&#34;y&#34;:2143.93},{&#34;x&#34;:1994.45,&#34;y&#34;:2131.14},{&#34;x&#34;:1994.45384615385,&#34;y&#34;:2143.58},{&#34;x&#34;:1994.45769230769,&#34;y&#34;:2084.42},{&#34;x&#34;:1994.46153846154,&#34;y&#34;:2088.44},{&#34;x&#34;:1994.46538461538,&#34;y&#34;:2073.21},{&#34;x&#34;:1994.46923076923,&#34;y&#34;:2047.29},{&#34;x&#34;:1994.47307692308,&#34;y&#34;:2031.8},{&#34;x&#34;:1994.47692307692,&#34;y&#34;:1986.42},{&#34;x&#34;:1994.48076923077,&#34;y&#34;:1957.08},{&#34;x&#34;:1994.48461538462,&#34;y&#34;:2004.93},{&#34;x&#34;:1994.48846153846,&#34;y&#34;:2032.52},{&#34;x&#34;:1994.49230769231,&#34;y&#34;:2005.07},{&#34;x&#34;:1994.49615384615,&#34;y&#34;:2000.48},{&#34;x&#34;:1994.5,&#34;y&#34;:2022.25},{&#34;x&#34;:1994.50384615385,&#34;y&#34;:2042.45},{&#34;x&#34;:1994.50769230769,&#34;y&#34;:2020.85},{&#34;x&#34;:1994.51153846154,&#34;y&#34;:2040.69},{&#34;x&#34;:1994.51538461538,&#34;y&#34;:2061.7},{&#34;x&#34;:1994.51923076923,&#34;y&#34;:2034.64},{&#34;x&#34;:1994.52307692308,&#34;y&#34;:2031.33},{&#34;x&#34;:1994.52692307692,&#34;y&#34;:2049.1},{&#34;x&#34;:1994.53076923077,&#34;y&#34;:2047.83},{&#34;x&#34;:1994.53461538462,&#34;y&#34;:2069.46},{&#34;x&#34;:1994.53846153846,&#34;y&#34;:2048.57},{&#34;x&#34;:1994.54230769231,&#34;y&#34;:2051.25},{&#34;x&#34;:1994.54615384615,&#34;y&#34;:2070.71},{&#34;x&#34;:1994.55,&#34;y&#34;:2103.54},{&#34;x&#34;:1994.55384615385,&#34;y&#34;:2116.96},{&#34;x&#34;:1994.55769230769,&#34;y&#34;:2129.86},{&#34;x&#34;:1994.56153846154,&#34;y&#34;:2120.97},{&#34;x&#34;:1994.56538461538,&#34;y&#34;:2126.75},{&#34;x&#34;:1994.56923076923,&#34;y&#34;:2148.23},{&#34;x&#34;:1994.57307692308,&#34;y&#34;:2144.21},{&#34;x&#34;:1994.57692307692,&#34;y&#34;:2163.32},{&#34;x&#34;:1994.58076923077,&#34;y&#34;:2135.93},{&#34;x&#34;:1994.58461538462,&#34;y&#34;:2134.12},{&#34;x&#34;:1994.58846153846,&#34;y&#34;:2152.19},{&#34;x&#34;:1994.59230769231,&#34;y&#34;:2161.5},{&#34;x&#34;:1994.59615384615,&#34;y&#34;:2193.63},{&#34;x&#34;:1994.6,&#34;y&#34;:2190.83},{&#34;x&#34;:1994.60384615385,&#34;y&#34;:2176.66},{&#34;x&#34;:1994.60769230769,&#34;y&#34;:2188.81},{&#34;x&#34;:1994.61153846154,&#34;y&#34;:2182.32},{&#34;x&#34;:1994.61538461538,&#34;y&#34;:2160.56},{&#34;x&#34;:1994.61923076923,&#34;y&#34;:2166.51},{&#34;x&#34;:1994.62307692308,&#34;y&#34;:2156.31},{&#34;x&#34;:1994.62692307692,&#34;y&#34;:2133.74},{&#34;x&#34;:1994.63076923077,&#34;y&#34;:2134.34},{&#34;x&#34;:1994.63461538462,&#34;y&#34;:2152.65},{&#34;x&#34;:1994.63846153846,&#34;y&#34;:2166.56},{&#34;x&#34;:1994.64230769231,&#34;y&#34;:2151.44},{&#34;x&#34;:1994.64615384615,&#34;y&#34;:2143.84},{&#34;x&#34;:1994.65,&#34;y&#34;:2113.37},{&#34;x&#34;:1994.65384615385,&#34;y&#34;:2121.25},{&#34;x&#34;:1994.65769230769,&#34;y&#34;:2132.98},{&#34;x&#34;:1994.66153846154,&#34;y&#34;:2153.48},{&#34;x&#34;:1994.66538461538,&#34;y&#34;:2190.58},{&#34;x&#34;:1994.66923076923,&#34;y&#34;:2215.72},{&#34;x&#34;:1994.67307692308,&#34;y&#34;:2205.82},{&#34;x&#34;:1994.67692307692,&#34;y&#34;:2207.09},{&#34;x&#34;:1994.68076923077,&#34;y&#34;:2185.78},{&#34;x&#34;:1994.68461538462,&#34;y&#34;:2197.38},{&#34;x&#34;:1994.68846153846,&#34;y&#34;:2173.6},{&#34;x&#34;:1994.69230769231,&#34;y&#34;:2158.07},{&#34;x&#34;:1994.69615384615,&#34;y&#34;:2167.68},{&#34;x&#34;:1994.7,&#34;y&#34;:2178.1},{&#34;x&#34;:1994.70384615385,&#34;y&#34;:2155.58},{&#34;x&#34;:1994.70769230769,&#34;y&#34;:2155.81},{&#34;x&#34;:1994.71153846154,&#34;y&#34;:2157.15},{&#34;x&#34;:1994.71538461538,&#34;y&#34;:2118.17},{&#34;x&#34;:1994.71923076923,&#34;y&#34;:2129.36},{&#34;x&#34;:1994.72307692308,&#34;y&#34;:2097.45},{&#34;x&#34;:1994.72692307692,&#34;y&#34;:2100.55},{&#34;x&#34;:1994.73076923077,&#34;y&#34;:2059.15},{&#34;x&#34;:1994.73461538462,&#34;y&#34;:2067.17},{&#34;x&#34;:1994.73846153846,&#34;y&#34;:2072.81},{&#34;x&#34;:1994.74230769231,&#34;y&#34;:2097.33},{&#34;x&#34;:1994.74615384615,&#34;y&#34;:2057.83},{&#34;x&#34;:1994.75,&#34;y&#34;:2056.89},{&#34;x&#34;:1994.75384615385,&#34;y&#34;:2070.36},{&#34;x&#34;:1994.75769230769,&#34;y&#34;:2016.08},{&#34;x&#34;:1994.76153846154,&#34;y&#34;:2002.3},{&#34;x&#34;:1994.76538461538,&#34;y&#34;:2002.3},{&#34;x&#34;:1994.76923076923,&#34;y&#34;:1988.67},{&#34;x&#34;:1994.77307692308,&#34;y&#34;:1946.49},{&#34;x&#34;:1994.77692307692,&#34;y&#34;:1965.41},{&#34;x&#34;:1994.78076923077,&#34;y&#34;:1977.67},{&#34;x&#34;:1994.78461538462,&#34;y&#34;:2048.56},{&#34;x&#34;:1994.78846153846,&#34;y&#34;:2087.71},{&#34;x&#34;:1994.79230769231,&#34;y&#34;:2072.68},{&#34;x&#34;:1994.79615384615,&#34;y&#34;:2108.08},{&#34;x&#34;:1994.8,&#34;y&#34;:2118.52},{&#34;x&#34;:1994.80384615385,&#34;y&#34;:2095.58},{&#34;x&#34;:1994.80769230769,&#34;y&#34;:2069.58},{&#34;x&#34;:1994.81153846154,&#34;y&#34;:2055.94},{&#34;x&#34;:1994.81538461538,&#34;y&#34;:2048.15},{&#34;x&#34;:1994.81923076923,&#34;y&#34;:2016.6},{&#34;x&#34;:1994.82307692308,&#34;y&#34;:2022.64},{&#34;x&#34;:1994.82692307692,&#34;y&#34;:1995.85},{&#34;x&#34;:1994.83076923077,&#34;y&#34;:2009.45},{&#34;x&#34;:1994.83461538462,&#34;y&#34;:2026.37},{&#34;x&#34;:1994.83846153846,&#34;y&#34;:2064.86},{&#34;x&#34;:1994.84230769231,&#34;y&#34;:2061.58},{&#34;x&#34;:1994.84615384615,&#34;y&#34;:2066.18},{&#34;x&#34;:1994.85,&#34;y&#34;:2039.91},{&#34;x&#34;:1994.85384615385,&#34;y&#34;:2061.37},{&#34;x&#34;:1994.85769230769,&#34;y&#34;:2069.39},{&#34;x&#34;:1994.86153846154,&#34;y&#34;:2043.3},{&#34;x&#34;:1994.86538461538,&#34;y&#34;:2056.36},{&#34;x&#34;:1994.86923076923,&#34;y&#34;:2090.78},{&#34;x&#34;:1994.87307692308,&#34;y&#34;:2098.04},{&#34;x&#34;:1994.87692307692,&#34;y&#34;:2073.67},{&#34;x&#34;:1994.88076923077,&#34;y&#34;:2091.04},{&#34;x&#34;:1994.88461538462,&#34;y&#34;:2112.21},{&#34;x&#34;:1994.88846153846,&#34;y&#34;:2112.21},{&#34;x&#34;:1994.89230769231,&#34;y&#34;:2091.94},{&#34;x&#34;:1994.89615384615,&#34;y&#34;:2089.48},{&#34;x&#34;:1994.9,&#34;y&#34;:2097.2},{&#34;x&#34;:1994.90384615385,&#34;y&#34;:2073.29},{&#34;x&#34;:1994.90769230769,&#34;y&#34;:2040.05},{&#34;x&#34;:1994.91153846154,&#34;y&#34;:2058.79},{&#34;x&#34;:1994.91538461538,&#34;y&#34;:2056.27},{&#34;x&#34;:1994.91923076923,&#34;y&#34;:2050.82},{&#34;x&#34;:1994.92307692308,&#34;y&#34;:2036.24},{&#34;x&#34;:1994.92692307692,&#34;y&#34;:2057.08},{&#34;x&#34;:1994.93076923077,&#34;y&#34;:2045.54},{&#34;x&#34;:1994.93461538462,&#34;y&#34;:2042.38},{&#34;x&#34;:1994.93846153846,&#34;y&#34;:2067.26},{&#34;x&#34;:1994.94230769231,&#34;y&#34;:2046.99},{&#34;x&#34;:1994.94615384615,&#34;y&#34;:2044.04},{&#34;x&#34;:1994.95,&#34;y&#34;:2041.85},{&#34;x&#34;:1994.95384615385,&#34;y&#34;:2024.19},{&#34;x&#34;:1994.95769230769,&#34;y&#34;:2003.64},{&#34;x&#34;:1994.96153846154,&#34;y&#34;:2019.13},{&#34;x&#34;:1994.96538461538,&#34;y&#34;:2040.94},{&#34;x&#34;:1994.96923076923,&#34;y&#34;:2054.23},{&#34;x&#34;:1994.97307692308,&#34;y&#34;:2069.9},{&#34;x&#34;:1994.97692307692,&#34;y&#34;:2066.59},{&#34;x&#34;:1994.98076923077,&#34;y&#34;:2080.16},{&#34;x&#34;:1994.98461538462,&#34;y&#34;:2095.5},{&#34;x&#34;:1994.98846153846,&#34;y&#34;:2102.25},{&#34;x&#34;:1994.99230769231,&#34;y&#34;:2100.98},{&#34;x&#34;:1994.99615384615,&#34;y&#34;:2100.98},{&#34;x&#34;:1995,&#34;y&#34;:2110.77},{&#34;x&#34;:1995.00384615385,&#34;y&#34;:2097.34},{&#34;x&#34;:1995.00769230769,&#34;y&#34;:2074.68},{&#34;x&#34;:1995.01153846154,&#34;y&#34;:2097.51},{&#34;x&#34;:1995.01538461538,&#34;y&#34;:2079.19},{&#34;x&#34;:1995.01923076923,&#34;y&#34;:2068.92},{&#34;x&#34;:1995.02307692308,&#34;y&#34;:2072.9},{&#34;x&#34;:1995.02692307692,&#34;y&#34;:2051.46},{&#34;x&#34;:1995.03076923077,&#34;y&#34;:2058.2},{&#34;x&#34;:1995.03461538462,&#34;y&#34;:2053.41},{&#34;x&#34;:1995.03846153846,&#34;y&#34;:2062.08},{&#34;x&#34;:1995.04230769231,&#34;y&#34;:2061.76},{&#34;x&#34;:1995.04615384615,&#34;y&#34;:2059.68},{&#34;x&#34;:1995.05,&#34;y&#34;:2064.14},{&#34;x&#34;:1995.05384615385,&#34;y&#34;:2088.25},{&#34;x&#34;:1995.05769230769,&#34;y&#34;:2081.39},{&#34;x&#34;:1995.06153846154,&#34;y&#34;:2085.62},{&#34;x&#34;:1995.06538461538,&#34;y&#34;:2079.6},{&#34;x&#34;:1995.06923076923,&#34;y&#34;:2050.86},{&#34;x&#34;:1995.07307692308,&#34;y&#34;:2013.03},{&#34;x&#34;:1995.07692307692,&#34;y&#34;:2027.67},{&#34;x&#34;:1995.08076923077,&#34;y&#34;:2026.97},{&#34;x&#34;:1995.08461538462,&#34;y&#34;:2040.79},{&#34;x&#34;:1995.08846153846,&#34;y&#34;:2030.56},{&#34;x&#34;:1995.09230769231,&#34;y&#34;:2026.68},{&#34;x&#34;:1995.09615384615,&#34;y&#34;:2024.82},{&#34;x&#34;:1995.1,&#34;y&#34;:2047.44},{&#34;x&#34;:1995.10384615385,&#34;y&#34;:2038.46},{&#34;x&#34;:1995.10769230769,&#34;y&#34;:2077.94},{&#34;x&#34;:1995.11153846154,&#34;y&#34;:2085.08},{&#34;x&#34;:1995.11538461538,&#34;y&#34;:2093.01},{&#34;x&#34;:1995.11923076923,&#34;y&#34;:2087.78},{&#34;x&#34;:1995.12307692308,&#34;y&#34;:2117.8},{&#34;x&#34;:1995.12692307692,&#34;y&#34;:2127.56},{&#34;x&#34;:1995.13076923077,&#34;y&#34;:2118.96},{&#34;x&#34;:1995.13461538462,&#34;y&#34;:2128.33},{&#34;x&#34;:1995.13846153846,&#34;y&#34;:2135.49},{&#34;x&#34;:1995.14230769231,&#34;y&#34;:2112.06},{&#34;x&#34;:1995.14615384615,&#34;y&#34;:2119.29},{&#34;x&#34;:1995.15,&#34;y&#34;:2101.98},{&#34;x&#34;:1995.15384615385,&#34;y&#34;:2101.82},{&#34;x&#34;:1995.15769230769,&#34;y&#34;:2096.26},{&#34;x&#34;:1995.16153846154,&#34;y&#34;:2126.44},{&#34;x&#34;:1995.16538461538,&#34;y&#34;:2117.59},{&#34;x&#34;:1995.16923076923,&#34;y&#34;:2106.05},{&#34;x&#34;:1995.17307692308,&#34;y&#34;:2097.85},{&#34;x&#34;:1995.17692307692,&#34;y&#34;:2127.21},{&#34;x&#34;:1995.18076923077,&#34;y&#34;:2116.64},{&#34;x&#34;:1995.18461538462,&#34;y&#34;:2094.16},{&#34;x&#34;:1995.18846153846,&#34;y&#34;:2069.95},{&#34;x&#34;:1995.19230769231,&#34;y&#34;:2041.26},{&#34;x&#34;:1995.19615384615,&#34;y&#34;:2029.38},{&#34;x&#34;:1995.2,&#34;y&#34;:1989.2},{&#34;x&#34;:1995.20384615385,&#34;y&#34;:2008.85},{&#34;x&#34;:1995.20769230769,&#34;y&#34;:1974.14},{&#34;x&#34;:1995.21153846154,&#34;y&#34;:2022.5},{&#34;x&#34;:1995.21538461538,&#34;y&#34;:1995.22},{&#34;x&#34;:1995.21923076923,&#34;y&#34;:2016.15},{&#34;x&#34;:1995.22307692308,&#34;y&#34;:1979.52},{&#34;x&#34;:1995.22692307692,&#34;y&#34;:1984.99},{&#34;x&#34;:1995.23076923077,&#34;y&#34;:1984.15},{&#34;x&#34;:1995.23461538462,&#34;y&#34;:1978.07},{&#34;x&#34;:1995.23846153846,&#34;y&#34;:1935.08},{&#34;x&#34;:1995.24230769231,&#34;y&#34;:1935.87},{&#34;x&#34;:1995.24615384615,&#34;y&#34;:1928.82},{&#34;x&#34;:1995.25,&#34;y&#34;:1911.7},{&#34;x&#34;:1995.25384615385,&#34;y&#34;:1918.85},{&#34;x&#34;:1995.25769230769,&#34;y&#34;:1949.76},{&#34;x&#34;:1995.26153846154,&#34;y&#34;:1914.69},{&#34;x&#34;:1995.26538461538,&#34;y&#34;:1934.96},{&#34;x&#34;:1995.26923076923,&#34;y&#34;:1965.68},{&#34;x&#34;:1995.27307692308,&#34;y&#34;:1972.59},{&#34;x&#34;:1995.27692307692,&#34;y&#34;:1976.52},{&#34;x&#34;:1995.28076923077,&#34;y&#34;:1978.71},{&#34;x&#34;:1995.28461538462,&#34;y&#34;:1980.81},{&#34;x&#34;:1995.28846153846,&#34;y&#34;:1979.26},{&#34;x&#34;:1995.29230769231,&#34;y&#34;:1991.08},{&#34;x&#34;:1995.29615384615,&#34;y&#34;:1982.99},{&#34;x&#34;:1995.3,&#34;y&#34;:1982.99},{&#34;x&#34;:1995.30384615385,&#34;y&#34;:1982.99},{&#34;x&#34;:1995.30769230769,&#34;y&#34;:1954.62},{&#34;x&#34;:1995.31153846154,&#34;y&#34;:1943.88},{&#34;x&#34;:1995.31538461538,&#34;y&#34;:1955.33},{&#34;x&#34;:1995.31923076923,&#34;y&#34;:1987.7},{&#34;x&#34;:1995.32307692308,&#34;y&#34;:1978.97},{&#34;x&#34;:1995.32692307692,&#34;y&#34;:2007.57},{&#34;x&#34;:1995.33076923077,&#34;y&#34;:2028.52},{&#34;x&#34;:1995.33461538462,&#34;y&#34;:2024.25},{&#34;x&#34;:1995.33846153846,&#34;y&#34;:2017.95},{&#34;x&#34;:1995.34230769231,&#34;y&#34;:2017.95},{&#34;x&#34;:1995.34615384615,&#34;y&#34;:2036.47},{&#34;x&#34;:1995.35,&#34;y&#34;:2037.99},{&#34;x&#34;:1995.35384615385,&#34;y&#34;:2034.15},{&#34;x&#34;:1995.35769230769,&#34;y&#34;:2021.22},{&#34;x&#34;:1995.36153846154,&#34;y&#34;:2030.65},{&#34;x&#34;:1995.36538461538,&#34;y&#34;:2050.66},{&#34;x&#34;:1995.36923076923,&#34;y&#34;:2064.41},{&#34;x&#34;:1995.37307692308,&#34;y&#34;:2086.41},{&#34;x&#34;:1995.37692307692,&#34;y&#34;:2102.4},{&#34;x&#34;:1995.38076923077,&#34;y&#34;:2092},{&#34;x&#34;:1995.38461538462,&#34;y&#34;:2109.36},{&#34;x&#34;:1995.38846153846,&#34;y&#34;:2088.99},{&#34;x&#34;:1995.39230769231,&#34;y&#34;:2083.8},{&#34;x&#34;:1995.39615384615,&#34;y&#34;:2064.42},{&#34;x&#34;:1995.4,&#34;y&#34;:2096.87},{&#34;x&#34;:1995.40384615385,&#34;y&#34;:2083.55},{&#34;x&#34;:1995.40769230769,&#34;y&#34;:2105.88},{&#34;x&#34;:1995.41153846154,&#34;y&#34;:2105.88},{&#34;x&#34;:1995.41538461538,&#34;y&#34;:2065.71},{&#34;x&#34;:1995.41923076923,&#34;y&#34;:2069.26},{&#34;x&#34;:1995.42307692308,&#34;y&#34;:2081.46},{&#34;x&#34;:1995.42692307692,&#34;y&#34;:2099.95},{&#34;x&#34;:1995.43076923077,&#34;y&#34;:2119.24},{&#34;x&#34;:1995.43461538462,&#34;y&#34;:2132.72},{&#34;x&#34;:1995.43846153846,&#34;y&#34;:2132.72},{&#34;x&#34;:1995.44230769231,&#34;y&#34;:2154.17},{&#34;x&#34;:1995.44615384615,&#34;y&#34;:2136.72},{&#34;x&#34;:1995.45,&#34;y&#34;:2137.21},{&#34;x&#34;:1995.45384615385,&#34;y&#34;:2107.16},{&#34;x&#34;:1995.45769230769,&#34;y&#34;:2127.79},{&#34;x&#34;:1995.46153846154,&#34;y&#34;:2124.25},{&#34;x&#34;:1995.46538461538,&#34;y&#34;:2124.84},{&#34;x&#34;:1995.46923076923,&#34;y&#34;:2130.78},{&#34;x&#34;:1995.47307692308,&#34;y&#34;:2125.06},{&#34;x&#34;:1995.47692307692,&#34;y&#34;:2154.13},{&#34;x&#34;:1995.48076923077,&#34;y&#34;:2140.36},{&#34;x&#34;:1995.48461538462,&#34;y&#34;:2144.88},{&#34;x&#34;:1995.48846153846,&#34;y&#34;:2144.88},{&#34;x&#34;:1995.49230769231,&#34;y&#34;:2144.88},{&#34;x&#34;:1995.49615384615,&#34;y&#34;:2137.36},{&#34;x&#34;:1995.5,&#34;y&#34;:2128.99},{&#34;x&#34;:1995.50384615385,&#34;y&#34;:2091.3},{&#34;x&#34;:1995.50769230769,&#34;y&#34;:2094.68},{&#34;x&#34;:1995.51153846154,&#34;y&#34;:2089.04},{&#34;x&#34;:1995.51538461538,&#34;y&#34;:2099.68},{&#34;x&#34;:1995.51923076923,&#34;y&#34;:2110.13},{&#34;x&#34;:1995.52307692308,&#34;y&#34;:2117.63},{&#34;x&#34;:1995.52692307692,&#34;y&#34;:2111.35},{&#34;x&#34;:1995.53076923077,&#34;y&#34;:2163.37},{&#34;x&#34;:1995.53461538462,&#34;y&#34;:2184.39},{&#34;x&#34;:1995.53846153846,&#34;y&#34;:2194.15},{&#34;x&#34;:1995.54230769231,&#34;y&#34;:2200.32},{&#34;x&#34;:1995.54615384615,&#34;y&#34;:2193.72},{&#34;x&#34;:1995.55,&#34;y&#34;:2191.25},{&#34;x&#34;:1995.55384615385,&#34;y&#34;:2201.36},{&#34;x&#34;:1995.55769230769,&#34;y&#34;:2183.71},{&#34;x&#34;:1995.56153846154,&#34;y&#34;:2195.31},{&#34;x&#34;:1995.56538461538,&#34;y&#34;:2183.52},{&#34;x&#34;:1995.56923076923,&#34;y&#34;:2196.54},{&#34;x&#34;:1995.57307692308,&#34;y&#34;:2232.02},{&#34;x&#34;:1995.57692307692,&#34;y&#34;:2232.23},{&#34;x&#34;:1995.58076923077,&#34;y&#34;:2237.73},{&#34;x&#34;:1995.58461538462,&#34;y&#34;:2239.36},{&#34;x&#34;:1995.58846153846,&#34;y&#34;:2217.91},{&#34;x&#34;:1995.59230769231,&#34;y&#34;:2222.51},{&#34;x&#34;:1995.59615384615,&#34;y&#34;:2211.26},{&#34;x&#34;:1995.6,&#34;y&#34;:2249.6},{&#34;x&#34;:1995.60384615385,&#34;y&#34;:2234.86},{&#34;x&#34;:1995.60769230769,&#34;y&#34;:2236.68},{&#34;x&#34;:1995.61153846154,&#34;y&#34;:2244.56},{&#34;x&#34;:1995.61538461538,&#34;y&#34;:2236.89},{&#34;x&#34;:1995.61923076923,&#34;y&#34;:2222.28},{&#34;x&#34;:1995.62307692308,&#34;y&#34;:2236.72},{&#34;x&#34;:1995.62692307692,&#34;y&#34;:2228.44},{&#34;x&#34;:1995.63076923077,&#34;y&#34;:2208.41},{&#34;x&#34;:1995.63461538462,&#34;y&#34;:2236.73},{&#34;x&#34;:1995.63846153846,&#34;y&#34;:2251.64},{&#34;x&#34;:1995.64230769231,&#34;y&#34;:2253.93},{&#34;x&#34;:1995.64615384615,&#34;y&#34;:2265.86},{&#34;x&#34;:1995.65,&#34;y&#34;:2269.6},{&#34;x&#34;:1995.65384615385,&#34;y&#34;:2258.97},{&#34;x&#34;:1995.65769230769,&#34;y&#34;:2262.66},{&#34;x&#34;:1995.66153846154,&#34;y&#34;:2253.91},{&#34;x&#34;:1995.66538461538,&#34;y&#34;:2257.34},{&#34;x&#34;:1995.66923076923,&#34;y&#34;:2240.31},{&#34;x&#34;:1995.67307692308,&#34;y&#34;:2230.27},{&#34;x&#34;:1995.67692307692,&#34;y&#34;:2251.3},{&#34;x&#34;:1995.68076923077,&#34;y&#34;:2234.23},{&#34;x&#34;:1995.68461538462,&#34;y&#34;:2242.76},{&#34;x&#34;:1995.68846153846,&#34;y&#34;:2263.08},{&#34;x&#34;:1995.69230769231,&#34;y&#34;:2266.57},{&#34;x&#34;:1995.69615384615,&#34;y&#34;:2266.37},{&#34;x&#34;:1995.7,&#34;y&#34;:2263.27},{&#34;x&#34;:1995.70384615385,&#34;y&#34;:2266.77},{&#34;x&#34;:1995.70769230769,&#34;y&#34;:2268.26},{&#34;x&#34;:1995.71153846154,&#34;y&#34;:2266.07},{&#34;x&#34;:1995.71538461538,&#34;y&#34;:2300.72},{&#34;x&#34;:1995.71923076923,&#34;y&#34;:2300.29},{&#34;x&#34;:1995.72307692308,&#34;y&#34;:2305.58},{&#34;x&#34;:1995.72692307692,&#34;y&#34;:2289.49},{&#34;x&#34;:1995.73076923077,&#34;y&#34;:2306.66},{&#34;x&#34;:1995.73461538462,&#34;y&#34;:2294.15},{&#34;x&#34;:1995.73846153846,&#34;y&#34;:2275.72},{&#34;x&#34;:1995.74230769231,&#34;y&#34;:2204.44},{&#34;x&#34;:1995.74615384615,&#34;y&#34;:2212.97},{&#34;x&#34;:1995.75,&#34;y&#34;:2232.02},{&#34;x&#34;:1995.75384615385,&#34;y&#34;:2190.9},{&#34;x&#34;:1995.75769230769,&#34;y&#34;:2184.24},{&#34;x&#34;:1995.76153846154,&#34;y&#34;:2201.27},{&#34;x&#34;:1995.76538461538,&#34;y&#34;:2197.01},{&#34;x&#34;:1995.76923076923,&#34;y&#34;:2197.01},{&#34;x&#34;:1995.77307692308,&#34;y&#34;:2211.6},{&#34;x&#34;:1995.77692307692,&#34;y&#34;:2191.54},{&#34;x&#34;:1995.78076923077,&#34;y&#34;:2176.35},{&#34;x&#34;:1995.78461538462,&#34;y&#34;:2157.41},{&#34;x&#34;:1995.78846153846,&#34;y&#34;:2137.01},{&#34;x&#34;:1995.79230769231,&#34;y&#34;:2153.56},{&#34;x&#34;:1995.79615384615,&#34;y&#34;:2159.73},{&#34;x&#34;:1995.8,&#34;y&#34;:2206.11},{&#34;x&#34;:1995.80384615385,&#34;y&#34;:2193.85},{&#34;x&#34;:1995.80769230769,&#34;y&#34;:2185.52},{&#34;x&#34;:1995.81153846154,&#34;y&#34;:2197.57},{&#34;x&#34;:1995.81538461538,&#34;y&#34;:2176.09},{&#34;x&#34;:1995.81923076923,&#34;y&#34;:2148.12},{&#34;x&#34;:1995.82307692308,&#34;y&#34;:2116.86},{&#34;x&#34;:1995.82692307692,&#34;y&#34;:2114.88},{&#34;x&#34;:1995.83076923077,&#34;y&#34;:2140.74},{&#34;x&#34;:1995.83461538462,&#34;y&#34;:2142.74},{&#34;x&#34;:1995.83846153846,&#34;y&#34;:2112.01},{&#34;x&#34;:1995.84230769231,&#34;y&#34;:2149.71},{&#34;x&#34;:1995.84615384615,&#34;y&#34;:2165.76},{&#34;x&#34;:1995.85,&#34;y&#34;:2182.11},{&#34;x&#34;:1995.85384615385,&#34;y&#34;:2180.49},{&#34;x&#34;:1995.85769230769,&#34;y&#34;:2169.69},{&#34;x&#34;:1995.86153846154,&#34;y&#34;:2168.57},{&#34;x&#34;:1995.86538461538,&#34;y&#34;:2174.27},{&#34;x&#34;:1995.86923076923,&#34;y&#34;:2184.05},{&#34;x&#34;:1995.87307692308,&#34;y&#34;:2182.47},{&#34;x&#34;:1995.87692307692,&#34;y&#34;:2174.78},{&#34;x&#34;:1995.88076923077,&#34;y&#34;:2195.15},{&#34;x&#34;:1995.88461538462,&#34;y&#34;:2197.34},{&#34;x&#34;:1995.88846153846,&#34;y&#34;:2196.64},{&#34;x&#34;:1995.89230769231,&#34;y&#34;:2199.29},{&#34;x&#34;:1995.89615384615,&#34;y&#34;:2196.59},{&#34;x&#34;:1995.9,&#34;y&#34;:2204.01},{&#34;x&#34;:1995.90384615385,&#34;y&#34;:2201.9},{&#34;x&#34;:1995.90769230769,&#34;y&#34;:2194.53},{&#34;x&#34;:1995.91153846154,&#34;y&#34;:2197.26},{&#34;x&#34;:1995.91538461538,&#34;y&#34;:2210.92},{&#34;x&#34;:1995.91923076923,&#34;y&#34;:2247.97},{&#34;x&#34;:1995.92307692308,&#34;y&#34;:2242.91},{&#34;x&#34;:1995.92692307692,&#34;y&#34;:2249.75},{&#34;x&#34;:1995.93076923077,&#34;y&#34;:2254.95},{&#34;x&#34;:1995.93461538462,&#34;y&#34;:2266.56},{&#34;x&#34;:1995.93846153846,&#34;y&#34;:2261.08},{&#34;x&#34;:1995.94230769231,&#34;y&#34;:2269.34},{&#34;x&#34;:1995.94615384615,&#34;y&#34;:2274.94},{&#34;x&#34;:1995.95,&#34;y&#34;:2260.62},{&#34;x&#34;:1995.95384615385,&#34;y&#34;:2277.7},{&#34;x&#34;:1995.95769230769,&#34;y&#34;:2277.7},{&#34;x&#34;:1995.96153846154,&#34;y&#34;:2278.64},{&#34;x&#34;:1995.96538461538,&#34;y&#34;:2283.26},{&#34;x&#34;:1995.96923076923,&#34;y&#34;:2286.21},{&#34;x&#34;:1995.97307692308,&#34;y&#34;:2283.84},{&#34;x&#34;:1995.97692307692,&#34;y&#34;:2240.24},{&#34;x&#34;:1995.98076923077,&#34;y&#34;:2241.43},{&#34;x&#34;:1995.98461538462,&#34;y&#34;:2268.07},{&#34;x&#34;:1995.98846153846,&#34;y&#34;:2268.35},{&#34;x&#34;:1995.99230769231,&#34;y&#34;:2280.81},{&#34;x&#34;:1995.99615384615,&#34;y&#34;:2280.81},{&#34;x&#34;:1996,&#34;y&#34;:2280.81},{&#34;x&#34;:1996.00384615385,&#34;y&#34;:2280.44},{&#34;x&#34;:1996.00769230769,&#34;y&#34;:2273.9},{&#34;x&#34;:1996.01153846154,&#34;y&#34;:2260.69},{&#34;x&#34;:1996.01538461538,&#34;y&#34;:2260.69},{&#34;x&#34;:1996.01923076923,&#34;y&#34;:2307.7},{&#34;x&#34;:1996.02307692308,&#34;y&#34;:2326.18},{&#34;x&#34;:1996.02692307692,&#34;y&#34;:2332.81},{&#34;x&#34;:1996.03076923077,&#34;y&#34;:2315.66},{&#34;x&#34;:1996.03461538462,&#34;y&#34;:2336.76},{&#34;x&#34;:1996.03846153846,&#34;y&#34;:2351.47},{&#34;x&#34;:1996.04230769231,&#34;y&#34;:2340.31},{&#34;x&#34;:1996.04615384615,&#34;y&#34;:2330.98},{&#34;x&#34;:1996.05,&#34;y&#34;:2353.89},{&#34;x&#34;:1996.05384615385,&#34;y&#34;:2361.38},{&#34;x&#34;:1996.05769230769,&#34;y&#34;:2379.43},{&#34;x&#34;:1996.06153846154,&#34;y&#34;:2375.63},{&#34;x&#34;:1996.06538461538,&#34;y&#34;:2389.62},{&#34;x&#34;:1996.06923076923,&#34;y&#34;:2400.58},{&#34;x&#34;:1996.07307692308,&#34;y&#34;:2391.74},{&#34;x&#34;:1996.07692307692,&#34;y&#34;:2393.12},{&#34;x&#34;:1996.08076923077,&#34;y&#34;:2436.68},{&#34;x&#34;:1996.08461538462,&#34;y&#34;:2437.02},{&#34;x&#34;:1996.08846153846,&#34;y&#34;:2449.71},{&#34;x&#34;:1996.09230769231,&#34;y&#34;:2437.7},{&#34;x&#34;:1996.09615384615,&#34;y&#34;:2456.09},{&#34;x&#34;:1996.1,&#34;y&#34;:2463},{&#34;x&#34;:1996.10384615385,&#34;y&#34;:2472.53},{&#34;x&#34;:1996.10769230769,&#34;y&#34;:2459.81},{&#34;x&#34;:1996.11153846154,&#34;y&#34;:2416.84},{&#34;x&#34;:1996.11538461538,&#34;y&#34;:2437.98},{&#34;x&#34;:1996.11923076923,&#34;y&#34;:2442.43},{&#34;x&#34;:1996.12307692308,&#34;y&#34;:2411.49},{&#34;x&#34;:1996.12692307692,&#34;y&#34;:2435.07},{&#34;x&#34;:1996.13076923077,&#34;y&#34;:2428.59},{&#34;x&#34;:1996.13461538462,&#34;y&#34;:2436.09},{&#34;x&#34;:1996.13846153846,&#34;y&#34;:2427.77},{&#34;x&#34;:1996.14230769231,&#34;y&#34;:2426.51},{&#34;x&#34;:1996.14615384615,&#34;y&#34;:2423.6},{&#34;x&#34;:1996.15,&#34;y&#34;:2387.6},{&#34;x&#34;:1996.15384615385,&#34;y&#34;:2373.01},{&#34;x&#34;:1996.15769230769,&#34;y&#34;:2401.59},{&#34;x&#34;:1996.16153846154,&#34;y&#34;:2421.93},{&#34;x&#34;:1996.16538461538,&#34;y&#34;:2449.52},{&#34;x&#34;:1996.16923076923,&#34;y&#34;:2438.73},{&#34;x&#34;:1996.17307692308,&#34;y&#34;:2449.09},{&#34;x&#34;:1996.17692307692,&#34;y&#34;:2486.95},{&#34;x&#34;:1996.18076923077,&#34;y&#34;:2485.18},{&#34;x&#34;:1996.18461538462,&#34;y&#34;:2488.85},{&#34;x&#34;:1996.18846153846,&#34;y&#34;:2486.83},{&#34;x&#34;:1996.19230769231,&#34;y&#34;:2472.52},{&#34;x&#34;:1996.19615384615,&#34;y&#34;:2471.38},{&#34;x&#34;:1996.2,&#34;y&#34;:2479.38},{&#34;x&#34;:1996.20384615385,&#34;y&#34;:2448.8},{&#34;x&#34;:1996.20769230769,&#34;y&#34;:2419.72},{&#34;x&#34;:1996.21153846154,&#34;y&#34;:2415.29},{&#34;x&#34;:1996.21538461538,&#34;y&#34;:2417},{&#34;x&#34;:1996.21923076923,&#34;y&#34;:2432.46},{&#34;x&#34;:1996.22307692308,&#34;y&#34;:2458},{&#34;x&#34;:1996.22692307692,&#34;y&#34;:2472.55},{&#34;x&#34;:1996.23076923077,&#34;y&#34;:2484.74},{&#34;x&#34;:1996.23461538462,&#34;y&#34;:2491.73},{&#34;x&#34;:1996.23846153846,&#34;y&#34;:2505.32},{&#34;x&#34;:1996.24230769231,&#34;y&#34;:2479.84},{&#34;x&#34;:1996.24615384615,&#34;y&#34;:2514.8},{&#34;x&#34;:1996.25,&#34;y&#34;:2505.78},{&#34;x&#34;:1996.25384615385,&#34;y&#34;:2523.81},{&#34;x&#34;:1996.25769230769,&#34;y&#34;:2502.94},{&#34;x&#34;:1996.26153846154,&#34;y&#34;:2489.35},{&#34;x&#34;:1996.26538461538,&#34;y&#34;:2500.75},{&#34;x&#34;:1996.26923076923,&#34;y&#34;:2508.11},{&#34;x&#34;:1996.27307692308,&#34;y&#34;:2489.52},{&#34;x&#34;:1996.27692307692,&#34;y&#34;:2498.75},{&#34;x&#34;:1996.28076923077,&#34;y&#34;:2498.75},{&#34;x&#34;:1996.28461538462,&#34;y&#34;:2498.75},{&#34;x&#34;:1996.28846153846,&#34;y&#34;:2510.81},{&#34;x&#34;:1996.29230769231,&#34;y&#34;:2525.59},{&#34;x&#34;:1996.29615384615,&#34;y&#34;:2508.12},{&#34;x&#34;:1996.3,&#34;y&#34;:2526.74},{&#34;x&#34;:1996.30384615385,&#34;y&#34;:2540.79},{&#34;x&#34;:1996.30769230769,&#34;y&#34;:2547.32},{&#34;x&#34;:1996.31153846154,&#34;y&#34;:2519.82},{&#34;x&#34;:1996.31538461538,&#34;y&#34;:2524.18},{&#34;x&#34;:1996.31923076923,&#34;y&#34;:2535.86},{&#34;x&#34;:1996.32307692308,&#34;y&#34;:2549.27},{&#34;x&#34;:1996.32692307692,&#34;y&#34;:2549.12},{&#34;x&#34;:1996.33076923077,&#34;y&#34;:2524.84},{&#34;x&#34;:1996.33461538462,&#34;y&#34;:2538.68},{&#34;x&#34;:1996.33846153846,&#34;y&#34;:2539.88},{&#34;x&#34;:1996.34230769231,&#34;y&#34;:2505.97},{&#34;x&#34;:1996.34615384615,&#34;y&#34;:2492.63},{&#34;x&#34;:1996.35,&#34;y&#34;:2492.63},{&#34;x&#34;:1996.35384615385,&#34;y&#34;:2465.49},{&#34;x&#34;:1996.35769230769,&#34;y&#34;:2472.43},{&#34;x&#34;:1996.36153846154,&#34;y&#34;:2473.52},{&#34;x&#34;:1996.36538461538,&#34;y&#34;:2476.79},{&#34;x&#34;:1996.36923076923,&#34;y&#34;:2466.21},{&#34;x&#34;:1996.37307692308,&#34;y&#34;:2470.57},{&#34;x&#34;:1996.37692307692,&#34;y&#34;:2499.02},{&#34;x&#34;:1996.38076923077,&#34;y&#34;:2496.33},{&#34;x&#34;:1996.38461538462,&#34;y&#34;:2528.2},{&#34;x&#34;:1996.38846153846,&#34;y&#34;:2534.4},{&#34;x&#34;:1996.39230769231,&#34;y&#34;:2534.4},{&#34;x&#34;:1996.39615384615,&#34;y&#34;:2552.29},{&#34;x&#34;:1996.4,&#34;y&#34;:2541.98},{&#34;x&#34;:1996.40384615385,&#34;y&#34;:2564.12},{&#34;x&#34;:1996.40769230769,&#34;y&#34;:2548.79},{&#34;x&#34;:1996.41153846154,&#34;y&#34;:2546.55},{&#34;x&#34;:1996.41538461538,&#34;y&#34;:2549.53},{&#34;x&#34;:1996.41923076923,&#34;y&#34;:2549.53},{&#34;x&#34;:1996.42307692308,&#34;y&#34;:2559.15},{&#34;x&#34;:1996.42692307692,&#34;y&#34;:2548.53},{&#34;x&#34;:1996.43076923077,&#34;y&#34;:2535.78},{&#34;x&#34;:1996.43461538462,&#34;y&#34;:2523.81},{&#34;x&#34;:1996.43846153846,&#34;y&#34;:2543.99},{&#34;x&#34;:1996.44230769231,&#34;y&#34;:2550.42},{&#34;x&#34;:1996.44615384615,&#34;y&#34;:2551.03},{&#34;x&#34;:1996.45,&#34;y&#34;:2559.02},{&#34;x&#34;:1996.45384615385,&#34;y&#34;:2536.03},{&#34;x&#34;:1996.45769230769,&#34;y&#34;:2552.96},{&#34;x&#34;:1996.46153846154,&#34;y&#34;:2571.1},{&#34;x&#34;:1996.46538461538,&#34;y&#34;:2569.9},{&#34;x&#34;:1996.46923076923,&#34;y&#34;:2566.13},{&#34;x&#34;:1996.47307692308,&#34;y&#34;:2544.9},{&#34;x&#34;:1996.47692307692,&#34;y&#34;:2549.71},{&#34;x&#34;:1996.48076923077,&#34;y&#34;:2554.12},{&#34;x&#34;:1996.48461538462,&#34;y&#34;:2546.04},{&#34;x&#34;:1996.48846153846,&#34;y&#34;:2532.22},{&#34;x&#34;:1996.49230769231,&#34;y&#34;:2547.78},{&#34;x&#34;:1996.49615384615,&#34;y&#34;:2562.19},{&#34;x&#34;:1996.5,&#34;y&#34;:2578.36},{&#34;x&#34;:1996.50384615385,&#34;y&#34;:2572.06},{&#34;x&#34;:1996.50769230769,&#34;y&#34;:2551.8},{&#34;x&#34;:1996.51153846154,&#34;y&#34;:2570.44},{&#34;x&#34;:1996.51538461538,&#34;y&#34;:2573.44},{&#34;x&#34;:1996.51923076923,&#34;y&#34;:2565.32},{&#34;x&#34;:1996.52307692308,&#34;y&#34;:2566.32},{&#34;x&#34;:1996.52692307692,&#34;y&#34;:2578.74},{&#34;x&#34;:1996.53076923077,&#34;y&#34;:2568.79},{&#34;x&#34;:1996.53461538462,&#34;y&#34;:2561.51},{&#34;x&#34;:1996.53846153846,&#34;y&#34;:2562.24},{&#34;x&#34;:1996.54230769231,&#34;y&#34;:2573},{&#34;x&#34;:1996.54615384615,&#34;y&#34;:2561.95},{&#34;x&#34;:1996.55,&#34;y&#34;:2548.97},{&#34;x&#34;:1996.55384615385,&#34;y&#34;:2529.5},{&#34;x&#34;:1996.55769230769,&#34;y&#34;:2475.98},{&#34;x&#34;:1996.56153846154,&#34;y&#34;:2497.69},{&#34;x&#34;:1996.56538461538,&#34;y&#34;:2505.56},{&#34;x&#34;:1996.56923076923,&#34;y&#34;:2498.35},{&#34;x&#34;:1996.57307692308,&#34;y&#34;:2468.32},{&#34;x&#34;:1996.57692307692,&#34;y&#34;:2488.82},{&#34;x&#34;:1996.58076923077,&#34;y&#34;:2459.13},{&#34;x&#34;:1996.58461538462,&#34;y&#34;:2464.51},{&#34;x&#34;:1996.58846153846,&#34;y&#34;:2469.51},{&#34;x&#34;:1996.59230769231,&#34;y&#34;:2472.25},{&#34;x&#34;:1996.59615384615,&#34;y&#34;:2466.84},{&#34;x&#34;:1996.6,&#34;y&#34;:2491.5},{&#34;x&#34;:1996.60384615385,&#34;y&#34;:2504.16},{&#34;x&#34;:1996.60769230769,&#34;y&#34;:2520.26},{&#34;x&#34;:1996.61153846154,&#34;y&#34;:2520.52},{&#34;x&#34;:1996.61538461538,&#34;y&#34;:2527.73},{&#34;x&#34;:1996.61923076923,&#34;y&#34;:2541.41},{&#34;x&#34;:1996.62307692308,&#34;y&#34;:2534.63},{&#34;x&#34;:1996.62692307692,&#34;y&#34;:2532.96},{&#34;x&#34;:1996.63076923077,&#34;y&#34;:2529.14},{&#34;x&#34;:1996.63461538462,&#34;y&#34;:2545.65},{&#34;x&#34;:1996.63846153846,&#34;y&#34;:2544.61},{&#34;x&#34;:1996.64230769231,&#34;y&#34;:2542.75},{&#34;x&#34;:1996.64615384615,&#34;y&#34;:2567.96},{&#34;x&#34;:1996.65,&#34;y&#34;:2556.25},{&#34;x&#34;:1996.65384615385,&#34;y&#34;:2562.12},{&#34;x&#34;:1996.65769230769,&#34;y&#34;:2534.44},{&#34;x&#34;:1996.66153846154,&#34;y&#34;:2559.42},{&#34;x&#34;:1996.66538461538,&#34;y&#34;:2562.12},{&#34;x&#34;:1996.66923076923,&#34;y&#34;:2554.42},{&#34;x&#34;:1996.67307692308,&#34;y&#34;:2563.59},{&#34;x&#34;:1996.67692307692,&#34;y&#34;:2556.64},{&#34;x&#34;:1996.68076923077,&#34;y&#34;:2548.84},{&#34;x&#34;:1996.68461538462,&#34;y&#34;:2534.49},{&#34;x&#34;:1996.68846153846,&#34;y&#34;:2538.34},{&#34;x&#34;:1996.69230769231,&#34;y&#34;:2528.73},{&#34;x&#34;:1996.69615384615,&#34;y&#34;:2526.18},{&#34;x&#34;:1996.7,&#34;y&#34;:2532.55},{&#34;x&#34;:1996.70384615385,&#34;y&#34;:2542.74},{&#34;x&#34;:1996.70769230769,&#34;y&#34;:2549.71},{&#34;x&#34;:1996.71153846154,&#34;y&#34;:2568.77},{&#34;x&#34;:1996.71538461538,&#34;y&#34;:2568.7},{&#34;x&#34;:1996.71923076923,&#34;y&#34;:2588.04},{&#34;x&#34;:1996.72307692308,&#34;y&#34;:2614.5},{&#34;x&#34;:1996.72692307692,&#34;y&#34;:2630.24},{&#34;x&#34;:1996.73076923077,&#34;y&#34;:2626.43},{&#34;x&#34;:1996.73461538462,&#34;y&#34;:2621.2},{&#34;x&#34;:1996.73846153846,&#34;y&#34;:2625.46},{&#34;x&#34;:1996.74230769231,&#34;y&#34;:2641.5},{&#34;x&#34;:1996.74615384615,&#34;y&#34;:2624.18},{&#34;x&#34;:1996.75,&#34;y&#34;:2643.42},{&#34;x&#34;:1996.75384615385,&#34;y&#34;:2663.1},{&#34;x&#34;:1996.75769230769,&#34;y&#34;:2664.96},{&#34;x&#34;:1996.76153846154,&#34;y&#34;:2659.86},{&#34;x&#34;:1996.76538461538,&#34;y&#34;:2655.49},{&#34;x&#34;:1996.76923076923,&#34;y&#34;:2654.34},{&#34;x&#34;:1996.77307692308,&#34;y&#34;:2685.29},{&#34;x&#34;:1996.77692307692,&#34;y&#34;:2685.29},{&#34;x&#34;:1996.78076923077,&#34;y&#34;:2704.25},{&#34;x&#34;:1996.78461538462,&#34;y&#34;:2705.21},{&#34;x&#34;:1996.78846153846,&#34;y&#34;:2702.6},{&#34;x&#34;:1996.79230769231,&#34;y&#34;:2685.23},{&#34;x&#34;:1996.79615384615,&#34;y&#34;:2683.52},{&#34;x&#34;:1996.8,&#34;y&#34;:2692.69},{&#34;x&#34;:1996.80384615385,&#34;y&#34;:2700.83},{&#34;x&#34;:1996.80769230769,&#34;y&#34;:2718.73},{&#34;x&#34;:1996.81153846154,&#34;y&#34;:2705.06},{&#34;x&#34;:1996.81538461538,&#34;y&#34;:2717.5},{&#34;x&#34;:1996.81923076923,&#34;y&#34;:2727.56},{&#34;x&#34;:1996.82307692308,&#34;y&#34;:2733.67},{&#34;x&#34;:1996.82692307692,&#34;y&#34;:2721.74},{&#34;x&#34;:1996.83076923077,&#34;y&#34;:2678.89},{&#34;x&#34;:1996.83461538462,&#34;y&#34;:2681.94},{&#34;x&#34;:1996.83846153846,&#34;y&#34;:2690.79},{&#34;x&#34;:1996.84230769231,&#34;y&#34;:2703.33},{&#34;x&#34;:1996.84615384615,&#34;y&#34;:2675.5},{&#34;x&#34;:1996.85,&#34;y&#34;:2664.72},{&#34;x&#34;:1996.85384615385,&#34;y&#34;:2671.4},{&#34;x&#34;:1996.85769230769,&#34;y&#34;:2670.19},{&#34;x&#34;:1996.86153846154,&#34;y&#34;:2678.73},{&#34;x&#34;:1996.86538461538,&#34;y&#34;:2716.16},{&#34;x&#34;:1996.86923076923,&#34;y&#34;:2735.28},{&#34;x&#34;:1996.87307692308,&#34;y&#34;:2724.25},{&#34;x&#34;:1996.87692307692,&#34;y&#34;:2732.29},{&#34;x&#34;:1996.88076923077,&#34;y&#34;:2730.44},{&#34;x&#34;:1996.88461538462,&#34;y&#34;:2764},{&#34;x&#34;:1996.88846153846,&#34;y&#34;:2770.61},{&#34;x&#34;:1996.89230769231,&#34;y&#34;:2784.39},{&#34;x&#34;:1996.89615384615,&#34;y&#34;:2800.6},{&#34;x&#34;:1996.9,&#34;y&#34;:2768.68},{&#34;x&#34;:1996.90384615385,&#34;y&#34;:2781.54},{&#34;x&#34;:1996.90769230769,&#34;y&#34;:2766.08},{&#34;x&#34;:1996.91153846154,&#34;y&#34;:2765.29},{&#34;x&#34;:1996.91538461538,&#34;y&#34;:2769.47},{&#34;x&#34;:1996.91923076923,&#34;y&#34;:2800.52},{&#34;x&#34;:1996.92307692308,&#34;y&#34;:2808.62},{&#34;x&#34;:1996.92692307692,&#34;y&#34;:2793.86},{&#34;x&#34;:1996.93076923077,&#34;y&#34;:2829.68},{&#34;x&#34;:1996.93461538462,&#34;y&#34;:2848.84},{&#34;x&#34;:1996.93846153846,&#34;y&#34;:2853.46},{&#34;x&#34;:1996.94230769231,&#34;y&#34;:2900.76},{&#34;x&#34;:1996.94615384615,&#34;y&#34;:2880.89},{&#34;x&#34;:1996.95,&#34;y&#34;:2894.43},{&#34;x&#34;:1996.95384615385,&#34;y&#34;:2832.53},{&#34;x&#34;:1996.95769230769,&#34;y&#34;:2870.3},{&#34;x&#34;:1996.96153846154,&#34;y&#34;:2890.95},{&#34;x&#34;:1996.96538461538,&#34;y&#34;:2836.36},{&#34;x&#34;:1996.96923076923,&#34;y&#34;:2846.94},{&#34;x&#34;:1996.97307692308,&#34;y&#34;:2815.77},{&#34;x&#34;:1996.97692307692,&#34;y&#34;:2841.16},{&#34;x&#34;:1996.98076923077,&#34;y&#34;:2808.5},{&#34;x&#34;:1996.98461538462,&#34;y&#34;:2814.23},{&#34;x&#34;:1996.98846153846,&#34;y&#34;:2824.83},{&#34;x&#34;:1996.99230769231,&#34;y&#34;:2835.54},{&#34;x&#34;:1996.99615384615,&#34;y&#34;:2844.09},{&#34;x&#34;:1997,&#34;y&#34;:2844.09},{&#34;x&#34;:1997.00384615385,&#34;y&#34;:2844.09},{&#34;x&#34;:1997.00769230769,&#34;y&#34;:2844.09},{&#34;x&#34;:1997.01153846154,&#34;y&#34;:2859.22},{&#34;x&#34;:1997.01538461538,&#34;y&#34;:2880.07},{&#34;x&#34;:1997.01923076923,&#34;y&#34;:2880.07},{&#34;x&#34;:1997.02307692308,&#34;y&#34;:2880.07},{&#34;x&#34;:1997.02692307692,&#34;y&#34;:2820.81},{&#34;x&#34;:1997.03076923077,&#34;y&#34;:2863.26},{&#34;x&#34;:1997.03461538462,&#34;y&#34;:2890.2},{&#34;x&#34;:1997.03846153846,&#34;y&#34;:2876.34},{&#34;x&#34;:1997.04230769231,&#34;y&#34;:2904.08},{&#34;x&#34;:1997.04615384615,&#34;y&#34;:2936.69},{&#34;x&#34;:1997.05,&#34;y&#34;:2915.81},{&#34;x&#34;:1997.05384615385,&#34;y&#34;:2956.78},{&#34;x&#34;:1997.05769230769,&#34;y&#34;:2978.84},{&#34;x&#34;:1997.06153846154,&#34;y&#34;:2976.56},{&#34;x&#34;:1997.06538461538,&#34;y&#34;:2996.12},{&#34;x&#34;:1997.06923076923,&#34;y&#34;:3006.87},{&#34;x&#34;:1997.07307692308,&#34;y&#34;:2999.19},{&#34;x&#34;:1997.07692307692,&#34;y&#34;:3000.66},{&#34;x&#34;:1997.08076923077,&#34;y&#34;:3026.63},{&#34;x&#34;:1997.08461538462,&#34;y&#34;:3037.28},{&#34;x&#34;:1997.08846153846,&#34;y&#34;:2982.63},{&#34;x&#34;:1997.09230769231,&#34;y&#34;:2992.55},{&#34;x&#34;:1997.09615384615,&#34;y&#34;:3028.27},{&#34;x&#34;:1997.1,&#34;y&#34;:2997.95},{&#34;x&#34;:1997.10384615385,&#34;y&#34;:3018.58},{&#34;x&#34;:1997.10769230769,&#34;y&#34;:3037.7},{&#34;x&#34;:1997.11153846154,&#34;y&#34;:3064.7},{&#34;x&#34;:1997.11538461538,&#34;y&#34;:3067.48},{&#34;x&#34;:1997.11923076923,&#34;y&#34;:3114.73},{&#34;x&#34;:1997.12307692308,&#34;y&#34;:3124.78},{&#34;x&#34;:1997.12692307692,&#34;y&#34;:3161.36},{&#34;x&#34;:1997.13076923077,&#34;y&#34;:3185.72},{&#34;x&#34;:1997.13461538462,&#34;y&#34;:3191.45},{&#34;x&#34;:1997.13846153846,&#34;y&#34;:3211.01},{&#34;x&#34;:1997.14230769231,&#34;y&#34;:3256.86},{&#34;x&#34;:1997.14615384615,&#34;y&#34;:3249.17},{&#34;x&#34;:1997.15,&#34;y&#34;:3260.3},{&#34;x&#34;:1997.15384615385,&#34;y&#34;:3230.83},{&#34;x&#34;:1997.15769230769,&#34;y&#34;:3209.04},{&#34;x&#34;:1997.16153846154,&#34;y&#34;:3197.09},{&#34;x&#34;:1997.16538461538,&#34;y&#34;:3203.79},{&#34;x&#34;:1997.16923076923,&#34;y&#34;:3180.63},{&#34;x&#34;:1997.17307692308,&#34;y&#34;:3233.34},{&#34;x&#34;:1997.17692307692,&#34;y&#34;:3245.02},{&#34;x&#34;:1997.18076923077,&#34;y&#34;:3272.58},{&#34;x&#34;:1997.18461538462,&#34;y&#34;:3261.04},{&#34;x&#34;:1997.18846153846,&#34;y&#34;:3258.74},{&#34;x&#34;:1997.19230769231,&#34;y&#34;:3345.09},{&#34;x&#34;:1997.19615384615,&#34;y&#34;:3375.45},{&#34;x&#34;:1997.2,&#34;y&#34;:3396.55},{&#34;x&#34;:1997.20384615385,&#34;y&#34;:3419.51},{&#34;x&#34;:1997.20769230769,&#34;y&#34;:3426.77},{&#34;x&#34;:1997.21153846154,&#34;y&#34;:3430.95},{&#34;x&#34;:1997.21538461538,&#34;y&#34;:3382.4},{&#34;x&#34;:1997.21923076923,&#34;y&#34;:3367.82},{&#34;x&#34;:1997.22307692308,&#34;y&#34;:3404.29},{&#34;x&#34;:1997.22692307692,&#34;y&#34;:3337.11},{&#34;x&#34;:1997.23076923077,&#34;y&#34;:3289.59},{&#34;x&#34;:1997.23461538462,&#34;y&#34;:3305.72},{&#34;x&#34;:1997.23846153846,&#34;y&#34;:3247.03},{&#34;x&#34;:1997.24230769231,&#34;y&#34;:3288.52},{&#34;x&#34;:1997.24615384615,&#34;y&#34;:3302.57},{&#34;x&#34;:1997.25,&#34;y&#34;:3374.93},{&#34;x&#34;:1997.25384615385,&#34;y&#34;:3439.22},{&#34;x&#34;:1997.25769230769,&#34;y&#34;:3407.83},{&#34;x&#34;:1997.26153846154,&#34;y&#34;:3407.83},{&#34;x&#34;:1997.26538461538,&#34;y&#34;:3407.83},{&#34;x&#34;:1997.26923076923,&#34;y&#34;:3281.46},{&#34;x&#34;:1997.27307692308,&#34;y&#34;:3210.94},{&#34;x&#34;:1997.27692307692,&#34;y&#34;:3212.82},{&#34;x&#34;:1997.28076923077,&#34;y&#34;:3235.35},{&#34;x&#34;:1997.28461538462,&#34;y&#34;:3342.77},{&#34;x&#34;:1997.28846153846,&#34;y&#34;:3328.13},{&#34;x&#34;:1997.29230769231,&#34;y&#34;:3364.76},{&#34;x&#34;:1997.29615384615,&#34;y&#34;:3352.58},{&#34;x&#34;:1997.3,&#34;y&#34;:3319.24},{&#34;x&#34;:1997.30384615385,&#34;y&#34;:3297.52},{&#34;x&#34;:1997.30769230769,&#34;y&#34;:3369.26},{&#34;x&#34;:1997.31153846154,&#34;y&#34;:3347.54},{&#34;x&#34;:1997.31538461538,&#34;y&#34;:3361.8},{&#34;x&#34;:1997.31923076923,&#34;y&#34;:3361.2},{&#34;x&#34;:1997.32307692308,&#34;y&#34;:3328.41},{&#34;x&#34;:1997.32692307692,&#34;y&#34;:3348.9},{&#34;x&#34;:1997.33076923077,&#34;y&#34;:3366.87},{&#34;x&#34;:1997.33461538462,&#34;y&#34;:3396.49},{&#34;x&#34;:1997.33846153846,&#34;y&#34;:3357.57},{&#34;x&#34;:1997.34230769231,&#34;y&#34;:3372.96},{&#34;x&#34;:1997.34615384615,&#34;y&#34;:3425.86},{&#34;x&#34;:1997.35,&#34;y&#34;:3438.09},{&#34;x&#34;:1997.35384615385,&#34;y&#34;:3438.09},{&#34;x&#34;:1997.35769230769,&#34;y&#34;:3491.08},{&#34;x&#34;:1997.36153846154,&#34;y&#34;:3565.69},{&#34;x&#34;:1997.36538461538,&#34;y&#34;:3548.52},{&#34;x&#34;:1997.36923076923,&#34;y&#34;:3537.45},{&#34;x&#34;:1997.37307692308,&#34;y&#34;:3537.45},{&#34;x&#34;:1997.37692307692,&#34;y&#34;:3533.21},{&#34;x&#34;:1997.38076923077,&#34;y&#34;:3593.14},{&#34;x&#34;:1997.38461538462,&#34;y&#34;:3559.29},{&#34;x&#34;:1997.38846153846,&#34;y&#34;:3588.57},{&#34;x&#34;:1997.39230769231,&#34;y&#34;:3564.85},{&#34;x&#34;:1997.39615384615,&#34;y&#34;:3569.26},{&#34;x&#34;:1997.4,&#34;y&#34;:3569.26},{&#34;x&#34;:1997.40384615385,&#34;y&#34;:3516.2},{&#34;x&#34;:1997.40769230769,&#34;y&#34;:3600.4},{&#34;x&#34;:1997.41153846154,&#34;y&#34;:3575.44},{&#34;x&#34;:1997.41538461538,&#34;y&#34;:3621.72},{&#34;x&#34;:1997.41923076923,&#34;y&#34;:3669.31},{&#34;x&#34;:1997.42307692308,&#34;y&#34;:3665.43},{&#34;x&#34;:1997.42692307692,&#34;y&#34;:3626.6},{&#34;x&#34;:1997.43076923077,&#34;y&#34;:3635.38},{&#34;x&#34;:1997.43461538462,&#34;y&#34;:3562.73},{&#34;x&#34;:1997.43846153846,&#34;y&#34;:3596.4},{&#34;x&#34;:1997.44230769231,&#34;y&#34;:3655.59},{&#34;x&#34;:1997.44615384615,&#34;y&#34;:3651.59},{&#34;x&#34;:1997.45,&#34;y&#34;:3684.6},{&#34;x&#34;:1997.45384615385,&#34;y&#34;:3700.53},{&#34;x&#34;:1997.45769230769,&#34;y&#34;:3668.61},{&#34;x&#34;:1997.46153846154,&#34;y&#34;:3671.16},{&#34;x&#34;:1997.46538461538,&#34;y&#34;:3671.87},{&#34;x&#34;:1997.46923076923,&#34;y&#34;:3737.16},{&#34;x&#34;:1997.47307692308,&#34;y&#34;:3752.37},{&#34;x&#34;:1997.47692307692,&#34;y&#34;:3750.02},{&#34;x&#34;:1997.48076923077,&#34;y&#34;:3721.18},{&#34;x&#34;:1997.48461538462,&#34;y&#34;:3730.56},{&#34;x&#34;:1997.48846153846,&#34;y&#34;:3777.56},{&#34;x&#34;:1997.49230769231,&#34;y&#34;:3788.54},{&#34;x&#34;:1997.49615384615,&#34;y&#34;:3748.79},{&#34;x&#34;:1997.5,&#34;y&#34;:3761.07},{&#34;x&#34;:1997.50384615385,&#34;y&#34;:3819.52},{&#34;x&#34;:1997.50769230769,&#34;y&#34;:3820.16},{&#34;x&#34;:1997.51153846154,&#34;y&#34;:3809.92},{&#34;x&#34;:1997.51538461538,&#34;y&#34;:3766.89},{&#34;x&#34;:1997.51923076923,&#34;y&#34;:3834.84},{&#34;x&#34;:1997.52307692308,&#34;y&#34;:3867.53},{&#34;x&#34;:1997.52692307692,&#34;y&#34;:3939.73},{&#34;x&#34;:1997.53076923077,&#34;y&#34;:3946.73},{&#34;x&#34;:1997.53461538462,&#34;y&#34;:4003.35},{&#34;x&#34;:1997.53846153846,&#34;y&#34;:4030.1},{&#34;x&#34;:1997.54230769231,&#34;y&#34;:4026.97},{&#34;x&#34;:1997.54615384615,&#34;y&#34;:4000.65},{&#34;x&#34;:1997.55,&#34;y&#34;:4074.3},{&#34;x&#34;:1997.55384615385,&#34;y&#34;:4142.19},{&#34;x&#34;:1997.55769230769,&#34;y&#34;:4139.68},{&#34;x&#34;:1997.56153846154,&#34;y&#34;:4223.69},{&#34;x&#34;:1997.56538461538,&#34;y&#34;:4203.91},{&#34;x&#34;:1997.56923076923,&#34;y&#34;:4131.94},{&#34;x&#34;:1997.57307692308,&#34;y&#34;:4139.96},{&#34;x&#34;:1997.57692307692,&#34;y&#34;:4297.64},{&#34;x&#34;:1997.58076923077,&#34;y&#34;:4384.82},{&#34;x&#34;:1997.58461538462,&#34;y&#34;:4320.52},{&#34;x&#34;:1997.58846153846,&#34;y&#34;:4368.54},{&#34;x&#34;:1997.59230769231,&#34;y&#34;:4400.3},{&#34;x&#34;:1997.59615384615,&#34;y&#34;:4377.7},{&#34;x&#34;:1997.6,&#34;y&#34;:4458.66},{&#34;x&#34;:1997.60384615385,&#34;y&#34;:4405.52},{&#34;x&#34;:1997.60769230769,&#34;y&#34;:4336.98},{&#34;x&#34;:1997.61153846154,&#34;y&#34;:4302.5},{&#34;x&#34;:1997.61538461538,&#34;y&#34;:4325.86},{&#34;x&#34;:1997.61923076923,&#34;y&#34;:4364.25},{&#34;x&#34;:1997.62307692308,&#34;y&#34;:4428.08},{&#34;x&#34;:1997.62692307692,&#34;y&#34;:4342.31},{&#34;x&#34;:1997.63076923077,&#34;y&#34;:4333.15},{&#34;x&#34;:1997.63461538462,&#34;y&#34;:4377.51},{&#34;x&#34;:1997.63846153846,&#34;y&#34;:4237.06},{&#34;x&#34;:1997.64230769231,&#34;y&#34;:4195.53},{&#34;x&#34;:1997.64615384615,&#34;y&#34;:4077.59},{&#34;x&#34;:1997.65,&#34;y&#34;:4080.55},{&#34;x&#34;:1997.65384615385,&#34;y&#34;:4190.45},{&#34;x&#34;:1997.65769230769,&#34;y&#34;:4251.93},{&#34;x&#34;:1997.66153846154,&#34;y&#34;:4204.81},{&#34;x&#34;:1997.66538461538,&#34;y&#34;:4090.14},{&#34;x&#34;:1997.66923076923,&#34;y&#34;:4076.75},{&#34;x&#34;:1997.67307692308,&#34;y&#34;:3993.7},{&#34;x&#34;:1997.67692307692,&#34;y&#34;:3992.03},{&#34;x&#34;:1997.68076923077,&#34;y&#34;:3897.43},{&#34;x&#34;:1997.68461538462,&#34;y&#34;:3919.79},{&#34;x&#34;:1997.68846153846,&#34;y&#34;:4001.81},{&#34;x&#34;:1997.69230769231,&#34;y&#34;:4127.28},{&#34;x&#34;:1997.69615384615,&#34;y&#34;:4062.13},{&#34;x&#34;:1997.7,&#34;y&#34;:4093.43},{&#34;x&#34;:1997.70384615385,&#34;y&#34;:4073.71},{&#34;x&#34;:1997.70769230769,&#34;y&#34;:4131.26},{&#34;x&#34;:1997.71153846154,&#34;y&#34;:4104.57},{&#34;x&#34;:1997.71538461538,&#34;y&#34;:4028},{&#34;x&#34;:1997.71923076923,&#34;y&#34;:3890.24},{&#34;x&#34;:1997.72307692308,&#34;y&#34;:3796.61},{&#34;x&#34;:1997.72692307692,&#34;y&#34;:3869.53},{&#34;x&#34;:1997.73076923077,&#34;y&#34;:3995.69},{&#34;x&#34;:1997.73461538462,&#34;y&#34;:3970.44},{&#34;x&#34;:1997.73846153846,&#34;y&#34;:4004.04},{&#34;x&#34;:1997.74230769231,&#34;y&#34;:3983.06},{&#34;x&#34;:1997.74615384615,&#34;y&#34;:4096.85},{&#34;x&#34;:1997.75,&#34;y&#34;:4091.77},{&#34;x&#34;:1997.75384615385,&#34;y&#34;:4150.95},{&#34;x&#34;:1997.75769230769,&#34;y&#34;:4104.93},{&#34;x&#34;:1997.76153846154,&#34;y&#34;:4135.09},{&#34;x&#34;:1997.76538461538,&#34;y&#34;:4116.52},{&#34;x&#34;:1997.76923076923,&#34;y&#34;:4154.89},{&#34;x&#34;:1997.77307692308,&#34;y&#34;:4262.98},{&#34;x&#34;:1997.77692307692,&#34;y&#34;:4266.17},{&#34;x&#34;:1997.78076923077,&#34;y&#34;:4266.17},{&#34;x&#34;:1997.78461538462,&#34;y&#34;:4326.35},{&#34;x&#34;:1997.78846153846,&#34;y&#34;:4311.13},{&#34;x&#34;:1997.79230769231,&#34;y&#34;:4267.4},{&#34;x&#34;:1997.79615384615,&#34;y&#34;:4179.92},{&#34;x&#34;:1997.8,&#34;y&#34;:4164.62},{&#34;x&#34;:1997.80384615385,&#34;y&#34;:4225.27},{&#34;x&#34;:1997.80769230769,&#34;y&#34;:4215.23},{&#34;x&#34;:1997.81153846154,&#34;y&#34;:4168.62},{&#34;x&#34;:1997.81538461538,&#34;y&#34;:4149.92},{&#34;x&#34;:1997.81923076923,&#34;y&#34;:4049.16},{&#34;x&#34;:1997.82307692308,&#34;y&#34;:4069.25},{&#34;x&#34;:1997.82692307692,&#34;y&#34;:4172.47},{&#34;x&#34;:1997.83076923077,&#34;y&#34;:4124.86},{&#34;x&#34;:1997.83461538462,&#34;y&#34;:3976.38},{&#34;x&#34;:1997.83846153846,&#34;y&#34;:3981.44},{&#34;x&#34;:1997.84230769231,&#34;y&#34;:3871.39},{&#34;x&#34;:1997.84615384615,&#34;y&#34;:3645.69},{&#34;x&#34;:1997.85,&#34;y&#34;:3806.66},{&#34;x&#34;:1997.85384615385,&#34;y&#34;:3748.88},{&#34;x&#34;:1997.85769230769,&#34;y&#34;:3753.66},{&#34;x&#34;:1997.86153846154,&#34;y&#34;:3847.73},{&#34;x&#34;:1997.86538461538,&#34;y&#34;:3784.8},{&#34;x&#34;:1997.86923076923,&#34;y&#34;:3841.39},{&#34;x&#34;:1997.87307692308,&#34;y&#34;:3813.88},{&#34;x&#34;:1997.87692307692,&#34;y&#34;:3715.38},{&#34;x&#34;:1997.88076923077,&#34;y&#34;:3728.37},{&#34;x&#34;:1997.88461538462,&#34;y&#34;:3734.79},{&#34;x&#34;:1997.88846153846,&#34;y&#34;:3697.48},{&#34;x&#34;:1997.89230769231,&#34;y&#34;:3701.94},{&#34;x&#34;:1997.89615384615,&#34;y&#34;:3676.65},{&#34;x&#34;:1997.9,&#34;y&#34;:3816.71},{&#34;x&#34;:1997.90384615385,&#34;y&#34;:3844.14},{&#34;x&#34;:1997.90769230769,&#34;y&#34;:3876.9},{&#34;x&#34;:1997.91153846154,&#34;y&#34;:3931.81},{&#34;x&#34;:1997.91538461538,&#34;y&#34;:3941.91},{&#34;x&#34;:1997.91923076923,&#34;y&#34;:3832.1},{&#34;x&#34;:1997.92307692308,&#34;y&#34;:3850.14},{&#34;x&#34;:1997.92692307692,&#34;y&#34;:3926.93},{&#34;x&#34;:1997.93076923077,&#34;y&#34;:3961.97},{&#34;x&#34;:1997.93461538462,&#34;y&#34;:3972.08},{&#34;x&#34;:1997.93846153846,&#34;y&#34;:4125.92},{&#34;x&#34;:1997.94230769231,&#34;y&#34;:4096.4},{&#34;x&#34;:1997.94615384615,&#34;y&#34;:4074.55},{&#34;x&#34;:1997.95,&#34;y&#34;:4159.72},{&#34;x&#34;:1997.95384615385,&#34;y&#34;:4191.81},{&#34;x&#34;:1997.95769230769,&#34;y&#34;:4208.14},{&#34;x&#34;:1997.96153846154,&#34;y&#34;:4187.13},{&#34;x&#34;:1997.96538461538,&#34;y&#34;:4116.7},{&#34;x&#34;:1997.96923076923,&#34;y&#34;:4016.7},{&#34;x&#34;:1997.97307692308,&#34;y&#34;:4061.91},{&#34;x&#34;:1997.97692307692,&#34;y&#34;:4029.08},{&#34;x&#34;:1997.98076923077,&#34;y&#34;:4150.31},{&#34;x&#34;:1997.98461538462,&#34;y&#34;:4154.57},{&#34;x&#34;:1997.98846153846,&#34;y&#34;:4162.92},{&#34;x&#34;:1997.99230769231,&#34;y&#34;:4055.35},{&#34;x&#34;:1997.99615384615,&#34;y&#34;:4125.54},{&#34;x&#34;:1998,&#34;y&#34;:4132.79},{&#34;x&#34;:1998.00384615385,&#34;y&#34;:4132.79},{&#34;x&#34;:1998.00769230769,&#34;y&#34;:4132.79},{&#34;x&#34;:1998.01153846154,&#34;y&#34;:4132.79},{&#34;x&#34;:1998.01538461538,&#34;y&#34;:4266.02},{&#34;x&#34;:1998.01923076923,&#34;y&#34;:4224.3},{&#34;x&#34;:1998.02307692308,&#34;y&#34;:4224.3},{&#34;x&#34;:1998.02692307692,&#34;y&#34;:4224.3},{&#34;x&#34;:1998.03076923077,&#34;y&#34;:4364.32},{&#34;x&#34;:1998.03461538462,&#34;y&#34;:4416.95},{&#34;x&#34;:1998.03846153846,&#34;y&#34;:4360.05},{&#34;x&#34;:1998.04230769231,&#34;y&#34;:4339.98},{&#34;x&#34;:1998.04615384615,&#34;y&#34;:4293.64},{&#34;x&#34;:1998.05,&#34;y&#34;:4237.75},{&#34;x&#34;:1998.05384615385,&#34;y&#34;:4134.64},{&#34;x&#34;:1998.05769230769,&#34;y&#34;:4150.01},{&#34;x&#34;:1998.06153846154,&#34;y&#34;:4145.41},{&#34;x&#34;:1998.06538461538,&#34;y&#34;:4140.22},{&#34;x&#34;:1998.06923076923,&#34;y&#34;:4216.24},{&#34;x&#34;:1998.07307692308,&#34;y&#34;:4290.05},{&#34;x&#34;:1998.07692307692,&#34;y&#34;:4310.83},{&#34;x&#34;:1998.08076923077,&#34;y&#34;:4250.47},{&#34;x&#34;:1998.08461538462,&#34;y&#34;:4238.77},{&#34;x&#34;:1998.08846153846,&#34;y&#34;:4222.16},{&#34;x&#34;:1998.09230769231,&#34;y&#34;:4266.34},{&#34;x&#34;:1998.09615384615,&#34;y&#34;:4316.05},{&#34;x&#34;:1998.1,&#34;y&#34;:4385.29},{&#34;x&#34;:1998.10384615385,&#34;y&#34;:4444.53},{&#34;x&#34;:1998.10769230769,&#34;y&#34;:4442.53},{&#34;x&#34;:1998.11153846154,&#34;y&#34;:4529.88},{&#34;x&#34;:1998.11538461538,&#34;y&#34;:4529.18},{&#34;x&#34;:1998.11923076923,&#34;y&#34;:4509.25},{&#34;x&#34;:1998.12307692308,&#34;y&#34;:4494.72},{&#34;x&#34;:1998.12692307692,&#34;y&#34;:4536.91},{&#34;x&#34;:1998.13076923077,&#34;y&#34;:4519.56},{&#34;x&#34;:1998.13461538462,&#34;y&#34;:4558.62},{&#34;x&#34;:1998.13846153846,&#34;y&#34;:4552.46},{&#34;x&#34;:1998.14230769231,&#34;y&#34;:4509.37},{&#34;x&#34;:1998.14615384615,&#34;y&#34;:4522.42},{&#34;x&#34;:1998.15,&#34;y&#34;:4535.56},{&#34;x&#34;:1998.15384615385,&#34;y&#34;:4627.42},{&#34;x&#34;:1998.15769230769,&#34;y&#34;:4611.66},{&#34;x&#34;:1998.16153846154,&#34;y&#34;:4581.08},{&#34;x&#34;:1998.16538461538,&#34;y&#34;:4583.03},{&#34;x&#34;:1998.16923076923,&#34;y&#34;:4610.66},{&#34;x&#34;:1998.17307692308,&#34;y&#34;:4604.55},{&#34;x&#34;:1998.17692307692,&#34;y&#34;:4704.58},{&#34;x&#34;:1998.18076923077,&#34;y&#34;:4695.78},{&#34;x&#34;:1998.18461538462,&#34;y&#34;:4693.86},{&#34;x&#34;:1998.18846153846,&#34;y&#34;:4781.62},{&#34;x&#34;:1998.19230769231,&#34;y&#34;:4759.62},{&#34;x&#34;:1998.19615384615,&#34;y&#34;:4690.52},{&#34;x&#34;:1998.2,&#34;y&#34;:4676.42},{&#34;x&#34;:1998.20384615385,&#34;y&#34;:4762.71},{&#34;x&#34;:1998.20769230769,&#34;y&#34;:4828.89},{&#34;x&#34;:1998.21153846154,&#34;y&#34;:4852.22},{&#34;x&#34;:1998.21538461538,&#34;y&#34;:4862.41},{&#34;x&#34;:1998.21923076923,&#34;y&#34;:4838.67},{&#34;x&#34;:1998.22307692308,&#34;y&#34;:4872.24},{&#34;x&#34;:1998.22692307692,&#34;y&#34;:4905.59},{&#34;x&#34;:1998.23076923077,&#34;y&#34;:4945.91},{&#34;x&#34;:1998.23461538462,&#34;y&#34;:4908.55},{&#34;x&#34;:1998.23846153846,&#34;y&#34;:4949.91},{&#34;x&#34;:1998.24230769231,&#34;y&#34;:5045.16},{&#34;x&#34;:1998.24615384615,&#34;y&#34;:5014.13},{&#34;x&#34;:1998.25,&#34;y&#34;:5064.35},{&#34;x&#34;:1998.25384615385,&#34;y&#34;:5114.13},{&#34;x&#34;:1998.25769230769,&#34;y&#34;:5029},{&#34;x&#34;:1998.26153846154,&#34;y&#34;:5066.9},{&#34;x&#34;:1998.26538461538,&#34;y&#34;:5069.89},{&#34;x&#34;:1998.26923076923,&#34;y&#34;:5097.25},{&#34;x&#34;:1998.27307692308,&#34;y&#34;:5135.35},{&#34;x&#34;:1998.27692307692,&#34;y&#34;:5179.04},{&#34;x&#34;:1998.28076923077,&#34;y&#34;:5254.32},{&#34;x&#34;:1998.28461538462,&#34;y&#34;:5345.89},{&#34;x&#34;:1998.28846153846,&#34;y&#34;:5309.67},{&#34;x&#34;:1998.29230769231,&#34;y&#34;:5267.35},{&#34;x&#34;:1998.29615384615,&#34;y&#34;:5312.25},{&#34;x&#34;:1998.3,&#34;y&#34;:5312.25},{&#34;x&#34;:1998.30384615385,&#34;y&#34;:5312.25},{&#34;x&#34;:1998.30769230769,&#34;y&#34;:5367.98},{&#34;x&#34;:1998.31153846154,&#34;y&#34;:5359.24},{&#34;x&#34;:1998.31538461538,&#34;y&#34;:5292.97},{&#34;x&#34;:1998.31923076923,&#34;y&#34;:5326.63},{&#34;x&#34;:1998.32307692308,&#34;y&#34;:5407.93},{&#34;x&#34;:1998.32692307692,&#34;y&#34;:5373.8},{&#34;x&#34;:1998.33076923077,&#34;y&#34;:5312.28},{&#34;x&#34;:1998.33461538462,&#34;y&#34;:5262.57},{&#34;x&#34;:1998.33846153846,&#34;y&#34;:5144.42},{&#34;x&#34;:1998.34230769231,&#34;y&#34;:5002.71},{&#34;x&#34;:1998.34615384615,&#34;y&#34;:5110.88},{&#34;x&#34;:1998.35,&#34;y&#34;:5083.8},{&#34;x&#34;:1998.35384615385,&#34;y&#34;:5241.23},{&#34;x&#34;:1998.35769230769,&#34;y&#34;:5241.23},{&#34;x&#34;:1998.36153846154,&#34;y&#34;:5337.75},{&#34;x&#34;:1998.36538461538,&#34;y&#34;:5226.2},{&#34;x&#34;:1998.36923076923,&#34;y&#34;:5264.62},{&#34;x&#34;:1998.37307692308,&#34;y&#34;:5164.89},{&#34;x&#34;:1998.37692307692,&#34;y&#34;:5270.61},{&#34;x&#34;:1998.38076923077,&#34;y&#34;:5348.75},{&#34;x&#34;:1998.38461538462,&#34;y&#34;:5307.82},{&#34;x&#34;:1998.38846153846,&#34;y&#34;:5371.99},{&#34;x&#34;:1998.39230769231,&#34;y&#34;:5374.11},{&#34;x&#34;:1998.39615384615,&#34;y&#34;:5414.31},{&#34;x&#34;:1998.4,&#34;y&#34;:5343.66},{&#34;x&#34;:1998.40384615385,&#34;y&#34;:5441},{&#34;x&#34;:1998.40769230769,&#34;y&#34;:5514.51},{&#34;x&#34;:1998.41153846154,&#34;y&#34;:5514.51},{&#34;x&#34;:1998.41538461538,&#34;y&#34;:5530.19},{&#34;x&#34;:1998.41923076923,&#34;y&#34;:5592.46},{&#34;x&#34;:1998.42307692308,&#34;y&#34;:5639.89},{&#34;x&#34;:1998.42692307692,&#34;y&#34;:5466.88},{&#34;x&#34;:1998.43076923077,&#34;y&#34;:5507.36},{&#34;x&#34;:1998.43461538462,&#34;y&#34;:5556.99},{&#34;x&#34;:1998.43846153846,&#34;y&#34;:5556.99},{&#34;x&#34;:1998.44230769231,&#34;y&#34;:5583.83},{&#34;x&#34;:1998.44615384615,&#34;y&#34;:5640.42},{&#34;x&#34;:1998.45,&#34;y&#34;:5605.38},{&#34;x&#34;:1998.45384615385,&#34;y&#34;:5724.75},{&#34;x&#34;:1998.45769230769,&#34;y&#34;:5787.05},{&#34;x&#34;:1998.46153846154,&#34;y&#34;:5773.77},{&#34;x&#34;:1998.46538461538,&#34;y&#34;:5799.22},{&#34;x&#34;:1998.46923076923,&#34;y&#34;:5799.22},{&#34;x&#34;:1998.47307692308,&#34;y&#34;:5631.34},{&#34;x&#34;:1998.47692307692,&#34;y&#34;:5581.24},{&#34;x&#34;:1998.48076923077,&#34;y&#34;:5621.71},{&#34;x&#34;:1998.48461538462,&#34;y&#34;:5742.83},{&#34;x&#34;:1998.48846153846,&#34;y&#34;:5689.89},{&#34;x&#34;:1998.49230769231,&#34;y&#34;:5644.22},{&#34;x&#34;:1998.49615384615,&#34;y&#34;:5648.11},{&#34;x&#34;:1998.5,&#34;y&#34;:5748.34},{&#34;x&#34;:1998.50384615385,&#34;y&#34;:5784.4},{&#34;x&#34;:1998.50769230769,&#34;y&#34;:5886.72},{&#34;x&#34;:1998.51153846154,&#34;y&#34;:5870.49},{&#34;x&#34;:1998.51538461538,&#34;y&#34;:5933.73},{&#34;x&#34;:1998.51923076923,&#34;y&#34;:5841.83},{&#34;x&#34;:1998.52307692308,&#34;y&#34;:5910.51},{&#34;x&#34;:1998.52692307692,&#34;y&#34;:5905.15},{&#34;x&#34;:1998.53076923077,&#34;y&#34;:5961.45},{&#34;x&#34;:1998.53461538462,&#34;y&#34;:5942.06},{&#34;x&#34;:1998.53846153846,&#34;y&#34;:5975.88},{&#34;x&#34;:1998.54230769231,&#34;y&#34;:6018.89},{&#34;x&#34;:1998.54615384615,&#34;y&#34;:6000.84},{&#34;x&#34;:1998.55,&#34;y&#34;:6001.24},{&#34;x&#34;:1998.55384615385,&#34;y&#34;:6023.31},{&#34;x&#34;:1998.55769230769,&#34;y&#34;:6101.9},{&#34;x&#34;:1998.56153846154,&#34;y&#34;:6106.1},{&#34;x&#34;:1998.56538461538,&#34;y&#34;:6108},{&#34;x&#34;:1998.56923076923,&#34;y&#34;:6162.86},{&#34;x&#34;:1998.57307692308,&#34;y&#34;:6186.09},{&#34;x&#34;:1998.57692307692,&#34;y&#34;:6184.1},{&#34;x&#34;:1998.58076923077,&#34;y&#34;:6081.11},{&#34;x&#34;:1998.58461538462,&#34;y&#34;:6043.82},{&#34;x&#34;:1998.58846153846,&#34;y&#34;:6040.58},{&#34;x&#34;:1998.59230769231,&#34;y&#34;:5854.35},{&#34;x&#34;:1998.59615384615,&#34;y&#34;:5867.52},{&#34;x&#34;:1998.6,&#34;y&#34;:5828.74},{&#34;x&#34;:1998.60384615385,&#34;y&#34;:5906.33},{&#34;x&#34;:1998.60769230769,&#34;y&#34;:5861.19},{&#34;x&#34;:1998.61153846154,&#34;y&#34;:5774.38},{&#34;x&#34;:1998.61538461538,&#34;y&#34;:5718.7},{&#34;x&#34;:1998.61923076923,&#34;y&#34;:5614.77},{&#34;x&#34;:1998.62307692308,&#34;y&#34;:5528.12},{&#34;x&#34;:1998.62692307692,&#34;y&#34;:5598.32},{&#34;x&#34;:1998.63076923077,&#34;y&#34;:5460.43},{&#34;x&#34;:1998.63461538462,&#34;y&#34;:5285.78},{&#34;x&#34;:1998.63846153846,&#34;y&#34;:5386.94},{&#34;x&#34;:1998.64230769231,&#34;y&#34;:5355.03},{&#34;x&#34;:1998.64615384615,&#34;y&#34;:5473.72}]}],&#34;dataLabels&#34;:{&#34;enabled&#34;:false},&#34;stroke&#34;:{&#34;curve&#34;:&#34;straight&#34;}},&#34;auto_update&#34;:true},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Thus, We learnt how to build interactive charts using &lt;code&gt;apexcharter&lt;/code&gt; that follows a very minimal API similar to &lt;code&gt;highcharter&lt;/code&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/dreamRs/apexcharter&#34;&gt;apexcharter : dreamRs - Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://apexcharts.com/&#34;&gt;apexcharts.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.programmingwithr.com/how-to-reshape-a-dataframe-from-wide-to-long-or-long-to-wide-format/&#34;&gt;How to reshape a dataframe from wide to long or long to wide format using tidyr - pivot_longer() pivot_wider()&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Programmatically extract TIOBE Index Ratings</title>
      <author>AbdulMajedRaja RS</author>
      <link>/programmatically-extract-tiobe-index-ratings/</link>
      <pubDate>Sat, 03 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/programmatically-extract-tiobe-index-ratings/</guid>
      <description>


&lt;p&gt;&lt;strong&gt;TIOBE Index&lt;/strong&gt; is an index (ranking) that claims to represent the popularity of programming languages. &lt;a href=&#34;https://yihui.name/en/about/&#34;&gt;Yihui&lt;/a&gt; (The creator of &lt;code&gt;blogdown&lt;/code&gt; package), recently wrote a blogpost titled “&lt;a href=&#34;https://yihui.name/en/2019/06/tiobe-index/&#34;&gt;On TIOBE Index and the era of decision fatigue&lt;/a&gt;” and I strongly recommend you to go through that before continuing with this post.&lt;/p&gt;
&lt;p&gt;So the &lt;strong&gt;Disclaimer&lt;/strong&gt; goes like this: &lt;em&gt;This post/author doesn’t believe that TIOBE Index is a fair way to measure/present popularity of programming languages and this is writtet just to teach you how to extract/get TIOBE Index programmatically using the R package &lt;code&gt;tiobeindexr&lt;/code&gt; &lt;/em&gt;&lt;/p&gt;
&lt;div id=&#34;tiobeindexr---intro-installation-loading&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;tiobeindexr - Intro, Installation &amp;amp; Loading&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;tiobeindexr&lt;/code&gt; is an R package to extract TIOBE Index of the given month.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;tiobeindexr&lt;/code&gt; is available on CRAN so you can install like below:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;tiobeindexr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once installed, it can be loaded like any other R package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tiobeindexr)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Downloading TIOBE Index Data using your Internet...&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;When &lt;code&gt;tiobeindexr&lt;/code&gt; is loaded for the first time in the given session, it downloads the required data from the internet.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;extract-top-20-programming-languages-of-the-month&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Extract top 20 programming languages of the month&lt;/h3&gt;
&lt;p&gt;TIOBE Index publishes the rank of programming languages every month (monthly-refresh). We can use the function &lt;code&gt;top_20()&lt;/code&gt; to extract the top 20 programming languages of the month (that TIOBE has published)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;top_20()&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    Jul 2019 Jul 2018 Programming Language Ratings Change
## 1         1        1                 Java 15.058% -1.08%
## 2         2        2                    C 14.211% -0.45%
## 3         3        4               Python  9.260% +2.90%
## 4         4        3                  C++  6.705% -0.91%
## 5         5        6                   C#  4.365% +0.57%
## 6         6        5    Visual Basic .NET  4.208% -0.04%
## 7         7        8           JavaScript  2.304% -0.53%
## 8         8        7                  PHP  2.167% -0.67%
## 9         9        9                  SQL  1.977% -0.36%
## 10       10       10          Objective-C  1.686% +0.23%
## 11       11       12                 Ruby  1.636% +0.43%
## 12       12       13    Assembly language  1.390% +0.24%
## 13       13       11                Swift  1.121% -0.29%
## 14       14       15               MATLAB  1.078% -0.05%
## 15       15       81               Groovy  1.070% +0.96%
## 16       16       18                   Go  1.016% +0.05%
## 17       17       19         Visual Basic  1.009% +0.12%
## 18       18       16 Delphi/Object Pascal  0.950% -0.16%
## 19       19       17                 Perl  0.918% -0.18%
## 20       20       14                    R  0.837% -0.31%&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;visualising-top-changes-of-tiobe-index-this-month-vs-previous-month&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Visualising Top Changes of TIOBE Index This Month vs Previous Month&lt;/h3&gt;
&lt;p&gt;As you can see in the output of the previous section, &lt;code&gt;top_20()&lt;/code&gt; also gives us the % change MoM (Month-over-Month) which we can use to see the top changes.&lt;/p&gt;
&lt;p&gt;For simplicity, We’ll load the entire &lt;code&gt;tidyverse&lt;/code&gt; package and use &lt;code&gt;ggplot2&lt;/code&gt;’s bar-plot to visualize the changes.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

top_20() %&amp;gt;% 
  mutate(Change = as.numeric(gsub(&amp;#39;%&amp;#39;,&amp;#39;&amp;#39;,Change))) %&amp;gt;% 
  ggplot(aes(x = reorder(`Programming Language`,Change), y = Change, 
             fill = `Programming Language`,
             label = paste0(Change, &amp;quot;%&amp;quot;))) +
  geom_col(show.legend = FALSE) +
  coord_flip() +
  geom_text(nudge_x = 0.1) +
  xlab(&amp;#39;Programming Language&amp;#39;) +
  ggtitle(&amp;#39;Programming Languages Change this Month&amp;#39;) &lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-03-programmatically-extract-tiobe-index-ratings_files/figure-html/unnamed-chunk-4-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Hence, we learnt how to use &lt;code&gt;tiobeindexr&lt;/code&gt; to programmatically download &lt;code&gt;TIOBE Index&lt;/code&gt; and visualize insights from it. And, alongisde we also learnt that TIOBE Index in fact isn’t a fair represenation of the popularity of programming languages&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/amrrs/tiobeindexr&#34;&gt;tiobeindexr - Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tiobe.com/tiobe-index/&#34;&gt;TIOBE Index - Official Page&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to reshape a dataframe from wide to long or long to wide format</title>
      <author>AbdulMajedRaja RS</author>
      <link>/how-to-reshape-a-dataframe-from-wide-to-long-or-long-to-wide-format/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/how-to-reshape-a-dataframe-from-wide-to-long-or-long-to-wide-format/</guid>
      <description>


&lt;p&gt;Reshaping a dataframe / table from long to wide format or wide to long format is one of the daily tasks a Data Analyst / Data Scientist would be doing. The long format is similar to the &lt;code&gt;tidy&lt;/code&gt; format that the &lt;code&gt;tidyverse&lt;/code&gt; advocates. Even while, it’s been a very common task - the &lt;code&gt;tidyr&lt;/code&gt; package’s solution of using &lt;code&gt;spread()&lt;/code&gt; and &lt;code&gt;gather()&lt;/code&gt; almost never was intuitive enough to be used in the code without SOing or Referring the documentation. While I used to think, It’s just me who didn’t &lt;code&gt;spread&lt;/code&gt; and &lt;code&gt;gather&lt;/code&gt;, It seemed to be mass problem when the package developer &lt;strong&gt;Hadley Wickham&lt;/strong&gt; realized this to completely rewrite those functions into two new functions &lt;code&gt;pivot_wider()&lt;/code&gt; and &lt;code&gt;pivot_longer()&lt;/code&gt; (which is also equivalent to &lt;code&gt;melt()&lt;/code&gt; and &lt;code&gt;cast()&lt;/code&gt; - or simply &lt;code&gt;unpivot&lt;/code&gt; and &lt;code&gt;pivot&lt;/code&gt;)&lt;/p&gt;
&lt;div id=&#34;update-your-tidyr&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;update your &lt;code&gt;tidyr&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;If you are an R-user, It’s highly likely that you’ve got &lt;code&gt;tidyr&lt;/code&gt; either as a standalone package or part of the &lt;code&gt;tidyverse&lt;/code&gt; packages. Please update the package the get the latest &lt;code&gt;tidyr&lt;/code&gt; to get these functions for reshaping.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;tidyr&amp;quot;) 

or

devtools::install_github(&amp;quot;tidyverse/tidyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and load the library.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyr)

packageVersion(&amp;quot;tidyr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## [1] &amp;#39;0.8.3.9000&amp;#39;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Data&lt;/h3&gt;
&lt;p&gt;Let’s take this problem from a very popular &lt;a href=&#34;https://stackoverflow.com/questions/2185252/reshaping-data-frame-from-wide-to-long-format&#34;&gt;Stack Overflow Question&lt;/a&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;#data
df &amp;lt;- read.table(textConnection(
&amp;quot;Code Country        1950    1951    1952    1953    1954
AFG  Afghanistan    20249  19000  22532  5000  24555
ALB  Albania        8097   8986   3000  11123  12246&amp;quot;), header=TRUE)

df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##   Code     Country X1950 X1951 X1952 X1953 X1954
## 1  AFG Afghanistan 20249 19000 22532  5000 24555
## 2  ALB     Albania  8097  8986  3000 11123 12246&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This wide format is good for some use-cases but for most of what we do with Data Analysis, it’d require the data to be in the long format.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-reshaping---the-problem&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Why Reshaping - The Problem&lt;/h3&gt;
&lt;p&gt;Given this data, Let’s try to make a Time-series Line Chart using &lt;code&gt;ggplot2&lt;/code&gt;. But the format in which the data is currently shaped (wide) can’t help us in building the line chart because for a line chart using &lt;code&gt;geom_line()&lt;/code&gt; we need the data in the long format - where the x-axis and y-axis are columns (ideally with x being a Time variable and y being a continuous variable) and also that we’ve got the country which could help us comparing both the countries.&lt;/p&gt;
&lt;p&gt;Let’s do that!&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(tidyverse)

df_pivoted &amp;lt;- pivot_longer(df, cols = -c(&amp;quot;Code&amp;quot;,&amp;quot;Country&amp;quot;), names_to = &amp;quot;year&amp;quot;)

df_pivoted&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 10 x 4
##    Code  Country     year  value
##    &amp;lt;fct&amp;gt; &amp;lt;fct&amp;gt;       &amp;lt;chr&amp;gt; &amp;lt;int&amp;gt;
##  1 AFG   Afghanistan X1950 20249
##  2 AFG   Afghanistan X1951 19000
##  3 AFG   Afghanistan X1952 22532
##  4 AFG   Afghanistan X1953  5000
##  5 AFG   Afghanistan X1954 24555
##  6 ALB   Albania     X1950  8097
##  7 ALB   Albania     X1951  8986
##  8 ALB   Albania     X1952  3000
##  9 ALB   Albania     X1953 11123
## 10 ALB   Albania     X1954 12246&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I’m personally glad that I don’t have to check the confusing syntax of &lt;code&gt;gather()&lt;/code&gt; instead the intuitve name of &lt;code&gt;pivot_longer()&lt;/code&gt; (which is literally what we’ve to do) flows through my fingers.&lt;/p&gt;
&lt;p&gt;As you can see above, the &lt;code&gt;pivot_longer()&lt;/code&gt; function as any tidyverse function supports &lt;code&gt;%&amp;gt;%&lt;/code&gt; which also means the first argument is the dataframe itself, then the list of &lt;code&gt;cols&lt;/code&gt; we would like to &lt;code&gt;pivot_longer()&lt;/code&gt; and the next essential argument &lt;code&gt;names_to&lt;/code&gt; - new column name under whcih these are rolled up. This gives us the reshaped data which we could use for plotting. If you came to this article, just to see reshaping, you’re good by this place. But if you want to connect better with the reason why we wanted to reshape in the first place, Let’s go do the line graph!&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;line-graph-with-reshaped-data&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Line Graph with reshaped data&lt;/h3&gt;
&lt;p&gt;Now that we know how to reshape the data (from wide to long format), we can use &lt;code&gt;ggplot2&lt;/code&gt;’s &lt;code&gt;geom_line()&lt;/code&gt; to plot the (time-series) lines.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;df %&amp;gt;% 
  pivot_longer(-c(&amp;quot;Code&amp;quot;,&amp;quot;Country&amp;quot;),&amp;quot;year&amp;quot;) %&amp;gt;% 
  mutate(year = as.integer(str_replace(year, &amp;quot;X&amp;quot;,&amp;quot;&amp;quot;))) %&amp;gt;% 
  ggplot() + geom_line(aes(year, value, group = Country, color = Country)) +
  labs(title =  &amp;quot;Line Graph after Reshaping&amp;quot;,
       subtitle = &amp;quot;I love pivot_longer()&amp;quot;,
       caption = &amp;quot;I was always confused with gather and spread&amp;quot;) +
  theme_minimal()&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;img src=&#34;/post/2019-08-01-how-to-reshape-a-dataframe-from-wide-to-long-or-long-to-wide-format_files/figure-html/unnamed-chunk-5-1.png&#34; width=&#34;672&#34; /&gt;&lt;/p&gt;
&lt;p&gt;In the above code, I’ve repeated the reshaping again - just to imply a point that this is why &lt;code&gt;%&amp;gt;%&lt;/code&gt;s are cool because we can build intuitive ETL (kind-of) pipeline and visualization together step-by-step.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-end&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The End&lt;/h3&gt;
&lt;p&gt;Well, We finally ended up with a beautiful (opinionated) line graph to compare two countries’ (made-up values) which came from a wide format data originally which we reshaped to long format data.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://stackoverflow.com/a/57013551/5086335&#34;&gt;how to reshape data from long to wide - SO&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/tidyverse/tidyr&#34;&gt;tidyr - Github&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/hadleywickham/status/999348604887293952&#34;&gt;Hadley’s Tweet on spread/gather&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>Find out Bulk Email ID Reputations Risk using R</title>
      <author>AbdulMajedRaja RS</author>
      <link>/find-out-bulk-email-id-reputations-risk-using-r/</link>
      <pubDate>Wed, 31 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/find-out-bulk-email-id-reputations-risk-using-r/</guid>
      <description>


&lt;p&gt;If you are working in Info Sec / Cyber Security, One of the things that might be part of your day job is to filter email to remove spams / phishing emails. While this could be done at several levels and ways, monitoring the email id (like &lt;code&gt;abc@xyz.com&lt;/code&gt;) and validating its reputation to see if it seems risky / suspicious or authentic and then allowing them to reach the user inbox - is one of the solid ways (while it’s also error-prone with False Positives). In this post, We’ll see how to check the reputation of Email Address in your R code.&lt;/p&gt;
&lt;div id=&#34;emailrep---intro&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;emailrep - Intro&lt;/h3&gt;
&lt;p&gt;The package that’s going to help us in checking the reputation of Email ID is &lt;a href=&#34;https://github.com/hrbrmstr/emailrep&#34;&gt;&lt;code&gt;emailrep&lt;/code&gt;&lt;/a&gt; by &lt;a href=&#34;https://github.com/hrbrmstr&#34;&gt;&lt;strong&gt;Bob Rudis&lt;/strong&gt;&lt;/a&gt;. &lt;code&gt;emailrep&lt;/code&gt; is an R-binding for the &lt;code&gt;EmailRep&lt;/code&gt; API provided by the service &lt;a href=&#34;https://emailrep.io/&#34;&gt;emailrep.io&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;emailrep.io-reputation---what-does-it-mean&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;emailrep.io Reputation - What does it mean?&lt;/h3&gt;
&lt;p&gt;Before we move on to the code section, It’s important to understand what does the reputation mean? It simply means the email hasn’t been seen anywhere trustworthy on the internet with the assumption that Trustworthy email addresses have a history and record across multiple sources on the web.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;emailrep---installation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;emailrep - Installation&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;emailrep&lt;/code&gt; can be installed from Bob Rudis’ CINC (which ironically stands for &lt;em&gt;CINC Is Not CRAN)&lt;/em&gt;).&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;emailrep&amp;quot;, repos = &amp;quot;https://cinc.rud.is&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or from multiple other online repos from various Git services&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;remotes::install_git(&amp;quot;https://git.rud.is/hrbrmstr/emailrep.git&amp;quot;)
# or
remotes::install_git(&amp;quot;https://git.sr.ht/~hrbrmstr/emailrep&amp;quot;)
# or
remotes::install_gitlab(&amp;quot;hrbrmstr/emailrep&amp;quot;)
# or
remotes::install_bitbucket(&amp;quot;hrbrmstr/emailrep&amp;quot;)
# or
remotes::install_github(&amp;quot;hrbrmstr/emailrep&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;emailrep---loading-and-basic-example&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;emailrep - Loading and Basic Example&lt;/h3&gt;
&lt;p&gt;Once installed, &lt;code&gt;emailrep&lt;/code&gt; can be loaded like any other R package:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(emailrep)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;emailrep&lt;/code&gt; is quite simple in its structure with one function &lt;code&gt;email_rep()&lt;/code&gt; doing the job for us. Let’s try to find out the reputation of email id - &lt;em&gt;&lt;a href=&#34;mailto:tim@apple.com&#34; class=&#34;email&#34;&gt;tim@apple.com&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;email_rep(&amp;quot;tim@apple.com&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## $email
## [1] &amp;quot;tim@apple.com&amp;quot;
## 
## $reputation
## [1] &amp;quot;high&amp;quot;
## 
## $suspicious
## [1] FALSE
## 
## $references
## [1] 22
## 
## $details
## $details$blacklisted
## [1] FALSE
## 
## $details$malicious_activity
## [1] FALSE
## 
## $details$malicious_activity_recent
## [1] FALSE
## 
## $details$credentials_leaked
## [1] TRUE
## 
## $details$credentials_leaked_recent
## [1] FALSE
## 
## $details$data_breach
## [1] TRUE
## 
## $details$last_seen
## [1] &amp;quot;02/25/2019&amp;quot;
## 
## $details$domain_exists
## [1] TRUE
## 
## $details$domain_reputation
## [1] &amp;quot;high&amp;quot;
## 
## $details$new_domain
## [1] FALSE
## 
## $details$days_since_domain_creation
## [1] 11853
## 
## $details$suspicious_tld
## [1] FALSE
## 
## $details$spam
## [1] FALSE
## 
## $details$free_provider
## [1] FALSE
## 
## $details$disposable
## [1] FALSE
## 
## $details$deliverable
## [1] FALSE
## 
## $details$accept_all
## [1] FALSE
## 
## $details$valid_mx
## [1] FALSE
## 
## $details$spoofable
## [1] FALSE
## 
## $details$spf_strict
## [1] TRUE
## 
## $details$dmarc_enforced
## [1] TRUE
## 
## $details$profiles
##  [1] &amp;quot;linkedin&amp;quot;  &amp;quot;angellist&amp;quot; &amp;quot;facebook&amp;quot;  &amp;quot;spotify&amp;quot;   &amp;quot;vimeo&amp;quot;    
##  [6] &amp;quot;instagram&amp;quot; &amp;quot;github&amp;quot;    &amp;quot;twitter&amp;quot;   &amp;quot;pinterest&amp;quot; &amp;quot;aboutme&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As we can see above, the function returns a list with a lot of different basic attributes like &lt;code&gt;reputation&lt;/code&gt; and &lt;code&gt;suspicious&lt;/code&gt;. It also returns some interesting attributes like &lt;code&gt;data_breach&lt;/code&gt; - whether the email id was part of some data leak and &lt;code&gt;profiles&lt;/code&gt; - the places / profiles on internet where the email id has appeared.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;emailrep---use-case-multiple-ids&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;emailrep - use-case: Multiple IDs&lt;/h3&gt;
&lt;p&gt;As a Data Scientist, It’d be rare that you are dealing with single email ID for which the reputation could be simply found online. Our programming skills would play well when we’ve got to do this for a bulk of email ids.&lt;/p&gt;
&lt;p&gt;Let’s try to find out if reptuation of about 3 IDs together and assigning the output in a dataframe so that it could be used for any further purpose like visualization.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# list of email ids

email_ids &amp;lt;- c(&amp;quot;info@jabberbomb.com&amp;quot;, 
               &amp;quot;bensonjoyce39@gmail.com&amp;quot;,
               &amp;quot;channing@indiehackers.com&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;We’ll use &lt;code&gt;purrr&lt;/code&gt; for a bit of functional programming (with &lt;code&gt;map()&lt;/code&gt;)&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(purrr)
library(magrittr)

result_df &amp;lt;- map(email_ids, email_rep) %&amp;gt;%
  map_df(., magrittr::extract, c(&amp;quot;email&amp;quot;,&amp;quot;reputation&amp;quot;,&amp;quot;suspicious&amp;quot;))

result_df&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## # A tibble: 3 x 3
##   email                     reputation suspicious
##   &amp;lt;chr&amp;gt;                     &amp;lt;chr&amp;gt;      &amp;lt;lgl&amp;gt;     
## 1 info@jabberbomb.com       medium     TRUE      
## 2 bensonjoyce39@gmail.com   none       TRUE      
## 3 channing@indiehackers.com high       FALSE&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;Thus, we learnt how to use &lt;code&gt;emailrep&lt;/code&gt; to bulk identify reptuation and other such risk attributes of email ids. This should help in Data Security, Validating email for Email Marketing and in Salesforce Automation and many other instances depending upon your area of business.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;references&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;References&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/hrbrmstr/emailrep&#34;&gt;emailrep - R Package by Bob Rudis&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://emailrep.io/&#34;&gt;emailrepo.io&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://emailrep.io/docs/&#34;&gt;emailrepo.io Docs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to embed Excel-like Spreadsheet Table in RMarkdown</title>
      <author>AbdulMajedRaja RS</author>
      <link>/how-to-embed-excel-like-spreadsheet-table-in-rmarkdown/</link>
      <pubDate>Tue, 30 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/how-to-embed-excel-like-spreadsheet-table-in-rmarkdown/</guid>
      <description>
&lt;script src=&#34;/rmarkdown-libs/htmlwidgets/htmlwidgets.js&#34;&gt;&lt;/script&gt;
&lt;link href=&#34;/rmarkdown-libs/jexcel/css/jexcel.min.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/rmarkdown-libs/jexcel/css/japp.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;link href=&#34;/rmarkdown-libs/jexcel/css/jsuites.css&#34; rel=&#34;stylesheet&#34; /&gt;
&lt;script src=&#34;/rmarkdown-libs/jexcel/js/jexcel.min.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jexcel/js/japp.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jexcel/js/jsuites.js&#34;&gt;&lt;/script&gt;
&lt;script src=&#34;/rmarkdown-libs/jexcel-binding/jexcel.js&#34;&gt;&lt;/script&gt;


&lt;p&gt;If there’s a component that’s least interactive in an RMarkdown rendered document or a Shiny app - that’d be the Table that’s displayed. Yes, &lt;code&gt;datatable&lt;/code&gt; does a good job of improving the Table Apperance and custom formatting like Conditional Formatting, it doesn’t give a Google Spreadsheet or Microsoft Excel flavor. This post is to let you know how you can embed that excel-like spreadsheet Table in your Rmarkdown.&lt;/p&gt;
&lt;div id=&#34;excelr---intro&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;excelR - Intro&lt;/h3&gt;
&lt;p&gt;The package that’s going to help in this endeavor is &lt;a href=&#34;https://github.com/Swechhya/excelR&#34;&gt;&lt;code&gt;excelR&lt;/code&gt;&lt;/a&gt; by &lt;strong&gt;Swechhya Bista&lt;/strong&gt;. This is an R interface to ‘&lt;a href=&#34;https://bossanova.uk/jexcel/v3/&#34;&gt;jExcel&lt;/a&gt;’ library to create web-based interactive tables and spreadsheets compatible with ‘Excel’ or any other spreadsheet software.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;excelr---installation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;excelR - Installation&lt;/h3&gt;
&lt;p&gt;The stable version of &lt;code&gt;excelR&lt;/code&gt; can be installed from CRAN:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;#39;excelR&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or, the latest development version from Github:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;devtools::install_github(&amp;#39;Swechhya/excelR&amp;#39;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;excelr---loading-and-basic-example&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;excelR - Loading and Basic Example&lt;/h3&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(excelR)

excelTable(head(iris)) &lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-1&#34; style=&#34;width:0px;height:0px;&#34; class=&#34;jexcel html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-1&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[[5.1,3.5,1.4,0.2,&#34;setosa&#34;],[4.9,3,1.4,0.2,&#34;setosa&#34;],[4.7,3.2,1.3,0.2,&#34;setosa&#34;],[4.6,3.1,1.5,0.2,&#34;setosa&#34;],[5,3.6,1.4,0.2,&#34;setosa&#34;],[5.4,3.9,1.7,0.4,&#34;setosa&#34;]],&#34;colHeaders&#34;:[&#34;Sepal.Length&#34;,&#34;Sepal.Width&#34;,&#34;Petal.Length&#34;,&#34;Petal.Width&#34;,&#34;Species&#34;],&#34;columnSorting&#34;:true,&#34;columnDrag&#34;:false,&#34;columnResize&#34;:true,&#34;rowResize&#34;:false,&#34;rowDrag&#34;:true,&#34;editable&#34;:true,&#34;allowInsertRow&#34;:true,&#34;allowInsertColumn&#34;:true,&#34;allowDeleteRow&#34;:true,&#34;allowDeleteColumn&#34;:true,&#34;allowRenameColumn&#34;:true,&#34;allowComments&#34;:false,&#34;wordWrap&#34;:false,&#34;selectionCopy&#34;:true,&#34;search&#34;:false,&#34;fullscreen&#34;:false,&#34;lazyLoading&#34;:false,&#34;loadingSpin&#34;:false},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;excel-formulas&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Excel Formulas&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;excelR&lt;/code&gt; helps you create spreadsheet tables that support Basic Excel Forumulas.
In the table below, 1st Column 6th Row (A6) if you enter &lt;code&gt;=SUM(A1:A5)&lt;/code&gt; you’d get the total sum of all the 5 cells above.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(excelR)

df = head(iris)

excelTable(df, minDimensions = c(ncol(df),nrow(df)+1)) &lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;## Warning in excelTable(df, minDimensions = c(ncol(df), nrow(df) + 1)): Since
## both column title and colHeaders are not specified &amp;#39;data&amp;#39; column name will
## be used as column headers&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-2&#34; style=&#34;width:0px;height:0px;&#34; class=&#34;jexcel html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-2&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[[5.1,3.5,1.4,0.2,&#34;setosa&#34;],[4.9,3,1.4,0.2,&#34;setosa&#34;],[4.7,3.2,1.3,0.2,&#34;setosa&#34;],[4.6,3.1,1.5,0.2,&#34;setosa&#34;],[5,3.6,1.4,0.2,&#34;setosa&#34;],[5.4,3.9,1.7,0.4,&#34;setosa&#34;]],&#34;colHeaders&#34;:[&#34;Sepal.Length&#34;,&#34;Sepal.Width&#34;,&#34;Petal.Length&#34;,&#34;Petal.Width&#34;,&#34;Species&#34;],&#34;minDimensions&#34;:[5,7],&#34;columnSorting&#34;:true,&#34;columnDrag&#34;:false,&#34;columnResize&#34;:true,&#34;rowResize&#34;:false,&#34;rowDrag&#34;:true,&#34;editable&#34;:true,&#34;allowInsertRow&#34;:true,&#34;allowInsertColumn&#34;:true,&#34;allowDeleteRow&#34;:true,&#34;allowDeleteColumn&#34;:true,&#34;allowRenameColumn&#34;:true,&#34;allowComments&#34;:false,&#34;wordWrap&#34;:false,&#34;selectionCopy&#34;:true,&#34;search&#34;:false,&#34;fullscreen&#34;:false,&#34;lazyLoading&#34;:false,&#34;loadingSpin&#34;:false},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;dropdown-column&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Dropdown Column&lt;/h3&gt;
&lt;p&gt;In this example, We’d see how to create the table with a column that offers Dropdowns. This is primarily done with the paramater &lt;code&gt;source&lt;/code&gt; while building the &lt;code&gt;data.frame&lt;/code&gt; of &lt;code&gt;columns&lt;/code&gt;.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(excelR)

 data = data.frame( Country = c(&amp;#39;India&amp;#39;, &amp;#39;India&amp;#39;, &amp;#39;US&amp;#39;,&amp;#39;US&amp;#39;), 
          City = c(&amp;#39;Bangalore&amp;#39;, &amp;#39;Mumbai&amp;#39;, &amp;#39;NY&amp;#39;, &amp;#39;SA&amp;#39;))

 columns = data.frame(title=c(&amp;#39;Country&amp;#39;, &amp;#39;City&amp;#39;),
                      width= c(300, 300),
                      type=c(&amp;#39;text&amp;#39;, &amp;#39;dropdown&amp;#39;),
                      source=I(list(0,c(&amp;#39;Bangalore&amp;#39;, &amp;#39;Mumbai&amp;#39;, &amp;#39;NY&amp;#39;, &amp;#39;SA&amp;#39;,&amp;#39;Delhi&amp;#39;,&amp;#39;Washington&amp;#39;))))
 excelTable(data=data, columns = columns)&lt;/code&gt;&lt;/pre&gt;
&lt;div id=&#34;htmlwidget-3&#34; style=&#34;width:0px;height:0px;&#34; class=&#34;jexcel html-widget&#34;&gt;&lt;/div&gt;
&lt;script type=&#34;application/json&#34; data-for=&#34;htmlwidget-3&#34;&gt;{&#34;x&#34;:{&#34;data&#34;:[[&#34;India&#34;,&#34;Bangalore&#34;],[&#34;India&#34;,&#34;Mumbai&#34;],[&#34;US&#34;,&#34;NY&#34;],[&#34;US&#34;,&#34;SA&#34;]],&#34;columns&#34;:[{&#34;title&#34;:&#34;Country&#34;,&#34;width&#34;:300,&#34;type&#34;:&#34;text&#34;,&#34;source&#34;:[0]},{&#34;title&#34;:&#34;City&#34;,&#34;width&#34;:300,&#34;type&#34;:&#34;dropdown&#34;,&#34;source&#34;:[&#34;Bangalore&#34;,&#34;Mumbai&#34;,&#34;NY&#34;,&#34;SA&#34;,&#34;Delhi&#34;,&#34;Washington&#34;]}],&#34;columnSorting&#34;:true,&#34;columnDrag&#34;:false,&#34;columnResize&#34;:true,&#34;rowResize&#34;:false,&#34;rowDrag&#34;:true,&#34;editable&#34;:true,&#34;allowInsertRow&#34;:true,&#34;allowInsertColumn&#34;:true,&#34;allowDeleteRow&#34;:true,&#34;allowDeleteColumn&#34;:true,&#34;allowRenameColumn&#34;:true,&#34;allowComments&#34;:false,&#34;wordWrap&#34;:false,&#34;selectionCopy&#34;:true,&#34;search&#34;:false,&#34;fullscreen&#34;:false,&#34;lazyLoading&#34;:false,&#34;loadingSpin&#34;:false},&#34;evals&#34;:[],&#34;jsHooks&#34;:[]}&lt;/script&gt;
&lt;/div&gt;
&lt;div id=&#34;more-features&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;More Features&lt;/h3&gt;
&lt;p&gt;While the above two examples are used to explain the type of offerings that &lt;code&gt;excelR&lt;/code&gt; provides, &lt;code&gt;excelR&lt;/code&gt; is much more than those two:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Insert and delete rows and columns.&lt;/li&gt;
&lt;li&gt;Drag and drop columns&lt;/li&gt;
&lt;li&gt;Resizable rows and columns&lt;/li&gt;
&lt;li&gt;Merge rows and columns&lt;/li&gt;
&lt;li&gt;Search&lt;/li&gt;
&lt;li&gt;Pagination&lt;/li&gt;
&lt;li&gt;Lazy loading&lt;/li&gt;
&lt;li&gt;Native color picker&lt;/li&gt;
&lt;li&gt;Data picker dropdown with autocomplete, multiple, and icons feature&lt;/li&gt;
&lt;li&gt;Date picker&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div id=&#34;summary&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;excelR&lt;/code&gt; is one of those R packages which may not seem to be holding Data Science use-cases right off the box, but can become quite handy as we start exploring new ideas and implement them due the nature of the package’s flexibility and customizations it offers. Nevertheless, &lt;code&gt;excelR&lt;/code&gt; will be very valuable while designing UI interfaces with &lt;code&gt;shiny&lt;/code&gt; or in fact,for a more interactive &lt;code&gt;RMarkdown&lt;/code&gt; document / report. Check out excelR’s own exhaustive &lt;a href=&#34;https://swechhya.github.io/excelR/&#34;&gt;documentation here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
    <item>
      <title>How to do negation-proof sentiment analysis in R</title>
      <author>AbdulMajedRaja RS</author>
      <link>/how-to-do-negation-proof-sentiment-analysis-in-r/</link>
      <pubDate>Mon, 29 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>/how-to-do-negation-proof-sentiment-analysis-in-r/</guid>
      <description>


&lt;p&gt;&lt;strong&gt;Sentiment Analysis&lt;/strong&gt; is one of those things in Machine learning which is still getting improvement with the rise of Deep Learning based NLP solutions. There are many things like &lt;em&gt;Sarcasm&lt;/em&gt;, &lt;em&gt;Negations&lt;/em&gt; and similar items make Sentiment Analysis a rather tough nut to crack.&lt;/p&gt;
&lt;p&gt;Deep learning as much as it’s effective, it’s also computationally expensive and if you are ready to trade off between Cost (expense) and Accuracy, then you this is the solution for building a negation-proof Sentiment Analysis solution (in R).&lt;/p&gt;
&lt;div id=&#34;whats-negation-proof&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;What’s Negation (Proof)?&lt;/h3&gt;
&lt;p&gt;Typical &lt;code&gt;lexicon&lt;/code&gt; based Sentiment Analysis solutions can’t handle Negations easily - which is that &lt;strong&gt;good&lt;/strong&gt; is &lt;strong&gt;positive&lt;/strong&gt; and &lt;strong&gt;not good&lt;/strong&gt; is &lt;strong&gt;negative&lt;/strong&gt;. &lt;strong&gt;Negation Proof&lt;/strong&gt; solution is something that can handle such negations and classify their &lt;code&gt;polarity&lt;/code&gt; (&lt;code&gt;sentiment&lt;/code&gt;) correctly.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;sentimentr&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;sentimentr&lt;/h3&gt;
&lt;p&gt;For building a negation-proof sentiment analysis solution, we’re going to use the R package &lt;code&gt;sentimentr&lt;/code&gt; by &lt;em&gt;Tyler Rinker&lt;/em&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;why-sentimentr&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Why sentimentr?&lt;/h3&gt;
&lt;p&gt;According to the documentation of &lt;a href=&#34;https://github.com/trinker/sentimentr&#34;&gt;sentimentr&lt;/a&gt;,&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;em&gt;So what does&lt;/em&gt;&lt;/strong&gt; &lt;strong&gt;sentimentr&lt;/strong&gt; &lt;strong&gt;&lt;em&gt;do that other packages don’t?&lt;/em&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;sentimentr&lt;/strong&gt; attempts to take into account valence shifters (i.e.,
negators, amplifiers (intensifiers), de-amplifiers (downtoners), and
adversative conjunctions) while maintaining speed. Simply put,
&lt;strong&gt;sentimentr&lt;/strong&gt; is an augmented dictionary lookup.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;For more information on Valence Shifters, Check out sentimentr’s &lt;a href=&#34;https://github.com/trinker/sentimentr/blob/master/README.md&#34;&gt;documentation&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;installation&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;You can install the stable version of &lt;code&gt;sentimentr&lt;/code&gt; from CRAN:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;install.packages(&amp;quot;sentimentr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;p&gt;install the development version from Github:&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;# install.packages(&amp;quot;devtools&amp;quot;)

devtools::install_github(&amp;quot;trinker/lexicon&amp;quot;)
devtools::install_github(&amp;quot;trinker/sentimentr&amp;quot;)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;loading-the-package&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Loading the package&lt;/h3&gt;
&lt;p&gt;Let’s import &lt;code&gt;sentimentr&lt;/code&gt; and also &lt;code&gt;magrittr&lt;/code&gt; for pipe operator (&lt;code&gt;%&amp;gt;%&lt;/code&gt;) and &lt;code&gt;dplyr&lt;/code&gt; for data manipulation.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;library(sentimentr) 
library(magrittr)
library(dplyr)&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sample-text-with-negations&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Sample Text (with Negations)&lt;/h3&gt;
&lt;p&gt;Let’s define two sentences for us to check if &lt;code&gt;sentimentr&lt;/code&gt; is negation-proof.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;text1 &amp;lt;- &amp;quot;I am a good girl. Today I am happy&amp;quot;

text2 &amp;lt;- &amp;quot;I am not a good girl. Today I&amp;#39;m not happy&amp;quot;&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;div id=&#34;sentiment-analysis-in-action&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;Sentiment Analysis in Action&lt;/h3&gt;
&lt;p&gt;We’ll use the function &lt;code&gt;sentiment()&lt;/code&gt; to identify the approximate the sentiment (polarity) of text by sentence.&lt;/p&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sentimentr::sentiment(text1)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    element_id sentence_id word_count sentiment
## 1:          1           1          5 0.3354102
## 2:          1           2          4 0.3750000&lt;/code&gt;&lt;/pre&gt;
&lt;pre class=&#34;r&#34;&gt;&lt;code&gt;sentimentr::sentiment(text2)&lt;/code&gt;&lt;/pre&gt;
&lt;pre&gt;&lt;code&gt;##    element_id sentence_id word_count  sentiment
## 1:          1           1          6 -0.3061862
## 2:          1           2          4 -0.3750000&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As we can see from the above outputs, using &lt;code&gt;sentimentr&lt;/code&gt; is doing a good job in rightly scoring the sentiment score for sentence with and without negations (valence shifters).&lt;/p&gt;
&lt;/div&gt;
&lt;div id=&#34;the-end&#34; class=&#34;section level3&#34;&gt;
&lt;h3&gt;The End&lt;/h3&gt;
&lt;p&gt;This is just a very simple (perhaps, Naive too) walkthrough of the &lt;code&gt;sentimentr&lt;/code&gt; package but it has got a lot more like &lt;code&gt;sentiment_by()&lt;/code&gt;, &lt;code&gt;highlight()&lt;/code&gt;, &lt;code&gt;profanity()&lt;/code&gt; and much more. &lt;strong&gt;Tyler Rinker&lt;/strong&gt; has got a very nice, comprehensive and super-helpful documentation and also benchmarks comparing &lt;code&gt;sentimentr&lt;/code&gt; with other similar packages.&lt;/p&gt;
&lt;/div&gt;
</description>
    </item>
    
  </channel>
</rss>